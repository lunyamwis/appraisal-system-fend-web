{"ast":null,"code":"var _jsxFileName = \"/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/context/messages.js\";\nimport React, { useReducer, createContext } from 'react';\nconst initialState = {\n  message: null,\n  messages: null\n};\nconst MessageContext = createContext({\n  message: null,\n  messages: null\n});\n\nfunction messageReducer(state, action) {\n  switch (action.type) {\n    case 'SEND_MESSAGE':\n      return { ...state,\n        message: action.payload\n      };\n\n    case 'GET_MESSAGE':\n      return { ...state,\n        message: action.payload\n      };\n\n    case 'GET_MESSAGES':\n      return { ...state,\n        messages: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction MessageProvider(props) {\n  const [state, dispatch] = useReducer(messageReducer, initialState);\n\n  function sendMessage(userData) {\n    dispatch({\n      type: 'SEND_MESSAGE',\n      payload: userData\n    });\n  }\n\n  function getMessage(userData) {\n    dispatch({\n      type: 'GET_MESSAGE',\n      payload: userData\n    });\n  }\n\n  function getMessages(userData) {\n    dispatch({\n      type: 'GET_MESSAGES',\n      payload: userData\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(MessageContext.Provider, Object.assign({\n    value: {\n      message: state.message,\n      messages: state.messages,\n      sendMessage,\n      getMessage,\n      getMessages\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport { MessageContext, MessageProvider };","map":{"version":3,"sources":["/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/context/messages.js"],"names":["React","useReducer","createContext","initialState","message","messages","MessageContext","messageReducer","state","action","type","payload","MessageProvider","props","dispatch","sendMessage","userData","getMessage","getMessages"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,IADQ;AAEjBC,EAAAA,QAAQ,EAAE;AAFO,CAArB;AAOA,MAAMC,cAAc,GAAGJ,aAAa,CAAC;AACjCE,EAAAA,OAAO,EAAE,IADwB;AAEjCC,EAAAA,QAAQ,EAAE;AAFuB,CAAD,CAApC;;AAKA,SAASE,cAAT,CAAwBC,KAAxB,EAA+BC,MAA/B,EAAuC;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,cAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHJ,QAAAA,OAAO,EAAEK,MAAM,CAACE;AAFb,OAAP;;AAIJ,SAAK,aAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHJ,QAAAA,OAAO,EAAEK,MAAM,CAACE;AAFb,OAAP;;AAIJ,SAAK,cAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,QAAQ,EAAEI,MAAM,CAACE;AAFd,OAAP;;AAIJ;AACI,aAAOH,KAAP;AAjBR;AAmBH;;AAED,SAASI,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBb,UAAU,CAACM,cAAD,EAAiBJ,YAAjB,CAApC;;AAEA,WAASY,WAAT,CAAqBC,QAArB,EAA+B;AAE3BF,IAAAA,QAAQ,CAAC;AACLJ,MAAAA,IAAI,EAAE,cADD;AAELC,MAAAA,OAAO,EAAEK;AAFJ,KAAD,CAAR;AAKH;;AACD,WAASC,UAAT,CAAoBD,QAApB,EAA8B;AAE1BF,IAAAA,QAAQ,CAAC;AACLJ,MAAAA,IAAI,EAAE,aADD;AAELC,MAAAA,OAAO,EAAEK;AAFJ,KAAD,CAAR;AAKH;;AACD,WAASE,WAAT,CAAqBF,QAArB,EAA+B;AAE3BF,IAAAA,QAAQ,CAAC;AACLJ,MAAAA,IAAI,EAAE,cADD;AAELC,MAAAA,OAAO,EAAEK;AAFJ,KAAD,CAAR;AAKH;;AAED,sBACI,oBAAC,cAAD,CAAgB,QAAhB;AACI,IAAA,KAAK,EAAE;AACHZ,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OADZ;AACqBC,MAAAA,QAAQ,EAAEG,KAAK,CAACH,QADrC;AAEHU,MAAAA,WAFG;AAEUE,MAAAA,UAFV;AAEsBC,MAAAA;AAFtB;AADX,KAKQL,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AASH;;AAED,SAASP,cAAT,EAAyBM,eAAzB","sourcesContent":["import React, { useReducer, createContext } from 'react';\n\nconst initialState = {\n    message: null,\n    messages: null,\n}\n\n\n\nconst MessageContext = createContext({\n    message: null,\n    messages: null,\n});\n\nfunction messageReducer(state, action) {\n    switch (action.type) {\n        case 'SEND_MESSAGE':\n            return {\n                ...state,\n                message: action.payload,\n            }\n        case 'GET_MESSAGE':\n            return {\n                ...state,\n                message: action.payload,\n            }\n        case 'GET_MESSAGES':\n            return {\n                ...state,\n                messages: action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nfunction MessageProvider(props) {\n    const [state, dispatch] = useReducer(messageReducer, initialState);\n\n    function sendMessage(userData) {\n\n        dispatch({\n            type: 'SEND_MESSAGE',\n            payload: userData,\n        })\n\n    }\n    function getMessage(userData) {\n\n        dispatch({\n            type: 'GET_MESSAGE',\n            payload: userData,\n        })\n\n    }\n    function getMessages(userData) {\n\n        dispatch({\n            type: 'GET_MESSAGES',\n            payload: userData,\n        })\n\n    }\n\n    return (\n        <MessageContext.Provider\n            value={{\n                message: state.message, messages: state.messages,\n                sendMessage, getMessage, getMessages\n            }}\n            {...props}\n        />\n    )\n}\n\nexport { MessageContext, MessageProvider }\n"]},"metadata":{},"sourceType":"module"}