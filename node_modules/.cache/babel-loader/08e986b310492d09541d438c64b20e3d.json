{"ast":null,"code":"var _jsxFileName = \"/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/messages/listMessages.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Grid, Button, Container, Header, Icon, Form, Label, Menu, Tab, Pagination } from 'semantic-ui-react';\nimport moment from 'moment';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { GET_WHATSAPP_MESSAGES } from './queries';\nimport '../root.scss';\nimport { AuthContext } from '../../context/auth';\nimport { WhatsAppMessageContext } from '../../context/whatsappMessages';\nexport default function ListWhatsappMessages(props) {\n  const authContext = useContext(AuthContext);\n  const context = useContext(WhatsAppMessageContext);\n  const [fetched, setFetched] = useState(false);\n  const [pagination, setPagination] = useState({\n    limit: 10,\n    page: 1\n  });\n  const [messages, setMessages] = useState([]);\n  const [fetchMessages, {\n    data: data\n  }] = useLazyQuery(GET_WHATSAPP_MESSAGES, {\n    variables: pagination\n  });\n  useEffect(() => {\n    if (data) {\n      setMessages(data.whatsappMessages);\n      setFetched(true);\n    }\n  }, [data, context, fetched]);\n  useEffect(() => {\n    if (!fetched) {\n      fetchMessages();\n    }\n  });\n\n  const handleOnPageChange = (e, data) => {\n    e.preventDefault();\n    setPagination({ ...pagination,\n      page: data.activePage\n    });\n  };\n\n  const handleOnSearch = e => {\n    e.preventDefault();\n    setPagination({ ...pagination,\n      search: e.target.value\n    });\n  };\n\n  function messagesList() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      columns: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, \"Sent At\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, \"WhatsApp Response\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, \"Option\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"Assign Sales Agent\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \"Enter Chat Room\"))), messages && messages.items && messages.items.map((message, key) => /*#__PURE__*/React.createElement(Grid.Row, {\n      key: message.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, key + 1, \". \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, moment(message.createdAt).format('DD/MM/YYYY, HH:mm:ss'))), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, message.whatsappResponse), /*#__PURE__*/React.createElement(Grid.Column, {\n      floated: \"left\",\n      width: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, message.option), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 1,\n      floated: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/staff/dashboard/crm/whatsAppmessage/${message.whatsappPhoneNumber}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      icon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, message.whatsappPhoneNumber, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 46\n      }\n    }), /*#__PURE__*/React.createElement(Icon, {\n      name: \"external alternate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    })))))));\n  }\n\n  const panes = [{\n    menuItem: /*#__PURE__*/React.createElement(Menu.Item, {\n      key: \"messages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, \"Messages\", /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    })),\n    render: () => {\n      return /*#__PURE__*/React.createElement(Tab.Pane, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }, messagesList(), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }), messages && messages.pages && /*#__PURE__*/React.createElement(Pagination, {\n        defaultActivePage: messages.page,\n        firstItem: null,\n        lastItem: null,\n        pointing: true,\n        secondary: true,\n        onPageChange: handleOnPageChange,\n        totalPages: messages.pages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 44\n        }\n      }));\n    }\n  }];\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    columns: 2,\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Header.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/staff/dashboard/overview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, \"Overview\"), \" \", '>', \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/staff/dashboard/crm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 72\n    }\n  }, \"CRM\"), \" \", '>', \" Messages\", /*#__PURE__*/React.createElement(Header.Subheader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, \"Hey there \", authContext.user.username, \", here is your contact persons dashboard\")))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    columns: 1,\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    placeholder: \"Sms, Email, ...\",\n    name: \"name\",\n    onChange: handleOnSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form.Button, {\n    icon: true,\n    size: 'medium',\n    onClick: e => {\n      e.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }), \"Find Message\"))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    columns: 1,\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    panes: panes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/messages/listMessages.js"],"names":["React","useState","useEffect","useContext","Link","Grid","Button","Container","Header","Icon","Form","Label","Menu","Tab","Pagination","moment","useQuery","useLazyQuery","GET_WHATSAPP_MESSAGES","AuthContext","WhatsAppMessageContext","ListWhatsappMessages","props","authContext","context","fetched","setFetched","pagination","setPagination","limit","page","messages","setMessages","fetchMessages","data","variables","whatsappMessages","handleOnPageChange","e","preventDefault","activePage","handleOnSearch","search","target","value","messagesList","items","map","message","key","id","createdAt","format","whatsappResponse","option","whatsappPhoneNumber","panes","menuItem","render","pages","user","username"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Grid,\n  Button,\n  Container,\n  Header,\n  Icon,\n  Form,\n  Label,\n  Menu,\n  Tab,\n  Pagination\n} from 'semantic-ui-react';\nimport moment from 'moment';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { GET_WHATSAPP_MESSAGES } from './queries'\nimport '../root.scss';\nimport { AuthContext } from '../../context/auth';\nimport { WhatsAppMessageContext } from '../../context/whatsappMessages';\n\nexport default function ListWhatsappMessages(props) {\n  const authContext = useContext(AuthContext);\n  const context = useContext(WhatsAppMessageContext);\n  const [fetched, setFetched] = useState(false);\n  const [pagination, setPagination] = useState({\n    limit: 10,\n    page: 1,\n  });\n\n  const [messages, setMessages] = useState([]);\n\n  const [fetchMessages, { data: data }] = useLazyQuery(GET_WHATSAPP_MESSAGES, {\n      variables: pagination\n  });\n\n  useEffect(() => {\n    if (data) {\n      setMessages(data.whatsappMessages);\n      setFetched(true);\n    }\n  }, [data, context, fetched,]);\n  \n  useEffect(() => {\n    if (!fetched) {\n      fetchMessages()\n    }\n  })\n  \n  const handleOnPageChange = (e, data) => {\n    e.preventDefault()\n    setPagination({ ...pagination, page: data.activePage })\n  }\n  \n  const handleOnSearch = (e) => {\n    e.preventDefault()\n    setPagination({ ...pagination, search: e.target.value })\n  }\n\n\n  function messagesList() {\n\n    return (\n      <Grid container columns={5} >\n        <Grid.Row>\n          <Grid.Column>\n            <Header as=\"h4\">Sent At</Header>\n          </Grid.Column>\n          <Grid.Column>\n            <Header as=\"h4\">WhatsApp Response</Header>\n          </Grid.Column>\n          <Grid.Column>\n            <Header as=\"h4\">Option</Header>\n          </Grid.Column>\n          <Grid.Column>\n            <Header as=\"h4\">Assign Sales Agent</Header>\n          </Grid.Column>\n          <Grid.Column>\n            <Header as=\"h4\">Enter Chat Room</Header>\n          </Grid.Column>\n        </Grid.Row>\n\n        { messages && messages.items && messages.items.map((message, key) =>\n          <Grid.Row key={message.id}>\n            <Grid.Column>\n              <span>{key + 1}. </span>\n              <span >{moment(message.createdAt).format('DD/MM/YYYY, HH:mm:ss')}</span>\n            </Grid.Column>\n            <Grid.Column>\n              {message.whatsappResponse}\n            </Grid.Column>\n            <Grid.Column floated='left' width={3}>\n              {message.option}\n            </Grid.Column>\n            <Grid.Column width={1} floated='left'>\n              <Link to={`/staff/dashboard/crm/whatsAppmessage/${message.whatsappPhoneNumber}`}>              \n                <Button icon >\n                {message.whatsappPhoneNumber}<hr/>\n                <Icon name='external alternate' />\n                </Button>\n              </Link>\n            </Grid.Column>\n          </Grid.Row>\n        )}\n\n      </Grid>\n    )\n  }\n\n  const panes = [\n    {\n      menuItem: (\n        <Menu.Item key='messages'>\n          {/* TODO: implement count  */}\n          Messages<Label></Label>\n        </Menu.Item>\n      ),\n      render: () => {\n        return (\n          <Tab.Pane>\n            {messagesList()}\n            <br />\n            {messages && messages.pages && <Pagination\n              defaultActivePage={messages.page}\n              firstItem={null}\n              lastItem={null}\n              pointing\n              secondary\n              onPageChange={handleOnPageChange}\n              totalPages={messages.pages}\n            />}\n          </Tab.Pane>\n\n)\n      },\n    },\n\n  ]\n\n  return (\n    <Container>\n      <Grid container columns={2} padded>\n        <Grid.Column>\n          <div className=\"content-wrapper\">\n            <Header as='h2'>\n              <Icon name='settings' />\n              <Header.Content>\n                <a href=\"/staff/dashboard/overview\">Overview</a> {'>'} <a href=\"/staff/dashboard/crm\">CRM</a> {'>'} Messages\n                <Header.Subheader>\n                  Hey there {authContext.user.username}, here is your contact persons dashboard\n                </Header.Subheader>\n              </Header.Content>\n            </Header>\n          </div>\n        </Grid.Column>\n\n        \n      </Grid>\n\n      <Grid container columns={1} padded>\n        <Grid.Column>\n          <Form>\n            <Form.Group>\n              <Form.Input\n                placeholder='Sms, Email, ...'\n                name='name'\n                onChange={handleOnSearch}\n              />\n              <Form.Button icon size={'medium'} onClick={(e) => { e.preventDefault() }}>\n                <Icon name=\"search\" />\n            Find Message\n          </Form.Button>\n            </Form.Group>\n          </Form>\n        </Grid.Column>\n      </Grid>\n\n      <Grid container columns={1} padded>\n        <Grid.Column>\n          <Tab panes={panes} />\n\n        </Grid.Column>\n      </Grid>\n\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}