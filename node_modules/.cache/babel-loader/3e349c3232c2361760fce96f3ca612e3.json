{"ast":null,"code":"var _jsxFileName = \"/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/clients/messageDetails.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Grid, Container, Divider, Header, Icon, Segment, Item, Menu, Tab, Loader } from 'semantic-ui-react';\nimport moment from 'moment';\nimport { useQuery } from '@apollo/react-hooks';\nimport { MessageContext } from '../../context/messages';\nimport { GET_MESSAGE } from './queries';\nimport { AuthContext } from '../../context/auth';\nexport default function Message({\n  props\n}) {\n  const authContext = useContext(AuthContext);\n  const [message, setMessage] = useState({});\n  const context = useContext(MessageContext);\n  const messageId = props.computedMatch.params.messageId;\n  let recipientsColumns = 1;\n  const {\n    loading,\n    data: messageData\n  } = useQuery(GET_MESSAGE, {\n    variables: {\n      id: messageId\n    }\n  });\n  useEffect(() => {\n    if (messageData) {\n      setMessage(messageData.message);\n    }\n  }, [messageData, message, context]);\n\n  if (message.individualClients) {\n    recipientsColumns = [!!message.individualClients.length, !!message.corporateClients.length, !!message.contactPersons.length].filter(Boolean).length;\n  }\n\n  function messageDetails() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, loading ? /*#__PURE__*/React.createElement(Loader, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 28\n      }\n    }) : /*#__PURE__*/React.createElement(Container, {\n      as: Segment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 48\n      }\n    }, message.id && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      columns: [!!message.sms, !!message.emailBody].filter(Boolean).length,\n      divided: true,\n      relaxed: true,\n      stackable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, message.sms && /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 42\n      }\n    }, \"Message details\")), /*#__PURE__*/React.createElement(Item.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Item.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Divider, {\n      horizontal: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 45\n      }\n    }, \"SMS\"), /*#__PURE__*/React.createElement(Item.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 49\n      }\n    }, \"Message: \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 65\n      }\n    }, message.sms), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 109\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 115\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 49\n      }\n    }, \"Sent At: \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 65\n      }\n    }, message.sentAt ? moment(message.sentAt).format('DD/MM/YYYY, HH:mm:ss') : moment(message.createdAt).format('DD/MM/YYYY, HH:mm:ss')), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 227\n      }\n    })))))), message.emailSubject && /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 54\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 42\n      }\n    }, \"Email\")), /*#__PURE__*/React.createElement(Item.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Item.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Item.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 49\n      }\n    }, \"Subject: \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 65\n      }\n    }, message.emailSubject), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 118\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 125\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 49\n      }\n    }, \"Body: \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 62\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: message.emailBody\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 86\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 156\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 49\n      }\n    }, \"Sent At: \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 65\n      }\n    }, message.sentAt ? moment(message.sentAt).format('DD/MM/YYYY, HH:mm:ss') : moment(message.createdAt).format('DD/MM/YYYY, HH:mm:ss')), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 227\n      }\n    })))))))), /*#__PURE__*/React.createElement(Divider, {\n      horizontal: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"Message Recipients\"), message.id && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      columns: recipientsColumns,\n      divided: true,\n      relaxed: true,\n      stackable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, !!message.individualClients.length && /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 64\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 38\n      }\n    }, \"Individual Clients\")), /*#__PURE__*/React.createElement(Item.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Item.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Item.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 41\n      }\n    }, message.individualClients.map((client, key) => /*#__PURE__*/React.createElement(Link, {\n      key: key,\n      to: `/staff/dashboard/clients/profile/${client.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: \".9em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 53\n      }\n    }, key + 1, \". \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 99\n      }\n    }, client.firstName, \" \", client.lastName, \" - [\", client.email, \"]\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 185\n      }\n    }))))))))), !!message.contactPersons.length && /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 38\n      }\n    }, \"Contact Persons\")), /*#__PURE__*/React.createElement(Item.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Item.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Item.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 41\n      }\n    }, message.contactPersons.map((client, key) => /*#__PURE__*/React.createElement(Link, {\n      key: key,\n      to: `/staff/dashboard/contact-person/profile/${client.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: \".9em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 53\n      }\n    }, key + 1, \". \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 99\n      }\n    }, client.name, \" - [\", client.email, \"]\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 162\n      }\n    }))))))))), !!message.corporateClients.length && /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 63\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 38\n      }\n    }, \"Corporate Clients\")), /*#__PURE__*/React.createElement(Item.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Item.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Item.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 41\n      }\n    }, message.corporateClients.map((client, key) => /*#__PURE__*/React.createElement(Link, {\n      key: key,\n      to: `/staff/dashboard/contact-person/profile/${client.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: \".9em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 53\n      }\n    }, key + 1, \". \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 99\n      }\n    }, client.name), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 143\n      }\n    })))))))))));\n  }\n\n  const panes = [{\n    menuItem: /*#__PURE__*/React.createElement(Menu.Item, {\n      key: \"Message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, \"Message Details\"),\n    render: () => {\n      return /*#__PURE__*/React.createElement(Tab.Pane, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }\n      }, messageDetails());\n    }\n  }];\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    columns: 1,\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Header.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/staff/dashboard/overview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 33\n    }\n  }, \"Overview\"), \" \", '>', \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/staff/dashboard/crm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 88\n    }\n  }, \"CRM\"), \" \", '>', \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/staff/dashboard/crm/messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 133\n    }\n  }, \"Messages\"), \" \", '>', \" Message Details\", /*#__PURE__*/React.createElement(Header.Subheader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 33\n    }\n  }, \"Hey there \", authContext.user.username, \", find a list of motor policies under General Insurance below\")))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    panes: panes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/clients/messageDetails.js"],"names":["React","useState","useContext","useEffect","Link","Grid","Container","Divider","Header","Icon","Segment","Item","Menu","Tab","Loader","moment","useQuery","MessageContext","GET_MESSAGE","AuthContext","Message","props","authContext","message","setMessage","context","messageId","computedMatch","params","recipientsColumns","loading","data","messageData","variables","id","individualClients","length","corporateClients","contactPersons","filter","Boolean","messageDetails","sms","emailBody","sentAt","format","createdAt","emailSubject","__html","map","client","key","fontSize","firstName","lastName","email","name","panes","menuItem","render","user","username"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SACIC,IADJ,EAEIC,SAFJ,EAGIC,OAHJ,EAIIC,MAJJ,EAKIC,IALJ,EAMIC,OANJ,EAOIC,IAPJ,EAQIC,IARJ,EASIC,GATJ,EAUIC,MAVJ,QAWO,mBAXP;AAYA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA4B;AACvC,QAAMC,WAAW,GAAGpB,UAAU,CAACiB,WAAD,CAA9B;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMwB,OAAO,GAAGvB,UAAU,CAACe,cAAD,CAA1B;AACA,QAAMS,SAAS,GAAGL,KAAK,CAACM,aAAN,CAAoBC,MAApB,CAA2BF,SAA7C;AACA,MAAIG,iBAAiB,GAAG,CAAxB;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAI,EAAEC;AAAjB,MAAiChB,QAAQ,CAACE,WAAD,EAAc;AACzDe,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAER;AAAN;AAD8C,GAAd,CAA/C;AAGAvB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI6B,WAAJ,EAAiB;AACbR,MAAAA,UAAU,CAACQ,WAAW,CAACT,OAAb,CAAV;AACH;AACJ,GAJQ,EAIN,CAACS,WAAD,EAAcT,OAAd,EAAuBE,OAAvB,CAJM,CAAT;;AAKA,MAAIF,OAAO,CAACY,iBAAZ,EAA+B;AAE3BN,IAAAA,iBAAiB,GAAG,CAAC,CAAC,CAACN,OAAO,CAACY,iBAAR,CAA0BC,MAA7B,EAAqC,CAAC,CAACb,OAAO,CAACc,gBAAR,CAAyBD,MAAhE,EAAwE,CAAC,CAACb,OAAO,CAACe,cAAR,CAAuBF,MAAjG,EAAyGG,MAAzG,CAAgHC,OAAhH,EAAyHJ,MAA7I;AACH;;AACD,WAASK,cAAT,GAA0B;AACtB,wBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKX,OAAO,gBAAG,oBAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,gBAAuB,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAEpB,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAE1Ba,OAAO,CAACW,EAAR,iBACG,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAC,CAAC,CAACX,OAAO,CAACmB,GAAX,EAAgB,CAAC,CAACnB,OAAO,CAACoB,SAA1B,EAAqCJ,MAArC,CAA4CC,OAA5C,EAAqDJ,MAA9E;AAAsF,MAAA,OAAO,MAA7F;AAA8F,MAAA,OAAO,MAArG;AAAsG,MAAA,SAAS,MAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKb,OAAO,CAACmB,GAAR,iBAAe,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACZ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAS,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAT,CADY,eAEZ,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,UAAU,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eACoB;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBnB,OAAO,CAACmB,GAAjC,CADpB,eACgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhE,eACsE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADtE,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAEoB;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBnB,OAAO,CAACqB,MAAR,GAAiB7B,MAAM,CAACQ,OAAO,CAACqB,MAAT,CAAN,CAAuBC,MAAvB,CAA8B,sBAA9B,CAAjB,GAAyE9B,MAAM,CAACQ,OAAO,CAACuB,SAAT,CAAN,CAA0BD,MAA1B,CAAiC,sBAAjC,CAAlG,CAFpB,eAEsL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFtL,CAFJ,CAFJ,CADJ,CAFY,CADpB,EAiBKtB,OAAO,CAACwB,YAAR,iBAAwB,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACrB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAS,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAT,CADqB,eAErB,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eACoB;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBxB,OAAO,CAACwB,YAAjC,CADpB,eACyE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADzE,oBACgF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhF,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAEiB;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAwB;AAAK,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEzB,OAAO,CAACoB;AAAlB,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,CAFjB,eAE+G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF/G,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,eAGoB;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBpB,OAAO,CAACqB,MAAR,GAAiB7B,MAAM,CAACQ,OAAO,CAACqB,MAAT,CAAN,CAAuBC,MAAvB,CAA8B,sBAA9B,CAAjB,GAAyE9B,MAAM,CAACQ,OAAO,CAACuB,SAAT,CAAN,CAA0BD,MAA1B,CAAiC,sBAAjC,CAAlG,CAHpB,eAGsL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHtL,CADJ,CAFJ,CADJ,CAFqB,CAjB7B,CAHuB,CAFnC,eAuCI,oBAAC,OAAD;AAAS,MAAA,UAAU,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAvCJ,EAyCKtB,OAAO,CAACW,EAAR,iBAEG,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAEL,iBAAzB;AAA4C,MAAA,OAAO,MAAnD;AAAoD,MAAA,OAAO,MAA3D;AAA4D,MAAA,SAAS,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,CAAC,CAACN,OAAO,CAACY,iBAAR,CAA0BC,MAA5B,iBAAsC,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACnC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAS,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAT,CADmC,eAEnC,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKb,OAAO,CAACY,iBAAR,CAA0Bc,GAA1B,CAA8B,CAACC,MAAD,EAASC,GAAT,kBAC3B,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,GAAX;AAAgB,MAAA,EAAE,EAAG,oCAAmCD,MAAM,CAAChB,EAAG,EAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,KAAK,EAAE;AAAEkB,QAAAA,QAAQ,EAAE;AAAZ,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCD,GAAG,GAAG,CAA1C,qBAA8C;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBD,MAAM,CAACG,SAAhC,OAA4CH,MAAM,CAACI,QAAnD,UAAiEJ,MAAM,CAACK,KAAxE,MAA9C,eAAoI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApI,CADJ,CADH,CADL,CADJ,CAFJ,CADJ,CAFmC,CAF3C,EAqBK,CAAC,CAAChC,OAAO,CAACe,cAAR,CAAuBF,MAAzB,iBAAmC,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAChC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAS,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAT,CADgC,eAEhC,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKb,OAAO,CAACe,cAAR,CAAuBW,GAAvB,CAA2B,CAACC,MAAD,EAASC,GAAT,kBACxB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,GAAX;AAAgB,MAAA,EAAE,EAAG,2CAA0CD,MAAM,CAAChB,EAAG,EAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,KAAK,EAAE;AAAEkB,QAAAA,QAAQ,EAAE;AAAZ,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCD,GAAG,GAAG,CAA1C,qBAA8C;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBD,MAAM,CAACM,IAAhC,UAA0CN,MAAM,CAACK,KAAjD,MAA9C,eAA6G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7G,CADJ,CADH,CADL,CADJ,CAFJ,CADJ,CAFgC,CArBxC,EAuCK,CAAC,CAAChC,OAAO,CAACc,gBAAR,CAAyBD,MAA3B,iBAAqC,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAClC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAS,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAT,CADkC,eAElC,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKb,OAAO,CAACc,gBAAR,CAAyBY,GAAzB,CAA6B,CAACC,MAAD,EAASC,GAAT,kBAC1B,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,GAAX;AAAgB,MAAA,EAAE,EAAG,2CAA0CD,MAAM,CAAChB,EAAG,EAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,KAAK,EAAE;AAAEkB,QAAAA,QAAQ,EAAE;AAAZ,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCD,GAAG,GAAG,CAA1C,qBAA8C;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBD,MAAM,CAACM,IAAhC,CAA9C,eAA0F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1F,CADJ,CADH,CADL,CADJ,CAFJ,CADJ,CAFkC,CAvC1C,CA3CR,CADJ;AA0GH;;AAGD,QAAMC,KAAK,GAAG,CACV;AACIC,IAAAA,QAAQ,eACJ,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,GAAG,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFR;AAMIC,IAAAA,MAAM,EAAE,MAAM;AACV,0BACI,oBAAC,GAAD,CAAK,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKlB,cAAc,EADnB,CADJ;AAMH;AAbL,GADU,CAAd;AAkBA,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,MAAM,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,IAAI,EAAC,2BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,OACsD,GADtD,oBAC2D;AAAG,IAAA,IAAI,EAAC,sBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAD3D,OACmG,GADnG,oBACwG;AAAG,IAAA,IAAI,EAAC,+BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADxG,OAC8J,GAD9J,mCAEI,oBAAC,MAAD,CAAQ,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACenB,WAAW,CAACsC,IAAZ,CAAiBC,QADhC,kEAFJ,CAFJ,CADJ,CADJ,CADJ,CADJ,eAmBI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,MAAM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAEJ,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAnBJ,CADJ;AA4BH","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n    Grid,\n    Container,\n    Divider,\n    Header,\n    Icon,\n    Segment,\n    Item,\n    Menu,\n    Tab,\n    Loader\n} from 'semantic-ui-react';\nimport moment from 'moment';\nimport { useQuery } from '@apollo/react-hooks';\nimport { MessageContext } from '../../context/messages';\nimport { GET_MESSAGE } from './queries'\nimport { AuthContext } from '../../context/auth';\n\nexport default function Message({ props }) {\n    const authContext = useContext(AuthContext);\n    const [message, setMessage] = useState({});\n    const context = useContext(MessageContext);\n    const messageId = props.computedMatch.params.messageId\n    let recipientsColumns = 1\n    const { loading, data: messageData } = useQuery(GET_MESSAGE, {\n        variables: { id: messageId }\n    });\n    useEffect(() => {\n        if (messageData) {\n            setMessage(messageData.message);\n        }\n    }, [messageData, message, context]);\n    if (message.individualClients) {\n\n        recipientsColumns = [!!message.individualClients.length, !!message.corporateClients.length, !!message.contactPersons.length].filter(Boolean).length\n    }\n    function messageDetails() {\n        return (\n            <Container>\n\n                {loading ? <Loader active /> : <Container as={Segment}>\n\n                    {message.id &&\n                        <Grid container columns={[!!message.sms, !!message.emailBody].filter(Boolean).length} divided relaxed stackable>\n                            {message.sms && <Grid.Column>\n                                <Segment><Header as='h3'>Message details</Header></Segment>\n                                <Item.Group>\n                                    <Item>\n\n                                        <Item.Content>\n                                            <Divider horizontal>SMS</Divider>\n                                            <Item.Description>\n                                                <b>Message: </b><span className='price'>{message.sms}</span><br /><br />\n                                                <b>Sent At: </b><span className='price'>{message.sentAt ? moment(message.sentAt).format('DD/MM/YYYY, HH:mm:ss') : moment(message.createdAt).format('DD/MM/YYYY, HH:mm:ss')}</span><br />\n                                            </Item.Description>\n                                        </Item.Content>\n                                    </Item>\n                                </Item.Group>\n\n                            </Grid.Column>}\n                            {message.emailSubject && <Grid.Column>\n                                <Segment><Header as='h3'>Email</Header></Segment>\n                                <Item.Group>\n                                    <Item>\n\n                                        <Item.Content>\n                                            <Item.Description>\n                                                <b>Subject: </b><span className='price'>{message.emailSubject}</span><br /> <br />\n                                                <b>Body: </b><span className='price'><div dangerouslySetInnerHTML={{ __html: message.emailBody }} /></span><br />\n                                                <b>Sent At: </b><span className='price'>{message.sentAt ? moment(message.sentAt).format('DD/MM/YYYY, HH:mm:ss') : moment(message.createdAt).format('DD/MM/YYYY, HH:mm:ss')}</span><br />\n                                            </Item.Description>\n                                        </Item.Content>\n                                    </Item>\n                                </Item.Group>\n                            </Grid.Column>}\n                        </Grid>}\n                </Container>}\n                <Divider horizontal>Message Recipients</Divider>\n\n                {message.id &&\n\n                    <Grid container columns={recipientsColumns} divided relaxed stackable>\n\n                        {!!message.individualClients.length && <Grid.Column>\n                            <Segment><Header as='h3'>Individual Clients</Header></Segment>\n                            <Item.Group>\n                                <Item>\n\n                                    <Item.Content>\n                                        <Item.Description>\n                                            {message.individualClients.map((client, key) => (\n                                                <Link key={key} to={`/staff/dashboard/clients/profile/${client.id}`}>\n                                                    <span style={{ fontSize: \".9em\" }}>{key + 1}. <span className='price'>{client.firstName} {client.lastName} - [{client.email}]</span><br /></span>\n                                                </Link>\n                                            ))}\n                                        </Item.Description>\n                                    </Item.Content>\n\n                                </Item>\n\n                            </Item.Group>\n                        </Grid.Column>}\n                        {!!message.contactPersons.length && <Grid.Column>\n                            <Segment><Header as='h3'>Contact Persons</Header></Segment>\n                            <Item.Group>\n                                <Item>\n\n                                    <Item.Content>\n                                        <Item.Description>\n                                            {message.contactPersons.map((client, key) => (\n                                                <Link key={key} to={`/staff/dashboard/contact-person/profile/${client.id}`}>\n                                                    <span style={{ fontSize: \".9em\" }}>{key + 1}. <span className='price'>{client.name} - [{client.email}]</span><br /></span>\n                                                </Link>\n                                            ))}\n                                        </Item.Description>\n                                    </Item.Content>\n\n                                </Item>\n                            </Item.Group>\n                        </Grid.Column>}\n                        {!!message.corporateClients.length && <Grid.Column>\n                            <Segment><Header as='h3'>Corporate Clients</Header></Segment>\n                            <Item.Group>\n                                <Item>\n\n                                    <Item.Content>\n                                        <Item.Description>\n                                            {message.corporateClients.map((client, key) => (\n                                                <Link key={key} to={`/staff/dashboard/contact-person/profile/${client.id}`}>\n                                                    <span style={{ fontSize: \".9em\" }}>{key + 1}. <span className='price'>{client.name}</span><br /></span>\n                                                </Link>\n                                            ))}\n                                        </Item.Description>\n                                    </Item.Content>\n\n                                </Item>\n                            </Item.Group>\n                        </Grid.Column>}\n                    </Grid>}\n\n\n            </Container>\n        )\n    }\n\n\n    const panes = [\n        {\n            menuItem: (\n                <Menu.Item key='Message'>\n                    Message Details\n                </Menu.Item>\n            ),\n            render: () => {\n                return (\n                    <Tab.Pane>\n                        {messageDetails()}\n\n                    </Tab.Pane>\n                )\n            },\n        }\n    ]\n\n    return (\n        <Container>\n            <Grid container columns={1} padded>\n                <Grid.Column>\n                    <div className=\"content-wrapper\">\n                        <Header as='h2'>\n                            <Icon name='file' />\n                            <Header.Content>\n                                <a href=\"/staff/dashboard/overview\">Overview</a> {'>'} <a href=\"/staff/dashboard/crm\">CRM</a> {'>'} <a href=\"/staff/dashboard/crm/messages\">Messages</a> {'>'} Message Details\n                                <Header.Subheader>\n                                    Hey there {authContext.user.username}, find a list of motor policies under General Insurance below\n                                </Header.Subheader>\n                            </Header.Content>\n                        </Header>\n                    </div>\n                </Grid.Column>\n            </Grid>\n\n\n\n            <Grid container padded>\n                <Grid.Column>\n                    <Tab panes={panes} />\n                </Grid.Column>\n            </Grid>\n\n        </Container>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}