{"ast":null,"code":"var _jsxFileName = \"/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/clients/addNewClient.js\";\nimport { useHistory } from 'react-router-dom';\nimport React, { useState, useContext, useEffect, useCallback } from 'react';\nimport { Grid, Container, Header, Icon, Form, Message, Button, Dropdown, Tab } from 'semantic-ui-react';\nimport moment from 'moment';\nimport { DateInput } from 'semantic-ui-calendar-react';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { ClientContext } from '../../context/clients';\nimport { GET_CONTACT_PERSONS } from '../contactPersons/queries';\nimport { ADD_NEW_CLIENT, ADD_NEW_CORPORATE_CLIENT, GET_STATUS_OPTS } from './queries';\nimport * as yup from \"yup\";\nimport PhoneInput from 'react-phone-input-2';\nimport { AuthContext } from '../../context/auth';\nimport Contacts from './listContactPersons';\nimport StatusTypes from './statusTypes';\n\nfunction AddNewClient({\n  props\n}) {\n  const authContext = useContext(AuthContext);\n  let history = useHistory();\n  const [errors, setErrors] = useState({\n    errorPaths: [],\n    errors: []\n  });\n  const [visible, setVisible] = useState(false);\n  const [corporateErrors, setCorporateErrors] = useState({\n    errorPaths: [],\n    errors: []\n  });\n  const context = useContext(ClientContext);\n  const [successMsg, setSuccessMsg] = useState();\n  const [responseErrors, setResponseErrors] = useState([]);\n  const [statusOpts, setStatusOpts] = useState();\n  const [contactPersonsExtras, setContactPersonsExtras] = useState({\n    search: \"\",\n    page: 1,\n    limit: 10\n  });\n  const [contactPersons, setContactPersons] = useState({});\n  const [corporateResponseErrors, setCorporateResponseErrors] = useState([]);\n  const [values, setValues] = useState({\n    updated: true,\n    afterSubmit: false,\n    contactPersons: []\n  });\n  const [corporateValues, setCorporateValues] = useState({\n    updated: true,\n    contactPersons: [],\n    afterSubmit: false\n  });\n  let schema = yup.object().shape({\n    email: yup.string(),\n    firstName: yup.string().required(\"Please provide the first name\"),\n    lastName: yup.string().required(\"Please provide the last name\"),\n    phoneNumber: yup.string(),\n    town: yup.string().required(\"Please provide the town of residence\"),\n    status: yup.string().required(\"Please indicate status of client\"),\n    surname: yup.string().required(\"Please provide the surname\"),\n    dateOfBirth: yup.date().required(\"Please select the start date\"),\n    gender: yup.string().required(\"Please select the gender\"),\n    idNumber: yup.number().required(\"Please provide the ID number\"),\n    kraPin: yup.string().required(\"Please provide the KRA pin\").matches(/((\\d+[A-Z])|([A-Z]+\\d)[\\dA-Z]*)/, {\n      excludeEmptyString: true,\n      message: \"Enter a valid KRA pin\"\n    })\n  });\n  let corporateSchema = yup.object().shape({\n    name: yup.string().required(\"Please provide a name\"),\n    status: yup.string().required(\"Please client status\"),\n    email: yup.string().required(\"Please provide an email\"),\n    postalAddress: yup.string().required(\"Please provide a postal address\"),\n    phoneNumber: yup.string(),\n    town: yup.string().required(\"Please provide the town of residence\"),\n    about: yup.string().required(\"Please provide the about\"),\n    kraPin: yup.string().matches(/((\\d+[A-Z])|([A-Z]+\\d)[\\dA-Z]*)/, {\n      excludeEmptyString: true,\n      message: \"Enter a valid KRA pin\"\n    }),\n    facebookAccount: yup.string().matches(/^(?:(?:http|https):\\/\\/)?(?:www.)?facebook.com\\/(?:(?:\\w)*#!\\/)?(?:pages\\/)?(?:[?\\w-]*\\/)?(?:profile.php\\?id=(?=\\d.*))?([\\w-]*)?/, {\n      excludeEmptyString: true,\n      message: \"Enter a valid Facebook URL\"\n    }) // instagramAccount: yup.string().matches(/^(?:(?:http|https):\\/\\/)?(?:www.)?instagram.com\\/(?:(?:\\w)*#!\\/)?(?:pages\\/)?(?:[?\\w-]*\\/)?(?:profile.php\\?id=(?=\\d.*))?([\\w-]*)?/, { excludeEmptyString: true, message: \"Enter a valid Instagram URL\" }),\n    // twitterAccount: yup.string().matches(/^(?:(?:http|https):\\/\\/)?(?:www.)?twitter.com\\/(?:(?:\\w)*#!\\/)?(?:pages\\/)?(?:[?\\w-]*\\/)?(?:profile.php\\?id=(?=\\d.*))?([\\w-]*)?/, { excludeEmptyString: true, message: \"Enter a valid Twitter URL\" }),\n    // linkedinAccount: yup.string().matches(/^https?://((www|\\w\\w)\\.)?linkedin.com/((in/[^/]+/?)|(pub/[^/]+/((\\w|\\d)+/?){3}))$/, { excludeEmptyString: true, message: \"Enter a valid LinkedIn URL\" }),\n\n  });\n  const {\n    data: statusOptsData\n  } = useQuery(GET_STATUS_OPTS);\n  useEffect(() => {\n    if (statusOptsData) {\n      setStatusOpts(statusOptsData.clientStatusOptions);\n    }\n  }, [statusOptsData, statusOpts]);\n  const {\n    data: contactPersonsData\n  } = useQuery(GET_CONTACT_PERSONS, {\n    variables: contactPersonsExtras\n  });\n  useEffect(() => {\n    if (contactPersonsData) {\n      setContactPersons(contactPersonsData.contactPersons);\n    }\n  }, [contactPersonsData]);\n  const [addCorporateClient] = useCallback(useMutation(ADD_NEW_CORPORATE_CLIENT, {\n    update(_, result) {\n      setVisible(false);\n      let clientData = result.data.createCorporateClient.corporateClient;\n      history.push({\n        pathname: `/staff/dashboard/corporate-client/profile/${clientData.id}`,\n        state: {\n          corporateClient: clientData,\n          clientId: clientData.id\n        }\n      });\n      setSuccessMsg('Successfully Registered New Client');\n    },\n\n    onError(err) {\n      try {\n        if (err.graphQLErrors) {\n          setCorporateResponseErrors(err.graphQLErrors[0].message);\n        }\n\n        if (err.networkError !== null && err.networkError !== 'undefined') {\n          setCorporateResponseErrors(err.networkError.result.errors[0]);\n        } else if (err.graphQLErrors !== null && err.networkError !== 'undefined') {\n          setCorporateResponseErrors(err.graphQLErrors.result.errors[0]);\n        }\n      } catch (e) {\n        setVisible(true);\n      }\n    },\n\n    variables: corporateValues\n  }));\n  const [addClient, {\n    loading\n  }] = useCallback(useMutation(ADD_NEW_CLIENT, {\n    update(_, result) {\n      context.registerClient(result.data);\n      setVisible(false);\n      let clientData = result.data.createIndividualClient.individualClient;\n      history.push({\n        pathname: `/staff/dashboard/clients/profile/${clientData.id}`,\n        state: {\n          user: clientData,\n          userId: clientData.id\n        }\n      });\n      setSuccessMsg('Successfully Registered New Client');\n    },\n\n    onError(err) {\n      try {\n        if (err.graphQLErrors) {\n          setResponseErrors(err.graphQLErrors[0].message);\n        }\n\n        if (err.networkError !== null && err.networkError !== 'undefined') {\n          setResponseErrors(err.networkError.result.errors[0]);\n        } else if (err.graphQLErrors !== null && err.networkError !== 'undefined') {\n          setResponseErrors(err.graphQLErrors.result.errors[0]);\n        }\n      } catch (e) {\n        setVisible(true);\n      }\n    },\n\n    variables: values\n  }));\n  const validate = useCallback(values => {\n    schema.validate(values, {\n      abortEarly: false\n    }).then(valid => setErrors({\n      errorPaths: [],\n      errors: []\n    })) //called if the entire form is valid\n    .catch(err => {\n      setErrors({\n        errors: err.errors,\n        errorPaths: err.inner.map(i => i.path)\n      });\n    });\n  }, [schema]);\n  const validateCorporate = useCallback(() => {\n    corporateSchema.validate(corporateValues, {\n      abortEarly: false\n    }).then(valid => setCorporateErrors({\n      errorPaths: [],\n      errors: []\n    })) //called if the entire form is valid\n    .catch(err => {\n      setCorporateErrors({\n        errors: err.errors,\n        errorPaths: err.inner.map(i => i.path)\n      });\n    });\n  }, [corporateSchema, corporateValues]);\n  useEffect(() => {\n    if (values.updated) {\n      setValues({ ...values,\n        updated: false\n      });\n\n      if (values.afterSubmit) {\n        validate(values);\n      }\n    }\n\n    if (corporateValues.updated) {\n      setCorporateValues({ ...corporateValues,\n        updated: false\n      });\n\n      if (corporateValues.afterSubmit) {\n        validateCorporate();\n      }\n    }\n  }, [values, validate, corporateValues, validateCorporate]);\n\n  const handleOnGenderChange = (e, {\n    value\n  }) => {\n    e.preventDefault();\n    setValues({ ...values,\n      gender: value,\n      updated: true\n    });\n  };\n\n  const onChange = useCallback((event, {\n    name,\n    value\n  }) => {\n    setValues({ ...values,\n      [name]: value,\n      updated: true\n    });\n  }, [values]);\n  const onCorporateChange = useCallback((event, {\n    name,\n    value\n  }) => {\n    setCorporateValues({ ...corporateValues,\n      [name]: value,\n      updated: true\n    });\n  }, [corporateValues]);\n\n  const handleOnContactSearch = e => {\n    setContactPersonsExtras({ ...contactPersonsExtras,\n      search: e.target.value\n    });\n  };\n\n  const handleOnContactChange = (e, {\n    value\n  }) => {\n    e.preventDefault();\n    setValues({ ...values,\n      contactPersons: value,\n      updated: true\n    });\n  };\n\n  const handleOnCorporateContactChange = (e, {\n    value\n  }) => {\n    e.preventDefault();\n    setCorporateValues({ ...corporateValues,\n      contactPersons: value,\n      updated: true\n    });\n  };\n\n  const handleOnStatusTypesChange = (e, {\n    value\n  }) => {\n    e.preventDefault();\n    setValues({ ...values,\n      status: value,\n      updated: true\n    });\n  };\n\n  const handleOnCorporateStatusTypesChange = (e, {\n    value\n  }) => {\n    e.preventDefault();\n    setCorporateValues({ ...corporateValues,\n      status: value,\n      updated: true\n    });\n  };\n\n  const handleDismiss = () => {\n    setVisible(false);\n    setSuccessMsg('');\n  };\n\n  const onPhoneNumberChange = useCallback(value => {\n    setValues({ ...values,\n      phoneNumber: \"+\" + value,\n      updated: true\n    });\n  }, [values]);\n  const onCorporatePhoneNumberChange = useCallback(value => {\n    setCorporateValues({ ...corporateValues,\n      phoneNumber: \"+\" + value,\n      updated: true\n    });\n  }, [corporateValues]);\n  const genderOptions = [{\n    key: 'F',\n    text: 'Female',\n    value: 'F'\n  }, {\n    key: 'M',\n    text: 'Male',\n    value: 'M'\n  }, {\n    key: 'O',\n    text: 'Other',\n    value: 'O'\n  }];\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setSuccessMsg('');\n    validate(values);\n    setValues({ ...values,\n      afterSubmit: true\n    });\n\n    if (Object.keys(values).length > 7 && !errors.errors.length) {\n      addClient();\n    }\n\n    setVisible(false);\n  };\n\n  const onCorporateSubmit = event => {\n    event.preventDefault();\n    setSuccessMsg('');\n    validateCorporate();\n    setCorporateValues({ ...corporateValues,\n      afterSubmit: true\n    });\n\n    if (Object.keys(corporateValues).length > 5 && !corporateErrors.errors.length) {\n      addCorporateClient();\n    }\n\n    setVisible(false);\n  };\n\n  const panes = [{\n    menuItem: \"Corporate Client\",\n    render: () => /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }\n    }, successMsg ? /*#__PURE__*/React.createElement(Message, {\n      positive: true,\n      onDismiss: handleDismiss,\n      header: \"status\",\n      content: successMsg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 25\n      }\n    }) : '', /*#__PURE__*/React.createElement(Form, {\n      onSubmit: onCorporateSubmit,\n      noValidate: true,\n      className: loading ? \"loading\" : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Message, {\n      visible: !!corporateErrors.errors.length || visible,\n      warning: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Message.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 33\n      }\n    }, \"Please correct the following issues:\"), !!corporateResponseErrors.length && /*#__PURE__*/React.createElement(Message, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 70\n      }\n    }, corporateResponseErrors), /*#__PURE__*/React.createElement(Message.List, {\n      items: corporateErrors.errors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 34\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      error: corporateErrors.errorPaths.includes('name'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 33\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"Name\",\n      name: \"name\",\n      onChange: onCorporateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      required: corporateValues.status === \"P\" ? false : true,\n      error: corporateErrors.errorPaths.includes('email'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 33\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"email\",\n      name: \"email\",\n      onChange: onCorporateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      error: corporateErrors.errorPaths.includes('postalAddress'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 33\n      }\n    }, \"Postal Address\"), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"Post Address\",\n      name: \"postalAddress\",\n      onChange: onCorporateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      error: corporateErrors.errorPaths.includes('kraPin'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 33\n      }\n    }, \"KRA PIN Number\"), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"KRA PIN Number\",\n      name: \"kraPin\",\n      onChange: onCorporateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      required: corporateValues.status === \"P\" ? false : true,\n      error: corporateErrors.errorPaths.includes('phoneNumber'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(PhoneInput, {\n      inputExtraProps: {\n        name: \"phoneNumber\",\n        required: true,\n        autoFocus: true,\n        enableSearch: true\n      },\n      style: {\n        fontWeight: \"bold\"\n      },\n      name: \"phoneNumber\",\n      specialLabel: \"Phone Number *\",\n      country: \"ke\",\n      value: corporateValues.phoneNumber,\n      onChange: onCorporatePhoneNumberChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      error: corporateErrors.errorPaths.includes('town'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 33\n      }\n    }, \"Town\"), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"Town\",\n      name: \"town\",\n      onChange: onCorporateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      error: corporateErrors.errorPaths.includes('about'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 33\n      }\n    }, \"About\"), /*#__PURE__*/React.createElement(Form.TextArea, {\n      required: true,\n      placeholder: \"About the corporate client\",\n      name: \"about\",\n      onChange: onCorporateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 33\n      }\n    })), contactPersons.items && /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 54\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 33\n      }\n    }, \"Contact Person(s)\"), /*#__PURE__*/React.createElement(Contacts, {\n      multiple: true,\n      clients: contactPersons.items,\n      handleOnClientSearch: handleOnContactSearch,\n      handleOnClientChange: handleOnCorporateContactChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      error: corporateErrors.errorPaths.includes('status'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 33\n      }\n    }, \"Client Status\"), statusOpts && statusOpts.statusOptions && /*#__PURE__*/React.createElement(StatusTypes, {\n      statusTypes: statusOpts.statusOptions,\n      handleOnStatusTypesChange: handleOnCorporateStatusTypesChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 76\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      error: corporateErrors.errorPaths.includes('facebookAccount'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 33\n      }\n    }, \"Facebook Link\"), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"Facebook Link\",\n      name: \"facebookAccount\",\n      onChange: onCorporateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      error: corporateErrors.errorPaths.includes('instagramAccount'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 33\n      }\n    }, \"Instagram Link\"), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"Instagram Link\",\n      name: \"instagramAccount\",\n      onChange: onCorporateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      error: corporateErrors.errorPaths.includes('twitterAccount'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 33\n      }\n    }, \"Twitter Link\"), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"Twitter Link\",\n      name: \"twitterAccount\",\n      onChange: onCorporateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      error: corporateErrors.errorPaths.includes('linkedinAccount'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 33\n      }\n    }, \"LinkedIn Link\"), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"LinkedIn Link\",\n      name: \"linkedinAccount\",\n      onChange: onCorporateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 25\n      }\n    }, \"Register Client\")))\n  }, {\n    menuItem: \"Individual Client\",\n    render: () => /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 17\n      }\n    }, successMsg ? /*#__PURE__*/React.createElement(Message, {\n      positive: true,\n      onDismiss: handleDismiss,\n      header: \"status\",\n      content: successMsg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 25\n      }\n    }) : '', /*#__PURE__*/React.createElement(Form, {\n      onSubmit: onSubmit,\n      noValidate: true,\n      className: loading ? \"loading\" : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Message, {\n      visible: !!errors.errors.length || visible,\n      warning: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Message.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 33\n      }\n    }, \"Please correct the following issues:\"), !!responseErrors.length && /*#__PURE__*/React.createElement(Message, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 61\n      }\n    }, responseErrors), /*#__PURE__*/React.createElement(Message.List, {\n      items: errors.errors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 34\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      error: errors.errorPaths.includes('firstName'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 33\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"First Name\",\n      name: \"firstName\",\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      error: errors.errorPaths.includes('lastName'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 33\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"Last Name\",\n      name: \"lastName\",\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      error: errors.errorPaths.includes('surname'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 33\n      }\n    }, \"Other Name\"), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"Other Name\",\n      name: \"surname\",\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 33\n      }\n    }, \"Postal Address\"), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"Post Address\",\n      name: \"postalAddress\",\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      error: errors.errorPaths.includes('kraPin'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 33\n      }\n    }, \"KRA PIN Number\"), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"KRA PIN Number\",\n      name: \"kraPin\",\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      error: errors.errorPaths.includes('firstName'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 33\n      }\n    }, \"Occupation\"), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"Occupation\",\n      name: \"occupation\",\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      required: values.status === \"P\" ? false : true,\n      error: errors.errorPaths.includes('phoneNumber'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(PhoneInput, {\n      inputExtraProps: {\n        name: \"phoneNumber\",\n        required: true,\n        autoFocus: true,\n        enableSearch: true\n      },\n      style: {\n        fontWeight: \"bold\"\n      },\n      name: \"phoneNumber\",\n      specialLabel: \"Phone Number *\",\n      country: \"ke\",\n      value: values.phoneNumber,\n      onChange: onPhoneNumberChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 33\n      }\n    })), \"}\", /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      error: errors.errorPaths.includes('town'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 33\n      }\n    }, \"Residence (Town)\"), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"Residence (Town)\",\n      name: \"town\",\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      error: errors.errorPaths.includes('idNumber'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 33\n      }\n    }, \"ID Number\"), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"ID Number\",\n      name: \"idNumber\",\n      type: \"number\",\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      required: values.status === \"P\" ? false : true,\n      error: errors.errorPaths.includes('email'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 33\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"Email Address\",\n      name: \"email\",\n      type: \"email\",\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      error: errors.errorPaths.includes('gender'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 33\n      }\n    }, \"Gender\"), /*#__PURE__*/React.createElement(Dropdown, {\n      placeholder: \"Select Gender\",\n      fluid: true,\n      selection: true,\n      onChange: handleOnGenderChange,\n      options: genderOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      error: errors.errorPaths.includes('dateOfBirth'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 33\n      }\n    }, \"Date Of Birth\"), /*#__PURE__*/React.createElement(DateInput, {\n      name: \"dateOfBirth\",\n      autoComplete: \"off\",\n      placeholder: \"Date Of Birth\",\n      popupPosition: \"bottom left\",\n      value: values.dateOfBirth ? values.dateOfBirth : \"\",\n      iconPosition: \"left\",\n      dateFormat: \"YYYY-MM-DD\",\n      maxDate: moment(),\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 25\n      }\n    }, contactPersons.items && /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 54\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 33\n      }\n    }, \"Contact Person(s)\"), /*#__PURE__*/React.createElement(Contacts, {\n      multiple: true,\n      clients: contactPersons.items,\n      handleOnClientSearch: handleOnContactSearch,\n      handleOnClientChange: handleOnContactChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      error: errors.errorPaths.includes('status'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 33\n      }\n    }, \"Client Status\"), statusOpts && statusOpts.statusOptions && /*#__PURE__*/React.createElement(StatusTypes, {\n      statusTypes: statusOpts.statusOptions,\n      handleOnStatusTypesChange: handleOnStatusTypesChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 76\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 25\n      }\n    }, \"Register Client\")))\n  }];\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Header.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/staff/dashboard/client-records\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 33\n    }\n  }, \"Client Records\"), \" \", '>', \" Register New Client\", /*#__PURE__*/React.createElement(Header.Subheader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 17\n    }\n  }, \"Hello there \", authContext.user.username, \", Fill in this form to register a new client\")))))), /*#__PURE__*/React.createElement(Tab, {\n    className: \"clear-top\",\n    menu: {\n      secondary: true,\n      pointing: true\n    },\n    panes: panes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default AddNewClient;","map":{"version":3,"sources":["/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/clients/addNewClient.js"],"names":["useHistory","React","useState","useContext","useEffect","useCallback","Grid","Container","Header","Icon","Form","Message","Button","Dropdown","Tab","moment","DateInput","useMutation","useQuery","ClientContext","GET_CONTACT_PERSONS","ADD_NEW_CLIENT","ADD_NEW_CORPORATE_CLIENT","GET_STATUS_OPTS","yup","PhoneInput","AuthContext","Contacts","StatusTypes","AddNewClient","props","authContext","history","errors","setErrors","errorPaths","visible","setVisible","corporateErrors","setCorporateErrors","context","successMsg","setSuccessMsg","responseErrors","setResponseErrors","statusOpts","setStatusOpts","contactPersonsExtras","setContactPersonsExtras","search","page","limit","contactPersons","setContactPersons","corporateResponseErrors","setCorporateResponseErrors","values","setValues","updated","afterSubmit","corporateValues","setCorporateValues","schema","object","shape","email","string","firstName","required","lastName","phoneNumber","town","status","surname","dateOfBirth","date","gender","idNumber","number","kraPin","matches","excludeEmptyString","message","corporateSchema","name","postalAddress","about","facebookAccount","data","statusOptsData","clientStatusOptions","contactPersonsData","variables","addCorporateClient","update","_","result","clientData","createCorporateClient","corporateClient","push","pathname","id","state","clientId","onError","err","graphQLErrors","networkError","e","addClient","loading","registerClient","createIndividualClient","individualClient","user","userId","validate","abortEarly","then","valid","catch","inner","map","i","path","validateCorporate","handleOnGenderChange","value","preventDefault","onChange","event","onCorporateChange","handleOnContactSearch","target","handleOnContactChange","handleOnCorporateContactChange","handleOnStatusTypesChange","handleOnCorporateStatusTypesChange","handleDismiss","onPhoneNumberChange","onCorporatePhoneNumberChange","genderOptions","key","text","onSubmit","Object","keys","length","onCorporateSubmit","panes","menuItem","render","includes","autoFocus","enableSearch","fontWeight","items","statusOptions","username","secondary","pointing"],"mappings":"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","sourcesContent":["import { useHistory } from 'react-router-dom';\nimport React, { useState, useContext, useEffect, useCallback } from 'react';\nimport {\n    Grid,\n    Container,\n    Header,\n    Icon,\n    Form,\n    Message,\n    Button,\n    Dropdown,\n    Tab\n} from 'semantic-ui-react';\nimport moment from 'moment';\nimport { DateInput } from 'semantic-ui-calendar-react';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { ClientContext } from '../../context/clients';\nimport { GET_CONTACT_PERSONS } from '../contactPersons/queries';\nimport { ADD_NEW_CLIENT, ADD_NEW_CORPORATE_CLIENT, GET_STATUS_OPTS } from './queries'\nimport * as yup from \"yup\";\nimport PhoneInput from 'react-phone-input-2';\nimport { AuthContext } from '../../context/auth';\nimport Contacts from './listContactPersons';\nimport StatusTypes from './statusTypes';\n\n\nfunction AddNewClient({ props }) {\n\n    const authContext = useContext(AuthContext);\n    let history = useHistory();\n\n    const [errors, setErrors] = useState({\n        errorPaths: [],\n        errors: []\n    });\n    const [visible, setVisible] = useState(false);\n    const [corporateErrors, setCorporateErrors] = useState({\n        errorPaths: [],\n        errors: []\n    });\n    const context = useContext(ClientContext);\n    const [successMsg, setSuccessMsg] = useState();\n    const [responseErrors, setResponseErrors] = useState([]);\n    const [statusOpts, setStatusOpts] = useState();\n    const [contactPersonsExtras, setContactPersonsExtras] = useState({\n        search: \"\", page: 1, limit: 10\n    });\n    const [contactPersons, setContactPersons] = useState({});\n    const [corporateResponseErrors, setCorporateResponseErrors] = useState([]);\n\n\n    const [values, setValues] = useState({\n        updated: true,\n        afterSubmit: false,\n        contactPersons: []\n    });\n    const [corporateValues, setCorporateValues] = useState({\n        updated: true,\n        contactPersons: [],\n        afterSubmit: false\n    });\n    let schema = yup.object().shape({\n        email: yup.string(),\n        firstName: yup.string().required(\"Please provide the first name\"),\n        lastName: yup.string().required(\"Please provide the last name\"),\n        phoneNumber: yup.string(),\n        town: yup.string().required(\"Please provide the town of residence\"),\n        status: yup.string().required(\"Please indicate status of client\"),\n        surname: yup.string().required(\"Please provide the surname\"),\n        dateOfBirth: yup.date().required(\"Please select the start date\"),\n        gender: yup.string().required(\"Please select the gender\"),\n        idNumber: yup.number().required(\"Please provide the ID number\"),\n        kraPin: yup.string().required(\"Please provide the KRA pin\").matches(/((\\d+[A-Z])|([A-Z]+\\d)[\\dA-Z]*)/, { excludeEmptyString: true, message: \"Enter a valid KRA pin\" }),\n    });\n    let corporateSchema = yup.object().shape({\n        name: yup.string().required(\"Please provide a name\"),\n        status: yup.string().required(\"Please client status\"),\n        email: yup.string().required(\"Please provide an email\"),\n        postalAddress: yup.string().required(\"Please provide a postal address\"),\n        phoneNumber: yup.string(),\n        town: yup.string().required(\"Please provide the town of residence\"),\n        about: yup.string().required(\"Please provide the about\"),\n        kraPin: yup.string().matches(/((\\d+[A-Z])|([A-Z]+\\d)[\\dA-Z]*)/, { excludeEmptyString: true, message: \"Enter a valid KRA pin\" }),\n        facebookAccount: yup.string().matches(/^(?:(?:http|https):\\/\\/)?(?:www.)?facebook.com\\/(?:(?:\\w)*#!\\/)?(?:pages\\/)?(?:[?\\w-]*\\/)?(?:profile.php\\?id=(?=\\d.*))?([\\w-]*)?/, { excludeEmptyString: true, message: \"Enter a valid Facebook URL\" }),\n        // instagramAccount: yup.string().matches(/^(?:(?:http|https):\\/\\/)?(?:www.)?instagram.com\\/(?:(?:\\w)*#!\\/)?(?:pages\\/)?(?:[?\\w-]*\\/)?(?:profile.php\\?id=(?=\\d.*))?([\\w-]*)?/, { excludeEmptyString: true, message: \"Enter a valid Instagram URL\" }),\n        // twitterAccount: yup.string().matches(/^(?:(?:http|https):\\/\\/)?(?:www.)?twitter.com\\/(?:(?:\\w)*#!\\/)?(?:pages\\/)?(?:[?\\w-]*\\/)?(?:profile.php\\?id=(?=\\d.*))?([\\w-]*)?/, { excludeEmptyString: true, message: \"Enter a valid Twitter URL\" }),\n        // linkedinAccount: yup.string().matches(/^https?://((www|\\w\\w)\\.)?linkedin.com/((in/[^/]+/?)|(pub/[^/]+/((\\w|\\d)+/?){3}))$/, { excludeEmptyString: true, message: \"Enter a valid LinkedIn URL\" }),\n    });\n\n    const { data: statusOptsData } = useQuery(GET_STATUS_OPTS);\n    useEffect(() => {\n        if (statusOptsData) {\n            setStatusOpts(statusOptsData.clientStatusOptions);\n        }\n    }, [statusOptsData, statusOpts]);\n\n\n    const { data: contactPersonsData } = useQuery(GET_CONTACT_PERSONS, {\n        variables: contactPersonsExtras\n    });\n    useEffect(() => {\n        if (contactPersonsData) {\n            setContactPersons(contactPersonsData.contactPersons)\n        }\n    }, [contactPersonsData])\n\n    const [addCorporateClient] = useCallback(useMutation(ADD_NEW_CORPORATE_CLIENT, {\n        update(_, result) {\n            setVisible(false);\n            let clientData = result.data.createCorporateClient.corporateClient\n            history.push({\n                pathname: `/staff/dashboard/corporate-client/profile/${clientData.id}`,\n                state: { corporateClient: clientData, clientId: clientData.id }\n            })\n\n            setSuccessMsg('Successfully Registered New Client');\n        },\n        onError(err) {\n            try {\n\n                if (err.graphQLErrors) {\n                    setCorporateResponseErrors(err.graphQLErrors[0].message);\n                }\n\n                if (err.networkError !== null && err.networkError !== 'undefined') {\n\n                    setCorporateResponseErrors(err.networkError.result.errors[0]);\n\n                } else if (err.graphQLErrors !== null && err.networkError !== 'undefined') {\n\n                    setCorporateResponseErrors(err.graphQLErrors.result.errors[0]);\n\n                }\n            } catch (e) {\n                setVisible(true);\n            }\n\n        },\n        variables: corporateValues\n    }));\n    const [addClient, { loading }] = useCallback(useMutation(ADD_NEW_CLIENT, {\n        update(_, result) {\n            context.registerClient(result.data);\n            setVisible(false);\n            let clientData = result.data.createIndividualClient.individualClient\n            history.push({\n                pathname: `/staff/dashboard/clients/profile/${clientData.id}`,\n                state: { user: clientData, userId: clientData.id }\n            })\n\n            setSuccessMsg('Successfully Registered New Client');\n        },\n        onError(err) {\n            try {\n                if (err.graphQLErrors) {\n                    setResponseErrors(err.graphQLErrors[0].message);\n                }\n\n                if (err.networkError !== null && err.networkError !== 'undefined') {\n\n                    setResponseErrors(err.networkError.result.errors[0]);\n\n                } else if (err.graphQLErrors !== null && err.networkError !== 'undefined') {\n\n                    setResponseErrors(err.graphQLErrors.result.errors[0]);\n\n                }\n            } catch (e) {\n                setVisible(true);\n            }\n\n        },\n        variables: values\n    }));\n\n    const validate = useCallback((values) => {\n        schema.validate(values, { abortEarly: false })\n            .then(valid => setErrors({ errorPaths: [], errors: [] })) //called if the entire form is valid\n            .catch(err => {\n                setErrors({ errors: err.errors, errorPaths: err.inner.map(i => i.path) })\n            })\n    }, [schema])\n\n    const validateCorporate = useCallback(() => {\n        corporateSchema.validate(corporateValues, { abortEarly: false })\n            .then(valid => setCorporateErrors({ errorPaths: [], errors: [] })) //called if the entire form is valid\n            .catch(err => {\n                setCorporateErrors({ errors: err.errors, errorPaths: err.inner.map(i => i.path) })\n            })\n    }, [corporateSchema, corporateValues])\n\n    useEffect(() => {\n        if (values.updated) {\n            setValues({ ...values, updated: false })\n            if (values.afterSubmit) {\n                validate(values)\n            }\n        }\n        if (corporateValues.updated) {\n            setCorporateValues({ ...corporateValues, updated: false })\n            if (corporateValues.afterSubmit) {\n                validateCorporate()\n            }\n        }\n    }, [values, validate, corporateValues, validateCorporate])\n    const handleOnGenderChange = (e, { value }) => {\n        e.preventDefault()\n        setValues({ ...values, gender: value, updated: true });\n    }\n    const onChange = useCallback((event, { name, value }) => {\n        setValues({ ...values, [name]: value, updated: true });\n    }, [values])\n    const onCorporateChange = useCallback((event, { name, value }) => {\n        setCorporateValues({ ...corporateValues, [name]: value, updated: true });\n    }, [corporateValues])\n\n    const handleOnContactSearch = (e) => {\n        setContactPersonsExtras({ ...contactPersonsExtras, search: e.target.value });\n    }\n    const handleOnContactChange = (e, { value }) => {\n        e.preventDefault()\n        setValues({ ...values, contactPersons: value, updated: true });\n    }\n    const handleOnCorporateContactChange = (e, { value }) => {\n        e.preventDefault()\n        setCorporateValues({ ...corporateValues, contactPersons: value, updated: true });\n    }\n\n    const handleOnStatusTypesChange = (e, { value }) => {\n        e.preventDefault()\n        setValues({ ...values, status: value, updated: true });\n    }\n\n    const handleOnCorporateStatusTypesChange = (e, { value }) => {\n        e.preventDefault()\n        setCorporateValues({ ...corporateValues, status: value, updated: true });\n    }\n\n    const handleDismiss = () => {\n        setVisible(false);\n        setSuccessMsg('');\n    }\n    const onPhoneNumberChange = useCallback((value) => {\n        setValues({ ...values, phoneNumber: \"+\" + value, updated: true });\n    }, [values])\n    const onCorporatePhoneNumberChange = useCallback((value) => {\n        setCorporateValues({ ...corporateValues, phoneNumber: \"+\" + value, updated: true });\n    }, [corporateValues])\n    const genderOptions = [\n        {\n            key: 'F',\n            text: 'Female',\n            value: 'F',\n        },\n        {\n            key: 'M',\n            text: 'Male',\n            value: 'M',\n        },\n        {\n            key: 'O',\n            text: 'Other',\n            value: 'O',\n        }\n    ]\n    const onSubmit = (event) => {\n        event.preventDefault();\n        setSuccessMsg('');\n        validate(values)\n        setValues({ ...values, afterSubmit: true })\n        if (Object.keys(values).length > 7 && !errors.errors.length) { addClient() }\n        setVisible(false);\n    }\n    const onCorporateSubmit = (event) => {\n        event.preventDefault();\n        setSuccessMsg('');\n        validateCorporate()\n        setCorporateValues({ ...corporateValues, afterSubmit: true })\n        if (Object.keys(corporateValues).length > 5 && !corporateErrors.errors.length) { addCorporateClient() }\n        setVisible(false);\n    }\n    const panes = [\n\n        {\n            menuItem: \"Corporate Client\",\n            render: () =>\n                <Grid.Column>\n                    {successMsg ?\n                        <Message\n                            positive\n                            onDismiss={handleDismiss}\n                            header='status'\n                            content={successMsg} /> :\n                        ''}\n\n                    <Form onSubmit={onCorporateSubmit} noValidate className={loading ? \"loading\" : ''}>\n                        <Form.Group>\n                            <Message visible={!!corporateErrors.errors.length || visible} warning>\n                                <Message.Header>Please correct the following issues:</Message.Header>\n                                {!!corporateResponseErrors.length && <Message>{corporateResponseErrors}</Message>}\n                                {<Message.List items={corporateErrors.errors} />}\n                            </Message>\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <Form.Field required error={corporateErrors.errorPaths.includes('name')}>\n                                <label>Name</label>\n                                <Form.Input\n                                    fluid\n                                    placeholder='Name'\n                                    name='name'\n                                    onChange={onCorporateChange}\n                                />\n                            </Form.Field>\n                            <Form.Field required={corporateValues.status === \"P\" ? false : true} error={corporateErrors.errorPaths.includes('email')}>\n                                <label>Email</label>\n                                <Form.Input fluid placeholder='email'\n                                    name='email'\n                                    onChange={onCorporateChange}\n\n                                />\n                            </Form.Field>\n                            <Form.Field required error={corporateErrors.errorPaths.includes('postalAddress')}>\n                                <label>Postal Address</label>\n                                <Form.Input fluid placeholder='Post Address'\n                                    name='postalAddress'\n                                    onChange={onCorporateChange}\n                                />\n                            </Form.Field>\n\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <Form.Field error={corporateErrors.errorPaths.includes('kraPin')}>\n                                <label>KRA PIN Number</label>\n                                <Form.Input fluid placeholder='KRA PIN Number'\n                                    name='kraPin'\n                                    onChange={onCorporateChange}\n\n                                />\n                            </Form.Field>\n                            <Form.Field required={corporateValues.status === \"P\" ? false : true} error={corporateErrors.errorPaths.includes('phoneNumber')}>\n\n                                <PhoneInput\n                                    inputExtraProps={{\n                                        name: \"phoneNumber\",\n                                        required: true,\n                                        autoFocus: true,\n                                        enableSearch: true\n                                    }}\n                                    style={{ fontWeight: \"bold\" }}\n                                    name='phoneNumber'\n                                    specialLabel='Phone Number *'\n                                    country={\"ke\"}\n                                    value={corporateValues.phoneNumber}\n                                    onChange={onCorporatePhoneNumberChange}\n                                />\n                            </Form.Field>\n                            <Form.Field required error={corporateErrors.errorPaths.includes('town')}>\n                                <label>Town</label>\n                                <Form.Input\n                                    fluid placeholder='Town'\n                                    name='town'\n                                    onChange={onCorporateChange}\n\n                                />\n                            </Form.Field>\n\n                        </Form.Group>\n                        <Form.Group widths=\"equal\">\n                            <Form.Field required error={corporateErrors.errorPaths.includes('about')}>\n                                <label>About</label>\n                                <Form.TextArea\n                                    required\n                                    placeholder='About the corporate client'\n                                    name='about'\n                                    onChange={onCorporateChange}\n\n                                />\n                            </Form.Field>\n                            {contactPersons.items && <Form.Field>\n                                <label>Contact Person(s)</label>\n                                <Contacts\n                                    multiple={true}\n                                    clients={contactPersons.items}\n                                    handleOnClientSearch={handleOnContactSearch}\n                                    handleOnClientChange={handleOnCorporateContactChange}\n                                />\n                            </Form.Field>}\n                            <Form.Field required error={corporateErrors.errorPaths.includes('status')}>\n                                <label>Client Status</label>\n                                {statusOpts && statusOpts.statusOptions && <StatusTypes\n                                    statusTypes={statusOpts.statusOptions}\n                                    handleOnStatusTypesChange={handleOnCorporateStatusTypesChange}\n                                />}\n                            </Form.Field>\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <Form.Field error={corporateErrors.errorPaths.includes('facebookAccount')}>\n                                <label>Facebook Link</label>\n                                <Form.Input fluid placeholder='Facebook Link'\n                                    name='facebookAccount'\n                                    onChange={onCorporateChange}\n\n                                />\n                            </Form.Field>\n                            <Form.Field error={corporateErrors.errorPaths.includes('instagramAccount')}>\n                                <label>Instagram Link</label>\n                                <Form.Input fluid placeholder='Instagram Link'\n                                    name='instagramAccount'\n                                    onChange={onCorporateChange}\n\n                                />\n                            </Form.Field>\n                            <Form.Field error={corporateErrors.errorPaths.includes('twitterAccount')}>\n                                <label>Twitter Link</label>\n                                <Form.Input fluid placeholder='Twitter Link'\n                                    name='twitterAccount'\n                                    onChange={onCorporateChange}\n\n                                />\n                            </Form.Field>\n                            <Form.Field error={corporateErrors.errorPaths.includes('linkedinAccount')}>\n                                <label>LinkedIn Link</label>\n                                <Form.Input\n                                    fluid placeholder='LinkedIn Link'\n                                    name='linkedinAccount'\n                                    onChange={onCorporateChange}\n\n                                />\n                            </Form.Field>\n                        </Form.Group>\n\n\n                        <Button type='submit'>Register Client</Button>\n\n                    </Form>\n                </Grid.Column>\n\n        },\n        {\n            menuItem: \"Individual Client\",\n            render: () =>\n                <Grid.Column>\n                    {successMsg ?\n                        <Message\n                            positive\n                            onDismiss={handleDismiss}\n                            header='status'\n                            content={successMsg} /> :\n                        ''}\n\n                    <Form onSubmit={onSubmit} noValidate className={loading ? \"loading\" : ''}>\n                        <Form.Group>\n                            <Message visible={!!errors.errors.length || visible} warning>\n                                <Message.Header>Please correct the following issues:</Message.Header>\n                                {!!responseErrors.length && <Message>{responseErrors}</Message>}\n                                {<Message.List items={errors.errors} />}\n                            </Message>\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <Form.Field required error={errors.errorPaths.includes('firstName')}>\n                                <label>First Name</label>\n                                <Form.Input\n                                    fluid\n                                    placeholder='First Name'\n                                    name='firstName'\n                                    onChange={onChange}\n                                />\n                            </Form.Field>\n                            <Form.Field required error={errors.errorPaths.includes('lastName')}>\n                                <label>Last Name</label>\n                                <Form.Input fluid placeholder='Last Name'\n                                    name='lastName'\n                                    onChange={onChange}\n\n                                />\n                            </Form.Field>\n                            <Form.Field required error={errors.errorPaths.includes('surname')}>\n                                <label>Other Name</label>\n                                <Form.Input fluid placeholder='Other Name'\n                                    name='surname'\n                                    onChange={onChange}\n                                />\n                            </Form.Field>\n                            <Form.Field>\n                                <label>Postal Address</label>\n                                <Form.Input fluid placeholder='Post Address'\n                                    name='postalAddress'\n                                    onChange={onChange}\n                                />\n                            </Form.Field>\n\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <Form.Field required error={errors.errorPaths.includes('kraPin')}>\n                                <label>KRA PIN Number</label>\n                                <Form.Input fluid placeholder='KRA PIN Number'\n                                    name='kraPin'\n                                    onChange={onChange}\n\n                                />\n                            </Form.Field>\n                            <Form.Field required error={errors.errorPaths.includes('firstName')}>\n                                <label>Occupation</label>\n                                <Form.Input fluid placeholder='Occupation'\n                                    name='occupation'\n                                    onChange={onChange}\n\n                                />\n                            </Form.Field>\n                            <Form.Field required={values.status === \"P\" ? false : true}  error={errors.errorPaths.includes('phoneNumber')}>\n\n                                <PhoneInput\n                                    inputExtraProps={{\n                                        name: \"phoneNumber\",\n                                        required: true,\n                                        autoFocus: true,\n                                        enableSearch: true\n                                    }}\n                                    style={{ fontWeight: \"bold\" }}\n                                    name='phoneNumber'\n                                    specialLabel='Phone Number *'\n                                    country={\"ke\"}\n                                    value={values.phoneNumber}\n                                    onChange={onPhoneNumberChange}\n                                />\n                            </Form.Field>}\n                            <Form.Field required error={errors.errorPaths.includes('town')}>\n                                <label>Residence (Town)</label>\n                                <Form.Input\n                                    fluid placeholder='Residence (Town)'\n                                    name='town'\n                                    onChange={onChange}\n\n                                />\n                            </Form.Field>\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <Form.Field required error={errors.errorPaths.includes('idNumber')}>\n                                <label>ID Number</label>\n                                <Form.Input fluid placeholder='ID Number'\n                                    name='idNumber'\n                                    type=\"number\"\n                                    onChange={onChange}\n\n                                />\n                            </Form.Field>\n                            <Form.Field required={values.status === \"P\" ? false : true}  error={errors.errorPaths.includes('email')}>\n                                <label>Email</label>\n                                <Form.Input fluid placeholder='Email Address'\n                                    name='email'\n                                    type='email'\n                                    onChange={onChange}\n\n                                />\n                            </Form.Field>\n                            <Form.Field required error={errors.errorPaths.includes('gender')}>\n                                <label>Gender</label>\n                                <Dropdown\n                                    placeholder='Select Gender'\n                                    fluid\n                                    selection\n                                    onChange={handleOnGenderChange}\n                                    options={genderOptions}\n                                />\n                            </Form.Field>\n                            <Form.Field required error={errors.errorPaths.includes('dateOfBirth')}>\n                                <label>Date Of Birth</label>\n\n                                <DateInput\n                                    name=\"dateOfBirth\"\n                                    autoComplete=\"off\"\n                                    placeholder=\"Date Of Birth\"\n                                    popupPosition=\"bottom left\"\n                                    value={values.dateOfBirth ? values.dateOfBirth : \"\"}\n                                    iconPosition=\"left\"\n                                    dateFormat=\"YYYY-MM-DD\"\n                                    maxDate={moment()}\n                                    onChange={onChange}\n                                />\n                            </Form.Field>\n                        </Form.Group>\n                        <Form.Group widths=\"equal\">\n                            {contactPersons.items && <Form.Field>\n                                <label>Contact Person(s)</label>\n                                <Contacts\n                                    multiple={true}\n                                    clients={contactPersons.items}\n                                    handleOnClientSearch={handleOnContactSearch}\n                                    handleOnClientChange={handleOnContactChange}\n                                />\n                            </Form.Field>}\n                            <Form.Field required error={errors.errorPaths.includes('status')}>\n                                <label>Client Status</label>\n                                {statusOpts && statusOpts.statusOptions && <StatusTypes\n                                    statusTypes={statusOpts.statusOptions}\n                                    handleOnStatusTypesChange={handleOnStatusTypesChange}\n                                />}\n                            </Form.Field>\n                        </Form.Group>\n                        <Button type='submit'>Register Client</Button>\n\n                    </Form>\n                </Grid.Column>\n\n        }\n    ]\n    return (\n        <Container>\n            <Grid container padded>\n                <Grid.Column>\n                    <div className=\"content-wrapper\">\n                        <Header as='h2'>\n                            <Icon name='settings' />\n                            <Header.Content>\n                                <a href=\"/staff/dashboard/client-records\">Client Records</a> {'>'} Register New Client\n                <Header.Subheader>\n                                    Hello there {authContext.user.username}, Fill in this form to register a new client\n                </Header.Subheader>\n                            </Header.Content>\n                        </Header>\n                    </div>\n                </Grid.Column>\n            </Grid>\n            <Tab className='clear-top' menu={{ secondary: true, pointing: true }} panes={panes} />\n        </Container>\n    )\n}\n\nexport default AddNewClient;"]},"metadata":{},"sourceType":"module"}