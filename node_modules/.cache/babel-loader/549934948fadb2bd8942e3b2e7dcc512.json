{"ast":null,"code":"var _jsxFileName = \"/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/contactPersons/addNewContactPerson.js\";\nimport { useHistory } from 'react-router-dom';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport React, { useState, useContext, useEffect, useCallback } from 'react';\nimport { Grid, Container, Header, Icon, Form, Message, Button, Dropdown } from 'semantic-ui-react';\nimport moment from 'moment';\nimport { DateInput } from 'semantic-ui-calendar-react';\nimport { ContactPersonContext } from '../../context/contactPerson';\nimport Clients from '../contactPersons/listContacts';\nimport IndividualClients from '../policies/listClients';\nimport { ADD_NEW_CONTACT_PERSON, GET_STATUS_OPTS } from './queries';\nimport { GET_CORPORATE_CLIENTS, FETCH_CLIENTS_QUERY } from '../clients/queries';\nimport * as yup from \"yup\";\nimport { AuthContext } from '../../context/auth';\nimport PhoneInput from 'react-phone-input-2';\nimport StatusTypes from '../clients/statusTypes';\n\nfunction AddNewContactPerson({\n  props\n}) {\n  const authContext = useContext(AuthContext);\n  let history = useHistory();\n  const [errors, setErrors] = useState({\n    errorPaths: [],\n    errors: []\n  });\n  const context = useContext(ContactPersonContext);\n  const [successMsg, setSuccessMsg] = useState();\n  const [corporateClients, setCorporateClients] = useState();\n  const [individualClients, setIndividualClients] = useState();\n  const [statusOpts, setStatusOpts] = useState();\n  const [search, setSearch] = useState({\n    search: \"\"\n  });\n  const [responseErrors, setResponseErrors] = useState([]);\n  const [values, setValues] = useState({\n    updated: true,\n    afterSubmit: false,\n    individualClients: [],\n    corporateClients: []\n  });\n  let schema = yup.object().shape({\n    email: yup.string().required(\"Please provide an email address\"),\n    name: yup.string().required(\"Please provide the name\"),\n    // client: yup.string().required(\"Please  select the client\"),\n    phoneNumber: yup.string().required(\"Please provide a phone number\"),\n    position: yup.string().required(\"Please provide the position\"),\n    status: yup.string().required(\"Please indicate status of client\"),\n    serviceLine: yup.string().required(\"Please provide the service line\"),\n    town: yup.string().required(\"Please provide the town of residence\"),\n    dateOfBirth: yup.date().required(\"Please input the date of birth\"),\n    gender: yup.string().required(\"Please select the gender\")\n  });\n  const {\n    data: statusOptsData\n  } = useQuery(GET_STATUS_OPTS);\n  useEffect(() => {\n    if (statusOptsData) {\n      setStatusOpts(statusOptsData.statusOptions);\n    }\n  }, [statusOptsData, statusOpts]);\n  const {\n    data: corporateClientsData\n  } = useQuery(GET_CORPORATE_CLIENTS, {\n    variables: search\n  });\n  const {\n    data: individualClientsData\n  } = useQuery(FETCH_CLIENTS_QUERY, {\n    variables: search\n  });\n  useEffect(() => {\n    if (corporateClientsData) {\n      setCorporateClients(corporateClientsData.corporateClients.items);\n    }\n\n    if (individualClientsData) {\n      setIndividualClients(individualClientsData.individualClients.items);\n    }\n  }, [corporateClientsData, individualClientsData]);\n  const [addContactPerson, {\n    loading\n  }] = useCallback(useMutation(ADD_NEW_CONTACT_PERSON, {\n    update(_, result) {\n      context.registerContactPerson(result.data);\n      setVisible(false);\n      const contactData = result.data.createContactPerson.contactPerson;\n      history.push({\n        pathname: `/staff/dashboard/contact-person/profile/${contactData.id}`,\n        state: {\n          user: contactData\n        }\n      });\n    },\n\n    onError(err) {\n      try {\n        console.log(err.graphQLErrors && err.graphQLErrors[0] ? err.graphQLErrors[0].message : err.networkError && err.networkError.result ? err.networkError.result.errors : err);\n\n        if (err.graphQLErrors) {\n          setResponseErrors(err.graphQLErrors[0].message);\n        }\n\n        if (err.networkError !== null && err.networkError !== 'undefined') {\n          setResponseErrors(err.networkError.result.errors[0]);\n        } else if (err.graphQLErrors !== null && err.networkError !== 'undefined') {\n          setResponseErrors(err.graphQLErrors.result.errors[0]);\n        }\n      } catch (e) {\n        setVisible(true);\n      }\n    },\n\n    variables: values\n  }));\n  const validate = useCallback(values => {\n    schema.validate(values, {\n      abortEarly: false\n    }).then(valid => setErrors({\n      errorPaths: [],\n      errors: []\n    })) //called if the entire form is valid\n    .catch(err => {\n      setErrors({\n        errors: err.errors,\n        errorPaths: err.inner.map(i => i.path)\n      });\n    });\n  }, [schema]);\n  useEffect(() => {\n    if (values.updated) {\n      setValues({ ...values,\n        updated: false\n      });\n\n      if (values.afterSubmit) {\n        validate(values);\n      }\n    }\n  }, [values, validate]);\n\n  const handleOnGenderChange = (e, {\n    value\n  }) => {\n    e.preventDefault();\n    setValues({ ...values,\n      gender: value,\n      updated: true\n    });\n  };\n\n  const handleOnClientSearch = e => {\n    setSearch({\n      search: e.target.value\n    });\n  };\n\n  const handleOnClientChange = (e, {\n    value\n  }) => {\n    e.preventDefault();\n    setValues({ ...values,\n      individualClients: value,\n      updated: true\n    });\n  };\n\n  const handleOnCorporateClientChange = (e, {\n    value\n  }) => {\n    e.preventDefault();\n    setValues({ ...values,\n      corporateClients: value,\n      updated: true\n    });\n  };\n\n  const handleOnStatusTypesChange = (e, {\n    value\n  }) => {\n    e.preventDefault();\n    setValues({ ...values,\n      statusType: value,\n      updated: true\n    });\n  };\n\n  const onChange = useCallback((event, {\n    name,\n    value\n  }) => {\n    setValues({ ...values,\n      [name]: value,\n      updated: true\n    });\n  }, [values]);\n  const [visible, setVisible] = useState(false);\n\n  const handleDismiss = () => {\n    setVisible(false);\n    setSuccessMsg('');\n  };\n\n  const genderOptions = [{\n    key: 'F',\n    text: 'Female',\n    value: 'F'\n  }, {\n    key: 'M',\n    text: 'Male',\n    value: 'M'\n  }, {\n    key: 'O',\n    text: 'Other',\n    value: 'O'\n  }];\n  const onPhoneNumberChange = useCallback(value => {\n    setValues({ ...values,\n      phoneNumber: \"+\" + value,\n      updated: true\n    });\n  }, [values]);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setSuccessMsg('');\n    validate(values);\n    setValues({ ...values,\n      afterSubmit: true\n    });\n\n    if (Object.keys(values).length > 7 && !errors.errors.length) {\n      addContactPerson();\n    }\n\n    setVisible(false);\n    console.log(\"errors\", errors);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Header.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/staff/dashboard/contact-person-records\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 33\n    }\n  }, \"Contact Person Records\"), \" \", '>', \" Register Contact Person\", /*#__PURE__*/React.createElement(Header.Subheader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, \"Hello \", authContext.user.username, \", Fill in this form to register a new contact person\")))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, successMsg ? /*#__PURE__*/React.createElement(Message, {\n    positive: true,\n    onDismiss: handleDismiss,\n    header: \"status\",\n    content: successMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 25\n    }\n  }) : '', /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    noValidate: true,\n    className: loading ? \"loading\" : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Message, {\n    visible: !!errors.errors.length || visible,\n    warning: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Message.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 33\n    }\n  }, \"Please correct the following issues:\"), !!responseErrors.length && /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 61\n    }\n  }, responseErrors), /*#__PURE__*/React.createElement(Message.List, {\n    items: errors.errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 34\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    error: errors.errorPaths.includes('name'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 33\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Form.Input, {\n    fluid: true,\n    placeholder: \"Name\",\n    name: \"name\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 33\n    }\n  }, \"Postal Address\"), /*#__PURE__*/React.createElement(Form.Input, {\n    fluid: true,\n    placeholder: \"Post Address\",\n    name: \"postalAddress\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    error: errors.errorPaths.includes('serviceLine'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 33\n    }\n  }, \"Service Line\"), /*#__PURE__*/React.createElement(Form.Input, {\n    fluid: true,\n    placeholder: \"service Line\",\n    name: \"serviceLine\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    error: errors.errorPaths.includes('position'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 33\n    }\n  }, \"Position\"), /*#__PURE__*/React.createElement(Form.Input, {\n    fluid: true,\n    placeholder: \"Position\",\n    name: \"position\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    error: errors.errorPaths.includes('phoneNumber'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(PhoneInput, {\n    inputExtraProps: {\n      name: \"phoneNumber\",\n      required: true,\n      autoFocus: true,\n      enableSearch: true\n    },\n    style: {\n      fontWeight: \"bold\"\n    },\n    name: \"phoneNumber\",\n    specialLabel: \"Phone Number *\",\n    country: \"ke\",\n    value: values.phoneNumber,\n    onChange: onPhoneNumberChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    error: errors.errorPaths.includes('town'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 33\n    }\n  }, \"Residence (Town)\"), /*#__PURE__*/React.createElement(Form.Input, {\n    fluid: true,\n    placeholder: \"Residence (Town)\",\n    name: \"town\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    error: errors.errorPaths.includes('corporateClients'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 33\n    }\n  }, \"Corporate Client\"), corporateClients && /*#__PURE__*/React.createElement(Clients, {\n    clients: corporateClients,\n    multiple: true,\n    handleOnClientSearch: handleOnClientSearch,\n    handleOnClientChange: handleOnCorporateClientChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 54\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    error: errors.errorPaths.includes('individualClients'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 33\n    }\n  }, \"Individual Client\"), individualClients && /*#__PURE__*/React.createElement(IndividualClients, {\n    clients: individualClients,\n    multiple: true,\n    handleOnClientSearch: handleOnClientSearch,\n    handleOnClientChange: handleOnClientChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 55\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    error: errors.errorPaths.includes('status'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 33\n    }\n  }, \"Client Status\"), statusOpts && statusOpts.statusOptions && /*#__PURE__*/React.createElement(StatusTypes, {\n    statusTypes: statusOpts.statusOptions,\n    handleOnStatusTypesChange: handleOnStatusTypesChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 76\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    error: errors.errorPaths.includes('email'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 33\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(Form.Input, {\n    fluid: true,\n    placeholder: \"Email Address\",\n    name: \"email\",\n    type: \"email\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    error: errors.errorPaths.includes('gender'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 33\n    }\n  }, \"Gender\"), /*#__PURE__*/React.createElement(Dropdown, {\n    placeholder: \"Select Gender\",\n    fluid: true,\n    selection: true,\n    onChange: handleOnGenderChange,\n    options: genderOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    error: errors.errorPaths.includes('dateOfBirth'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 33\n    }\n  }, \"Date Of Birth\"), /*#__PURE__*/React.createElement(DateInput, {\n    name: \"dateOfBirth\",\n    placeholder: \"Date Of Birth\",\n    popupPosition: \"bottom left\",\n    value: values.dateOfBirth ? values.dateOfBirth : \"\",\n    iconPosition: \"left\",\n    dateFormat: \"YYYY-MM-DD\",\n    maxDate: moment(),\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 25\n    }\n  }, \"Register Contact Person\")))));\n}\n\nexport default AddNewContactPerson;","map":{"version":3,"sources":["/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/contactPersons/addNewContactPerson.js"],"names":["useHistory","useMutation","useQuery","React","useState","useContext","useEffect","useCallback","Grid","Container","Header","Icon","Form","Message","Button","Dropdown","moment","DateInput","ContactPersonContext","Clients","IndividualClients","ADD_NEW_CONTACT_PERSON","GET_STATUS_OPTS","GET_CORPORATE_CLIENTS","FETCH_CLIENTS_QUERY","yup","AuthContext","PhoneInput","StatusTypes","AddNewContactPerson","props","authContext","history","errors","setErrors","errorPaths","context","successMsg","setSuccessMsg","corporateClients","setCorporateClients","individualClients","setIndividualClients","statusOpts","setStatusOpts","search","setSearch","responseErrors","setResponseErrors","values","setValues","updated","afterSubmit","schema","object","shape","email","string","required","name","phoneNumber","position","status","serviceLine","town","dateOfBirth","date","gender","data","statusOptsData","statusOptions","corporateClientsData","variables","individualClientsData","items","addContactPerson","loading","update","_","result","registerContactPerson","setVisible","contactData","createContactPerson","contactPerson","push","pathname","id","state","user","onError","err","console","log","graphQLErrors","message","networkError","e","validate","abortEarly","then","valid","catch","inner","map","i","path","handleOnGenderChange","value","preventDefault","handleOnClientSearch","target","handleOnClientChange","handleOnCorporateClientChange","handleOnStatusTypesChange","statusType","onChange","event","visible","handleDismiss","genderOptions","key","text","onPhoneNumberChange","onSubmit","Object","keys","length","username","includes","autoFocus","enableSearch","fontWeight"],"mappings":"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","sourcesContent":["import { useHistory } from 'react-router-dom';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport React, { useState, useContext, useEffect, useCallback } from 'react';\nimport {\n    Grid,\n    Container,\n    Header,\n    Icon,\n    Form,\n    Message,\n    Button,\n    Dropdown\n} from 'semantic-ui-react';\nimport moment from 'moment';\nimport { DateInput } from 'semantic-ui-calendar-react';\nimport { ContactPersonContext } from '../../context/contactPerson';\nimport Clients from '../contactPersons/listContacts';\nimport IndividualClients from '../policies/listClients';\nimport { ADD_NEW_CONTACT_PERSON, GET_STATUS_OPTS } from './queries';\nimport { GET_CORPORATE_CLIENTS, FETCH_CLIENTS_QUERY } from '../clients/queries';\nimport * as yup from \"yup\";\nimport { AuthContext } from '../../context/auth';\nimport PhoneInput from 'react-phone-input-2';\nimport StatusTypes from '../clients/statusTypes';\n\nfunction AddNewContactPerson({ props }) {\n    const authContext = useContext(AuthContext);\n    let history = useHistory();\n\n    const [errors, setErrors] = useState({\n        errorPaths: [],\n        errors: []\n    });\n    const context = useContext(ContactPersonContext);\n    const [successMsg, setSuccessMsg] = useState();\n    const [corporateClients, setCorporateClients] = useState();\n    const [individualClients, setIndividualClients] = useState();\n    const [statusOpts, setStatusOpts] = useState();\n    const [search, setSearch] = useState({ search: \"\" });\n    const [responseErrors, setResponseErrors] = useState([]);\n\n\n    const [values, setValues] = useState({\n        updated: true,\n        afterSubmit: false,\n        individualClients: [],\n        corporateClients: []\n    });\n    let schema = yup.object().shape({\n        email: yup.string().required(\"Please provide an email address\"),\n        name: yup.string().required(\"Please provide the name\"),\n        // client: yup.string().required(\"Please  select the client\"),\n        phoneNumber: yup.string().required(\"Please provide a phone number\"),\n        position: yup.string().required(\"Please provide the position\"),\n        status:yup.string().required(\"Please indicate status of client\"),\n        serviceLine: yup.string().required(\"Please provide the service line\"),\n        town: yup.string().required(\"Please provide the town of residence\"),\n        dateOfBirth: yup.date().required(\"Please input the date of birth\"),\n        gender: yup.string().required(\"Please select the gender\"),\n    });\n\n    const { data: statusOptsData } = useQuery(GET_STATUS_OPTS);\n    useEffect(() => {\n        if (statusOptsData) {\n            setStatusOpts(statusOptsData.statusOptions);\n        }\n    }, [statusOptsData, statusOpts]);\n\n    const { data: corporateClientsData } = useQuery(GET_CORPORATE_CLIENTS, {\n        variables: search\n    });\n    const { data: individualClientsData } = useQuery(FETCH_CLIENTS_QUERY, {\n        variables: search\n    });\n    useEffect(() => {\n\n        if (corporateClientsData) {\n            setCorporateClients(corporateClientsData.corporateClients.items);\n        }\n        if (individualClientsData) {\n            setIndividualClients(individualClientsData.individualClients.items);\n        }\n    }, [corporateClientsData, individualClientsData]);\n\n    const [addContactPerson, { loading }] = useCallback(useMutation(ADD_NEW_CONTACT_PERSON, {\n        update(_, result) {\n            context.registerContactPerson(result.data);\n            setVisible(false);\n            const contactData = result.data.createContactPerson.contactPerson\n            history.push({\n                pathname: `/staff/dashboard/contact-person/profile/${contactData.id}`,\n                state: { user: contactData }\n            })\n        },\n        onError(err) {\n            try {\n                console.log(err.graphQLErrors && err.graphQLErrors[0] ? err.graphQLErrors[0].message : err.networkError && err.networkError.result ? err.networkError.result.errors : err)\n\n                if (err.graphQLErrors) {\n                    setResponseErrors(err.graphQLErrors[0].message);\n                }\n\n                if (err.networkError !== null && err.networkError !== 'undefined') {\n\n                    setResponseErrors(err.networkError.result.errors[0]);\n\n                } else if (err.graphQLErrors !== null && err.networkError !== 'undefined') {\n\n                    setResponseErrors(err.graphQLErrors.result.errors[0]);\n\n                }\n            } catch (e) {\n                setVisible(true);\n            }\n\n        },\n        variables: values\n    }));\n\n    const validate = useCallback((values) => {\n        schema.validate(values, { abortEarly: false })\n            .then(valid => setErrors({ errorPaths: [], errors: [] })) //called if the entire form is valid\n            .catch(err => {\n                setErrors({ errors: err.errors, errorPaths: err.inner.map(i => i.path) })\n            })\n    }, [schema])\n\n    useEffect(() => {\n        if (values.updated) {\n            setValues({ ...values, updated: false })\n            if (values.afterSubmit) {\n                validate(values)\n            }\n        }\n    }, [values, validate])\n    const handleOnGenderChange = (e, { value }) => {\n        e.preventDefault()\n        setValues({ ...values, gender: value, updated: true });\n    }\n    const handleOnClientSearch = (e) => {\n        setSearch({ search: e.target.value });\n    }\n    const handleOnClientChange = (e, { value }) => {\n        e.preventDefault()\n        setValues({ ...values, individualClients: value, updated: true });\n    }\n    const handleOnCorporateClientChange = (e, { value }) => {\n        e.preventDefault()\n        setValues({ ...values, corporateClients: value, updated: true });\n    }\n\n    const handleOnStatusTypesChange = (e, { value }) => {\n        e.preventDefault()\n        setValues({ ...values, statusType: value, updated: true });\n    }\n    const onChange = useCallback((event, { name, value }) => {\n        setValues({ ...values, [name]: value, updated: true });\n    }, [values])\n    const [visible, setVisible] = useState(false);\n\n    const handleDismiss = () => {\n        setVisible(false);\n        setSuccessMsg('');\n    }\n    const genderOptions = [\n        {\n            key: 'F',\n            text: 'Female',\n            value: 'F',\n        },\n        {\n            key: 'M',\n            text: 'Male',\n            value: 'M',\n        },\n        {\n            key: 'O',\n            text: 'Other',\n            value: 'O',\n        }\n    ]\n    const onPhoneNumberChange = useCallback((value) => {\n        setValues({ ...values, phoneNumber: \"+\" + value, updated: true });\n    }, [values])\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        setSuccessMsg('');\n        validate(values)\n        setValues({ ...values, afterSubmit: true })\n        if (Object.keys(values).length > 7 && !errors.errors.length) { addContactPerson() }\n        setVisible(false);\n        console.log(\"errors\", errors)\n    }\n    return (\n        <Container>\n            <Grid container padded>\n                <Grid.Column>\n                    <div className=\"content-wrapper\">\n                        <Header as='h2'>\n                            <Icon name='settings' />\n                            <Header.Content>\n                                <a href=\"/staff/dashboard/contact-person-records\">Contact Person Records</a> {'>'} Register Contact Person\n                <Header.Subheader>\n                                    Hello {authContext.user.username}, Fill in this form to register a new contact person\n                </Header.Subheader>\n                            </Header.Content>\n                        </Header>\n                    </div>\n                </Grid.Column>\n            </Grid>\n\n            <Grid container padded>\n                <Grid.Column>\n                    {successMsg ?\n                        <Message\n                            positive\n                            onDismiss={handleDismiss}\n                            header='status'\n                            content={successMsg} /> :\n                        ''}\n\n                    <Form onSubmit={onSubmit} noValidate className={loading ? \"loading\" : ''}>\n                        <Form.Group>\n                            <Message visible={!!errors.errors.length || visible} warning>\n                                <Message.Header>Please correct the following issues:</Message.Header>\n                                {!!responseErrors.length && <Message>{responseErrors}</Message>}\n                                {<Message.List items={errors.errors} />}\n                            </Message>\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <Form.Field required error={errors.errorPaths.includes('name')}>\n                                <label>Name</label>\n                                <Form.Input fluid placeholder='Name'\n                                    name='name'\n                                    onChange={onChange}\n\n                                />\n                            </Form.Field>\n                            <Form.Field>\n                                <label>Postal Address</label>\n                                <Form.Input fluid placeholder='Post Address'\n                                    name='postalAddress'\n                                    onChange={onChange}\n                                />\n                            </Form.Field>\n                            <Form.Field required error={errors.errorPaths.includes('serviceLine')}>\n                                <label>Service Line</label>\n                                <Form.Input fluid placeholder='service Line'\n                                    name='serviceLine'\n                                    onChange={onChange}\n\n                                />\n                            </Form.Field>\n\n\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <Form.Field required error={errors.errorPaths.includes('position')}>\n                                <label>Position</label>\n                                <Form.Input fluid placeholder='Position'\n                                    name='position'\n                                    onChange={onChange}\n\n                                />\n                            </Form.Field>\n                            <Form.Field required error={errors.errorPaths.includes('phoneNumber')}>\n                                <PhoneInput\n                                    inputExtraProps={{\n                                        name: \"phoneNumber\",\n                                        required: true,\n                                        autoFocus: true,\n                                        enableSearch: true\n                                    }}\n                                    style={{ fontWeight: \"bold\" }}\n                                    name='phoneNumber'\n                                    specialLabel='Phone Number *'\n                                    country={\"ke\"}\n                                    value={values.phoneNumber}\n                                    onChange={onPhoneNumberChange}\n                                />\n                            </Form.Field>\n                            <Form.Field required error={errors.errorPaths.includes('town')}>\n                                <label>Residence (Town)</label>\n                                <Form.Input\n                                    fluid placeholder='Residence (Town)'\n                                    name='town'\n                                    onChange={onChange}\n\n                                />\n                            </Form.Field>\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <Form.Field error={errors.errorPaths.includes('corporateClients')}>\n                                <label>Corporate Client</label>\n                                {corporateClients && <Clients\n                                    clients={corporateClients}\n                                    multiple={true}\n                                    handleOnClientSearch={handleOnClientSearch}\n                                    handleOnClientChange={handleOnCorporateClientChange}\n                                />}\n                            </Form.Field>\n                            <Form.Field error={errors.errorPaths.includes('individualClients')}>\n                                <label>Individual Client</label>\n                                {individualClients && <IndividualClients\n                                    clients={individualClients}\n                                    multiple={true}\n                                    handleOnClientSearch={handleOnClientSearch}\n                                    handleOnClientChange={handleOnClientChange}\n                                />}\n                            </Form.Field>\n                            <Form.Field required error={errors.errorPaths.includes('status')}>\n                                <label>Client Status</label>\n                                {statusOpts && statusOpts.statusOptions && <StatusTypes\n                                    statusTypes={statusOpts.statusOptions}\n                                    handleOnStatusTypesChange={handleOnStatusTypesChange}\n                                />}\n                            </Form.Field>\n\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <Form.Field required error={errors.errorPaths.includes('email')}>\n                                <label>Email Address</label>\n                                <Form.Input fluid placeholder='Email Address'\n                                    name='email'\n                                    type=\"email\"\n                                    onChange={onChange}\n\n                                />\n                            </Form.Field>\n                            <Form.Field required error={errors.errorPaths.includes('gender')}>\n                                <label>Gender</label>\n                                <Dropdown\n                                    placeholder='Select Gender'\n                                    fluid\n                                    selection\n                                    onChange={handleOnGenderChange}\n                                    options={genderOptions}\n                                />\n                            </Form.Field>\n\n                            <Form.Field required error={errors.errorPaths.includes('dateOfBirth')}>\n                                <label>Date Of Birth</label>\n\n                                <DateInput\n                                    name=\"dateOfBirth\"\n                                    placeholder=\"Date Of Birth\"\n                                    popupPosition=\"bottom left\"\n                                    value={values.dateOfBirth ? values.dateOfBirth : \"\"}\n                                    iconPosition=\"left\"\n                                    dateFormat=\"YYYY-MM-DD\"\n                                    maxDate={moment()}\n                                    onChange={onChange}\n                                />\n                            </Form.Field>\n                        </Form.Group>\n                        <Button type='submit'>Register Contact Person</Button>\n\n                    </Form>\n                </Grid.Column>\n            </Grid>\n        </Container>\n    )\n}\n\nexport default AddNewContactPerson;"]},"metadata":{},"sourceType":"module"}