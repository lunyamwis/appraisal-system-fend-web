{"ast":null,"code":"var _jsxFileName = \"/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/contactPersons/contactPersonProfile.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { ContactPersonContext } from '../../context/contactPerson';\nimport { GET_CONTACT_PERSON } from './queries';\nimport { useQuery } from '@apollo/react-hooks';\nimport Profile from '../common/profile';\nexport default function ContactPersonProfile({\n  props\n}) {\n  const [user, setUser] = useState('records');\n  const [fetched, setFetched] = useState(false);\n  const context = useContext(ContactPersonContext);\n  const userId = props.computedMatch.params.contactPersonId;\n  const {\n    data: userData\n  } = useQuery(GET_CONTACT_PERSON, {\n    variables: {\n      id: userId\n    }\n  });\n  useEffect(() => {\n    if (userData) {\n      setUser(userData.contactPerson);\n\n      if (!fetched) {\n        context.getContactPerson(userData.contactPerson);\n        setFetched(true);\n      }\n    }\n  }, [context, fetched, userData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, user && /*#__PURE__*/React.createElement(Profile, {\n    user: user,\n    isContactPerson: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }\n  }));\n}","map":{"version":3,"sources":["/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/contactPersons/contactPersonProfile.js"],"names":["React","useState","useContext","useEffect","ContactPersonContext","GET_CONTACT_PERSON","useQuery","Profile","ContactPersonProfile","props","user","setUser","fetched","setFetched","context","userId","computedMatch","params","contactPersonId","data","userData","variables","id","contactPerson","getContactPerson"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,oBAAT,QAAqC,6BAArC;AACA,SAASC,kBAAT,QAAmC,WAAnC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,eAAe,SAASC,oBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAAyC;AACtD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,SAAD,CAAhC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMa,OAAO,GAAGZ,UAAU,CAACE,oBAAD,CAA1B;AACA,QAAMW,MAAM,GAAGN,KAAK,CAACO,aAAN,CAAoBC,MAApB,CAA2BC,eAA1C;AAEA,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAqBd,QAAQ,CAACD,kBAAD,EAAqB;AAAEgB,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEP;AAAN;AAAb,GAArB,CAAnC;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,QAAJ,EAAc;AACZT,MAAAA,OAAO,CAACS,QAAQ,CAACG,aAAV,CAAP;;AACA,UAAI,CAACX,OAAL,EAAc;AACZE,QAAAA,OAAO,CAACU,gBAAR,CAAyBJ,QAAQ,CAACG,aAAlC;AACAV,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF;AACF,GARQ,EAQN,CAACC,OAAD,EAAUF,OAAV,EAAmBQ,QAAnB,CARM,CAAT;AASA,sBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,IAAI,iBAAI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEA,IAAf;AAAqB,IAAA,eAAe,EAAE,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,CAFF;AAKD","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { ContactPersonContext } from '../../context/contactPerson';\nimport { GET_CONTACT_PERSON } from './queries'\nimport { useQuery } from '@apollo/react-hooks';\nimport Profile from '../common/profile'\n\nexport default function ContactPersonProfile({ props }) {\n  const [user, setUser] = useState('records');\n  const [fetched, setFetched] = useState(false);\n  const context = useContext(ContactPersonContext);\n  const userId = props.computedMatch.params.contactPersonId\n\n  const { data: userData } = useQuery(GET_CONTACT_PERSON, { variables: { id: userId } })\n  useEffect(() => {\n    if (userData) {\n      setUser(userData.contactPerson)\n      if (!fetched) {\n        context.getContactPerson(userData.contactPerson)\n        setFetched(true)\n      }\n    }\n  }, [context, fetched, userData])\n  return (\n\n    <div>\n      {user && <Profile user={user} isContactPerson={true} />}\n    </div>)\n}\n"]},"metadata":{},"sourceType":"module"}