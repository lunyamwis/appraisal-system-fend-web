{"ast":null,"code":"var _jsxFileName = \"/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/context/contactPerson.js\";\nimport React, { useReducer, createContext } from 'react';\nconst initialState = {\n  user: null,\n  contacts: null\n};\nconst ContactPersonContext = createContext({\n  contacts: null,\n  user: null\n});\n\nfunction contactPersonReducer(state, action) {\n  switch (action.type) {\n    case 'REGISTER_CONTACT_PERSON':\n      return { ...state,\n        user: action.payload,\n        systemAlert: action.message\n      };\n\n    case 'GET_CONTACT_PERSONS':\n      return { ...state,\n        contacts: action.payload\n      };\n\n    case 'GET_CONTACT_PERSON':\n      return { ...state,\n        contact: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction ContactPersonProvider(props) {\n  const [state, dispatch] = useReducer(contactPersonReducer, initialState);\n\n  function registerContactPerson(userData) {\n    dispatch({\n      type: 'REGISTER_CONTACT_PERSON',\n      payload: userData\n    });\n  }\n\n  function getContactPerson(userData) {\n    dispatch({\n      type: 'GET_CONTACT_PERSON',\n      payload: userData\n    });\n  }\n\n  function getContactPersons(userData) {\n    dispatch({\n      type: 'GET_CONTACT_PERSONS',\n      payload: userData\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ContactPersonContext.Provider, Object.assign({\n    value: {\n      user: state.user,\n      contacts: state.contacts,\n      registerContactPerson,\n      getContactPerson,\n      getContactPersons\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport { ContactPersonContext, ContactPersonProvider };","map":{"version":3,"sources":["/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/context/contactPerson.js"],"names":["React","useReducer","createContext","initialState","user","contacts","ContactPersonContext","contactPersonReducer","state","action","type","payload","systemAlert","message","contact","ContactPersonProvider","props","dispatch","registerContactPerson","userData","getContactPerson","getContactPersons"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,IADW;AAEjBC,EAAAA,QAAQ,EAAE;AAFO,CAArB;AAOA,MAAMC,oBAAoB,GAAGJ,aAAa,CAAC;AACvCG,EAAAA,QAAQ,EAAE,IAD6B;AAEvCD,EAAAA,IAAI,EAAE;AAFiC,CAAD,CAA1C;;AAKA,SAASG,oBAAT,CAA8BC,KAA9B,EAAqCC,MAArC,EAA6C;AACzC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,yBAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHJ,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAFV;AAGHC,QAAAA,WAAW,EAAEH,MAAM,CAACI;AAHjB,OAAP;;AAKJ,SAAK,qBAAL;AACI,aAAO,EACH,GAAGL,KADA;AAEHH,QAAAA,QAAQ,EAAEI,MAAM,CAACE;AAFd,OAAP;;AAIJ,SAAK,oBAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHM,QAAAA,OAAO,EAAEL,MAAM,CAACE;AAFb,OAAP;;AAIJ;AACI,aAAOH,KAAP;AAlBR;AAoBH;;AAED,SAASO,qBAAT,CAA+BC,KAA/B,EAAsC;AAClC,QAAM,CAACR,KAAD,EAAQS,QAAR,IAAoBhB,UAAU,CAACM,oBAAD,EAAuBJ,YAAvB,CAApC;;AAEA,WAASe,qBAAT,CAA+BC,QAA/B,EAAyC;AAErCF,IAAAA,QAAQ,CAAC;AACLP,MAAAA,IAAI,EAAE,yBADD;AAELC,MAAAA,OAAO,EAAEQ;AAFJ,KAAD,CAAR;AAKH;;AACD,WAASC,gBAAT,CAA0BD,QAA1B,EAAoC;AAEhCF,IAAAA,QAAQ,CAAC;AACLP,MAAAA,IAAI,EAAE,oBADD;AAELC,MAAAA,OAAO,EAAEQ;AAFJ,KAAD,CAAR;AAKH;;AACD,WAASE,iBAAT,CAA2BF,QAA3B,EAAqC;AAEjCF,IAAAA,QAAQ,CAAC;AACLP,MAAAA,IAAI,EAAE,qBADD;AAELC,MAAAA,OAAO,EAAEQ;AAFJ,KAAD,CAAR;AAKH;;AAED,sBACI,oBAAC,oBAAD,CAAsB,QAAtB;AACI,IAAA,KAAK,EAAE;AAAEf,MAAAA,IAAI,EAAEI,KAAK,CAACJ,IAAd;AAAoBC,MAAAA,QAAQ,EAAEG,KAAK,CAACH,QAApC;AAA8Ca,MAAAA,qBAA9C;AAAqEE,MAAAA,gBAArE;AAAuFC,MAAAA;AAAvF;AADX,KAEQL,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAMH;;AAED,SAASV,oBAAT,EAA+BS,qBAA/B","sourcesContent":["import React, { useReducer, createContext } from 'react';\n\nconst initialState = {\n    user: null,\n    contacts: null,\n}\n\n\n\nconst ContactPersonContext = createContext({\n    contacts: null,\n    user: null\n});\n\nfunction contactPersonReducer(state, action) {\n    switch (action.type) {\n        case 'REGISTER_CONTACT_PERSON':\n            return {\n                ...state,\n                user: action.payload,\n                systemAlert: action.message\n            }\n        case 'GET_CONTACT_PERSONS':\n            return {\n                ...state,\n                contacts: action.payload\n            }\n        case 'GET_CONTACT_PERSON':\n            return {\n                ...state,\n                contact: action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nfunction ContactPersonProvider(props) {\n    const [state, dispatch] = useReducer(contactPersonReducer, initialState);\n\n    function registerContactPerson(userData) {\n\n        dispatch({\n            type: 'REGISTER_CONTACT_PERSON',\n            payload: userData,\n        })\n\n    }\n    function getContactPerson(userData) {\n\n        dispatch({\n            type: 'GET_CONTACT_PERSON',\n            payload: userData,\n        })\n\n    }\n    function getContactPersons(userData) {\n\n        dispatch({\n            type: 'GET_CONTACT_PERSONS',\n            payload: userData,\n        })\n\n    }\n\n    return (\n        <ContactPersonContext.Provider\n            value={{ user: state.user, contacts: state.contacts, registerContactPerson, getContactPerson, getContactPersons }}\n            {...props}\n        />\n    )\n}\n\nexport { ContactPersonContext, ContactPersonProvider }\n"]},"metadata":{},"sourceType":"module"}