{"ast":null,"code":"var _jsxFileName = \"/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/admin/adminDashboard.js\";\nimport React, { useContext, useState, useEffect, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { Grid, Container, Header, Tab, Form, Message, Image, Loader, Button, Icon, Pagination } from 'semantic-ui-react';\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { AuthContext } from '../../context/auth';\nimport '../root.scss';\nimport PhoneInput from 'react-phone-input-2';\n\nfunction AdminDashBoard({\n  props\n}) {\n  const context = useContext(AuthContext);\n  const [errors, setErrors] = useState({});\n  let userInfo = context.user; // console.log(props)\n  // if (userInfo.roles && userInfo.roles[0] === \"manager\") {\n  //     props.history.push(\"/staff/dashboard/overview\");\n  // }\n\n  const [pagination, setPagination] = useState({\n    limit: 10,\n    page: 1,\n    search: \"\"\n  });\n  let count = 1;\n  const [values, setValues] = useState({\n    staffUsername: \"\",\n    staffPassword: \"\",\n    staffEmail: \"\",\n    staffFirstName: \"\",\n    staffLastName: \"\",\n    staffPhoneNumber: \"\"\n  });\n  const [visible, setVisible] = useState(false);\n  const [users, setUsers] = useState({});\n\n  const handleDismiss = () => {\n    setVisible(false);\n  };\n\n  const [message, setMessage] = useState({});\n  const [addUser, {\n    loading\n  }] = useMutation(REGISTER_STAFF, {\n    update(_, result) {\n      context.registerStaff(result.data);\n      const response = result.data.createUser.user.username;\n      console.log(\"made user\", response);\n      let successMessage = `Staff ${response} has been created successfully. Please instruct them to verify their account before use.`;\n      setMessage(successMessage);\n      console.log(\"message\", message);\n      values.staffUsername = \"\";\n      values.staffPassword = \"\";\n      values.staffEmail = \"\";\n      values.staffFirstName = \"\";\n      values.staffLastName = \"\";\n      values.staffPhoneNumber = \"\";\n    },\n\n    onError(err) {\n      try {\n        if (err.networkError !== null && err.networkError !== 'undefined') {\n          setErrors(err.networkError.result.errors[0]);\n        } else if (err.graphQLErrors !== null && err.networkError !== 'undefined') {\n          setErrors(err.graphQLErrors.result.errors[0]);\n        }\n      } catch (e) {\n        setErrors(err);\n      }\n    },\n\n    variables: values\n  });\n\n  const onChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const onPhoneNumberChange = useCallback(value => {\n    setValues({ ...values,\n      staffPhoneNumber: \"+\" + value,\n      updated: true\n    });\n  }, [values]);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    errors.message = \"\";\n    addUser();\n    setVisible(true);\n  };\n\n  const {\n    loading: usersLoading,\n    data: usersData\n  } = useQuery(FETCH_USERS_QUERY, {\n    variables: pagination\n  });\n  useEffect(() => {\n    if (usersData) {\n      setUsers(usersData.users);\n    }\n  }, [usersData]);\n\n  const handleOnPageChange = (e, data) => {\n    e.preventDefault();\n    setPagination({ ...pagination,\n      page: data.activePage\n    });\n  };\n\n  const handleOnSearch = e => {\n    e.preventDefault();\n    setPagination({ ...pagination,\n      search: e.target.value\n    });\n  };\n\n  const panes = [{\n    menuItem: 'Staff',\n    render: () => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, \" \", usersLoading ? /*#__PURE__*/React.createElement(Loader, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }) : users && users.count === 0 ? /*#__PURE__*/React.createElement(Message, {\n      onDismiss: handleDismiss,\n      content: 'No Staff members in the Database.',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 50\n      }\n    }) : /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      columns: 4,\n      className: loading ? \"loading\" : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 37\n      }\n    }, \"Name\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 37\n      }\n    }, \"Email\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 37\n      }\n    }, \"Phone Number\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 37\n      }\n    }, \"Join Date\"))), users.items && users.items.map(client => /*#__PURE__*/React.createElement(Grid.Row, {\n      key: client.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 41\n      }\n    }, count++, \". \"), /*#__PURE__*/React.createElement(Image, {\n      src: \"https://react.semantic-ui.com/images/wireframe/square-image.png\",\n      avatar: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textTransform: 'titlecase'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 41\n      }\n    }, client.firstName, \" \", client.lastName)), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 37\n      }\n    }, client.email), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 37\n      }\n    }, client.phoneNumber), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      floated: \"left\",\n      width: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 45\n      }\n    }, moment(client.createdAt).format('DD/MM/YYYY')), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 1,\n      floated: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/staff/dashboard/users/profile/${client.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      icon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"external alternate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 57\n      }\n    }))))))))), users.page && /*#__PURE__*/React.createElement(Pagination, {\n      defaultActivePage: users.page,\n      firstItem: null,\n      lastItem: null,\n      pointing: true,\n      secondary: true,\n      onPageChange: handleOnPageChange,\n      totalPages: users.pages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 36\n      }\n    }))\n  }, {\n    menuItem: 'Add new Staff',\n    render: () => /*#__PURE__*/React.createElement(Form, {\n      onSubmit: onSubmit,\n      noValidate: true,\n      className: loading ? \"loading\" : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      as: \"h4\",\n      className: \"float-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }, \"Personal Information\"), /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      label: \"Username\",\n      placeholder: \"Username\",\n      name: \"staffUsername\",\n      value: values.staffUsername,\n      onChange: onChange,\n      id: \"username\",\n      errors: errors.staffUsername ? true : undefined,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      label: \"First name\",\n      placeholder: \"First name\",\n      name: \"staffFirstName\",\n      value: values.staffFirstName,\n      onChange: onChange,\n      errors: errors.staffFirstName ? true : undefined,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      label: \"Last name\",\n      placeholder: \"Last name\",\n      name: \"staffLastName\",\n      value: values.staffLastName,\n      onChange: onChange,\n      errors: errors.staffLastName ? true : undefined,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      label: \"Password\",\n      placeholder: \"Password\",\n      name: \"staffPassword\",\n      value: values.staffPassword,\n      onChange: onChange,\n      errors: errors.staffPassword ? true : undefined,\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      label: \"Email\",\n      placeholder: \"Email Address\",\n      name: \"staffEmail\",\n      value: values.staffEmail,\n      onChange: onChange,\n      errors: errors.staffEmail ? true : undefined,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(PhoneInput, {\n      inputExtraProps: {\n        name: \"phoneNumber\",\n        required: true,\n        autoFocus: true,\n        enableSearch: true\n      },\n      style: {\n        fontWeight: \"bold\"\n      },\n      name: \"phoneNumber\",\n      specialLabel: \"Phone Number *\",\n      country: \"ke\",\n      value: values.staffPhoneNumber,\n      onChange: onPhoneNumberChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      label: \"Phone Number\",\n      placeholder: \"Phone number\",\n      name: \"staffPhoneNumber\",\n      value: values.staffPhoneNumber,\n      onChange: onChange,\n      errors: errors.staffPhoneNumber ? true : undefined,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Checkbox, {\n      label: \"I agree to the Terms and Conditions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Button, {\n      secondary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 21\n      }\n    }, \"Register Staff\"))\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h3\",\n    className: \"float-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 29\n    }\n  }, \"Hi there, \", userInfo.username, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 29\n    }\n  }, \"Welcome to your admin account.\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    columns: 1,\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    placeholder: \"Name, Phone number...\",\n    name: \"name\",\n    onChange: handleOnSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(Form.Button, {\n    icon: true,\n    size: 'medium',\n    onClick: e => {\n      e.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 49\n    }\n  }), \"Find Staff\"))))), /*#__PURE__*/React.createElement(Tab, {\n    className: \"clear-top\",\n    menu: {\n      secondary: true,\n      pointing: true\n    },\n    panes: panes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 29\n    }\n  }), visible ? /*#__PURE__*/React.createElement(Message, {\n    onDismiss: handleDismiss,\n    content: errors ? errors.message : '' && message ? message : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 33\n    }\n  }) : '')))));\n}\n\nconst REGISTER_STAFF = gql`\nmutation createUser (\n    $staffUsername: String!\n    $staffPassword: String!\n    $staffEmail: String!\n    $staffFirstName: String!\n    $staffLastName: String!\n    $staffPhoneNumber: String!\n){\n    createUser(input:{\n      username: $staffUsername\n      password: $staffPassword\n      email: $staffEmail\n      firstName: $staffFirstName\n      lastName: $staffLastName\n      phoneNumber: $staffPhoneNumber\n     image:\"https://res.cloudinary.com/dsw3onksq/image/upload/v1592728825/user_x89zcm.png\"\n    }){\n      status\n      user {\n        id\n        username\n        email\n        firstName\n        isSuperuser\n        isActive\n        isStaff\n        image\n        phoneNumber\n        roles\n        agency{\n          id\n          name\n          agencyEmail\n        }\n\n      }\n    }\n  }\n`;\nconst FETCH_USERS_QUERY = gql`\n  query getUsers($search:String,$page:Int, $limit:Int) {\n    users(isStaff:true, limit:$limit,page:$page, search:$search)\n    {\n      items{\n        createdAt\n        id\n        deletedAt\n        firstName\n        phoneNumber\n        lastName\n        isActive\n        email\n      }\n      page\n      count\n      pages\n      hasNext\n      hasPrev\n    }\n    }\n`;\nexport default AdminDashBoard;","map":{"version":3,"sources":["/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/admin/adminDashboard.js"],"names":["React","useContext","useState","useEffect","useCallback","Link","moment","Grid","Container","Header","Tab","Form","Message","Image","Loader","Button","Icon","Pagination","gql","useQuery","useMutation","AuthContext","PhoneInput","AdminDashBoard","props","context","errors","setErrors","userInfo","user","pagination","setPagination","limit","page","search","count","values","setValues","staffUsername","staffPassword","staffEmail","staffFirstName","staffLastName","staffPhoneNumber","visible","setVisible","users","setUsers","handleDismiss","message","setMessage","addUser","loading","REGISTER_STAFF","update","_","result","registerStaff","data","response","createUser","username","console","log","successMessage","onError","err","networkError","graphQLErrors","e","variables","onChange","event","target","name","value","onPhoneNumberChange","updated","onSubmit","preventDefault","usersLoading","usersData","FETCH_USERS_QUERY","handleOnPageChange","activePage","handleOnSearch","panes","menuItem","render","items","map","client","id","textTransform","firstName","lastName","email","phoneNumber","createdAt","format","pages","undefined","required","autoFocus","enableSearch","fontWeight","secondary","pointing"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport {\n    Grid,\n    Container,\n    Header,\n    Tab,\n    Form,\n    Message,\n    Image,\n    Loader,\n    Button,\n    Icon,\n    Pagination\n} from 'semantic-ui-react';\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { AuthContext } from '../../context/auth';\n\nimport '../root.scss';\nimport PhoneInput from 'react-phone-input-2';\n\nfunction AdminDashBoard({ props }) {\n    const context = useContext(AuthContext);\n    const [errors, setErrors] = useState({});\n    let userInfo = context.user\n    // console.log(props)\n    // if (userInfo.roles && userInfo.roles[0] === \"manager\") {\n    //     props.history.push(\"/staff/dashboard/overview\");\n    // }\n    const [pagination, setPagination] = useState({\n        limit: 10,\n        page: 1,\n        search: \"\"\n    });\n    let count = 1;\n\n    const [values, setValues] = useState({\n        staffUsername: \"\",\n        staffPassword: \"\",\n        staffEmail: \"\",\n        staffFirstName: \"\",\n        staffLastName: \"\",\n        staffPhoneNumber: \"\"\n    })\n\n    const [visible, setVisible] = useState(false);\n    const [users, setUsers] = useState({});\n\n    const handleDismiss = () => {\n        setVisible(false)\n    }\n\n    const [message, setMessage] = useState({});\n\n    const [addUser, { loading }] = useMutation(REGISTER_STAFF, {\n        update(_, result) {\n            context.registerStaff(result.data);\n            const response = result.data.createUser.user.username;\n            console.log(\"made user\", response);\n            let successMessage = `Staff ${response} has been created successfully. Please instruct them to verify their account before use.`;\n            setMessage(successMessage);\n            console.log(\"message\", message);\n\n            values.staffUsername = \"\";\n            values.staffPassword = \"\";\n            values.staffEmail = \"\";\n            values.staffFirstName = \"\";\n            values.staffLastName = \"\";\n            values.staffPhoneNumber = \"\";\n        },\n        onError(err) {\n            try {\n\n                if (err.networkError !== null && err.networkError !== 'undefined') {\n\n                    setErrors(err.networkError.result.errors[0]);\n\n                } else if (err.graphQLErrors !== null && err.networkError !== 'undefined') {\n\n                    setErrors(err.graphQLErrors.result.errors[0]);\n\n                }\n            } catch (e) {\n                setErrors(err);\n            }\n\n        },\n        variables: values\n    });\n\n    const onChange = (event) => {\n        setValues({ ...values, [event.target.name]: event.target.value });\n    }\n    const onPhoneNumberChange = useCallback((value) => {\n        setValues({ ...values, staffPhoneNumber: \"+\" + value, updated: true });\n    }, [values])\n    const onSubmit = (event) => {\n        event.preventDefault();\n        errors.message = \"\";\n        addUser();\n        setVisible(true);\n    }\n\n\n    const { loading: usersLoading, data: usersData } = useQuery(FETCH_USERS_QUERY,\n        { variables: pagination });\n    useEffect(() => {\n        if (usersData) {\n            setUsers(usersData.users)\n        }\n    }, [usersData])\n\n    const handleOnPageChange = (e, data) => {\n        e.preventDefault()\n        setPagination({ ...pagination, page: data.activePage })\n    }\n    const handleOnSearch = (e) => {\n        e.preventDefault()\n        setPagination({ ...pagination, search: e.target.value })\n\n    }\n    const panes = [\n        {\n            menuItem: 'Staff',\n            render: () =>\n                <div> {usersLoading ?\n                    <Loader active />\n                    :\n                    users && users.count === 0 ? <Message\n                        onDismiss={handleDismiss}\n                        content={'No Staff members in the Database.'}\n                    /> : <Grid container columns={4} className={loading ? \"loading\" : ''}>\n                            <Grid.Row>\n                                <Grid.Column>\n                                    <Header as=\"h4\">Name</Header>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Header as=\"h4\">Email</Header>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Header as=\"h4\">Phone Number</Header>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Header as=\"h4\">Join Date</Header>\n                                </Grid.Column>\n                            </Grid.Row>\n                            {users.items && users.items.map(client =>\n                                <Grid.Row key={client.id}>\n                                    <Grid.Column>\n                                        <span>{count++}. </span>\n                                        <Image src='https://react.semantic-ui.com/images/wireframe/square-image.png' avatar />\n                                        <span style={{ textTransform: 'titlecase' }}>{client.firstName} {client.lastName}</span>\n                                    </Grid.Column>\n                                    <Grid.Column>\n                                        {client.email}\n                                    </Grid.Column>\n                                    <Grid.Column>\n                                        {client.phoneNumber}\n                                    </Grid.Column>\n                                    <Grid.Column>\n\n                                        <Grid>\n\n                                            <Grid.Column floated='left' width={3}>\n                                                {moment(client.createdAt).format('DD/MM/YYYY')}\n                                            </Grid.Column>\n                                            <Grid.Column width={1} floated='left'>\n                                                <Link to={`/staff/dashboard/users/profile/${client.id}`}>\n                                                    <Button icon >\n                                                        <Icon name='external alternate' />\n                                                    </Button>\n                                                </Link>\n                                            </Grid.Column>\n                                        </Grid>\n                                    </Grid.Column>\n                                </Grid.Row>)}\n\n                        </Grid>\n\n                }\n                    {users.page && <Pagination\n                        defaultActivePage={users.page}\n                        firstItem={null}\n                        lastItem={null}\n                        pointing\n                        secondary\n                        onPageChange={handleOnPageChange}\n                        totalPages={users.pages}\n                    />}\n\n\n                </div>\n\n        },\n        {\n            menuItem: 'Add new Staff',\n            render: () =>\n\n                <Form onSubmit={onSubmit} noValidate className={loading ? \"loading\" : ''}>\n\n\n                    <p as='h4' className=\"float-left\">Personal Information</p>\n                    <Form.Group widths='equal'>\n\n                        <Form.Input\n                            fluid label='Username'\n                            placeholder='Username'\n                            name='staffUsername'\n                            value={values.staffUsername}\n                            onChange={onChange}\n                            id=\"username\"\n                            errors={errors.staffUsername ? true : undefined}\n                        />\n\n                        <Form.Input\n                            fluid label='First name'\n                            placeholder='First name'\n                            name='staffFirstName'\n                            value={values.staffFirstName}\n                            onChange={onChange}\n                            errors={errors.staffFirstName ? true : undefined}\n\n                        />\n\n                        <Form.Input\n                            fluid label='Last name'\n                            placeholder='Last name'\n                            name='staffLastName'\n                            value={values.staffLastName}\n                            onChange={onChange}\n                            errors={errors.staffLastName ? true : undefined}\n\n                        />\n                    </Form.Group>\n\n                    <Form.Group widths='equal'>\n                        <Form.Input\n                            fluid label='Password'\n                            placeholder='Password'\n                            name='staffPassword'\n                            value={values.staffPassword}\n                            onChange={onChange}\n                            errors={errors.staffPassword ? true : undefined}\n                            type='password'\n\n                        />\n\n                        <Form.Input\n                            fluid label='Email'\n                            placeholder='Email Address'\n                            name='staffEmail'\n                            value={values.staffEmail}\n                            onChange={onChange}\n                            errors={errors.staffEmail ? true : undefined}\n\n                        />\n                        <Form.Field>\n\n                            <PhoneInput\n                                inputExtraProps={{\n                                    name: \"phoneNumber\",\n                                    required: true,\n                                    autoFocus: true,\n                                    enableSearch: true\n                                }}\n                                style={{ fontWeight: \"bold\" }}\n                                name='phoneNumber'\n                                specialLabel='Phone Number *'\n                                country={\"ke\"}\n                                value={values.staffPhoneNumber}\n                                onChange={onPhoneNumberChange}\n                            />\n                        </Form.Field>\n\n                        <Form.Input\n                            fluid label='Phone Number'\n                            placeholder='Phone number'\n                            name='staffPhoneNumber'\n                            value={values.staffPhoneNumber}\n                            onChange={onChange}\n                            errors={errors.staffPhoneNumber ? true : undefined}\n\n                        />\n\n                    </Form.Group>\n\n                    <Form.Checkbox label='I agree to the Terms and Conditions' />\n                    <Form.Button secondary>Register Staff</Form.Button>\n                </Form >\n        },\n\n    ];\n\n\n    return (\n        <div className='app-container'>\n            <Container>\n                <Grid padded>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Header as='h3' className=\"float-left\">Hi there, {userInfo.username} </Header>\n                            <div>\n                                Welcome to your admin account.\n                        </div>\n                            <Grid container columns={1} padded>\n                                <Grid.Column>\n                                    <Form>\n                                        <Form.Group>\n                                            <Form.Input\n                                                placeholder='Name, Phone number...'\n                                                name='name'\n                                                onChange={handleOnSearch}\n                                            />\n                                            <Form.Button icon size={'medium'} onClick={(e) => { e.preventDefault() }}>\n                                                <Icon name=\"search\" />\n                                                Find Staff\n                                            </Form.Button>\n                                        </Form.Group>\n                                    </Form>\n                                </Grid.Column>\n                            </Grid>\n\n                            <Tab className='clear-top' menu={{ secondary: true, pointing: true }} panes={panes} />\n\n\n                            {visible ?\n                                <Message\n                                    onDismiss={handleDismiss}\n                                    content={errors ? errors.message : '' && message ? message : ''}\n                                />\n                                :\n                                ''\n                            }\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n        </div>\n    );\n}\n\nconst REGISTER_STAFF = gql`\nmutation createUser (\n    $staffUsername: String!\n    $staffPassword: String!\n    $staffEmail: String!\n    $staffFirstName: String!\n    $staffLastName: String!\n    $staffPhoneNumber: String!\n){\n    createUser(input:{\n      username: $staffUsername\n      password: $staffPassword\n      email: $staffEmail\n      firstName: $staffFirstName\n      lastName: $staffLastName\n      phoneNumber: $staffPhoneNumber\n     image:\"https://res.cloudinary.com/dsw3onksq/image/upload/v1592728825/user_x89zcm.png\"\n    }){\n      status\n      user {\n        id\n        username\n        email\n        firstName\n        isSuperuser\n        isActive\n        isStaff\n        image\n        phoneNumber\n        roles\n        agency{\n          id\n          name\n          agencyEmail\n        }\n\n      }\n    }\n  }\n`\n\nconst FETCH_USERS_QUERY = gql`\n  query getUsers($search:String,$page:Int, $limit:Int) {\n    users(isStaff:true, limit:$limit,page:$page, search:$search)\n    {\n      items{\n        createdAt\n        id\n        deletedAt\n        firstName\n        phoneNumber\n        lastName\n        isActive\n        email\n      }\n      page\n      count\n      pages\n      hasNext\n      hasPrev\n    }\n    }\n`;\n\nexport default AdminDashBoard;\n"]},"metadata":{},"sourceType":"module"}