{"ast":null,"code":"var _jsxFileName = \"/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/clients/clientProfile.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { ClientContext } from '../../context/clients';\nimport { GET_CLIENT_QUERY } from './queries';\nimport { useQuery } from '@apollo/react-hooks';\nimport Profile from '../common/profile';\nexport default function ClientProfile({\n  props\n}) {\n  const [user, setUser] = useState('records');\n  const [fetched, setFetched] = useState(false);\n  const context = useContext(ClientContext);\n  const userId = props.computedMatch.params.clientId;\n  const {\n    data: userData\n  } = useQuery(GET_CLIENT_QUERY, {\n    variables: {\n      id: userId\n    }\n  });\n  useEffect(() => {\n    if (userData) {\n      setUser(userData.individualClient);\n\n      if (!fetched) {\n        context.getClient(userData.individualClient);\n        setFetched(true);\n      }\n    }\n  }, [context, fetched, userData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, user && /*#__PURE__*/React.createElement(Profile, {\n    user: user,\n    isClient: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }\n  }));\n}","map":{"version":3,"sources":["/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/clients/clientProfile.js"],"names":["React","useState","useContext","useEffect","ClientContext","GET_CLIENT_QUERY","useQuery","Profile","ClientProfile","props","user","setUser","fetched","setFetched","context","userId","computedMatch","params","clientId","data","userData","variables","id","individualClient","getClient"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,gBAAT,QAAiC,WAAjC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,eAAe,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAkC;AAC/C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,SAAD,CAAhC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMa,OAAO,GAAGZ,UAAU,CAACE,aAAD,CAA1B;AACA,QAAMW,MAAM,GAAGN,KAAK,CAACO,aAAN,CAAoBC,MAApB,CAA2BC,QAA1C;AAGA,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAqBd,QAAQ,CAACD,gBAAD,EAAmB;AAAEgB,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEP;AAAN;AAAb,GAAnB,CAAnC;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,QAAJ,EAAc;AACZT,MAAAA,OAAO,CAACS,QAAQ,CAACG,gBAAV,CAAP;;AACA,UAAI,CAACX,OAAL,EAAc;AACZE,QAAAA,OAAO,CAACU,SAAR,CAAkBJ,QAAQ,CAACG,gBAA3B;AACAV,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF;AACF,GARQ,EAQN,CAACC,OAAD,EAAUF,OAAV,EAAmBQ,QAAnB,CARM,CAAT;AASA,sBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,IAAI,iBAAI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEA,IAAf;AAAqB,IAAA,QAAQ,EAAE,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,CAFF;AAKD","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { ClientContext } from '../../context/clients';\nimport { GET_CLIENT_QUERY } from './queries'\nimport { useQuery } from '@apollo/react-hooks';\nimport Profile from '../common/profile'\n\nexport default function ClientProfile({ props }) {\n  const [user, setUser] = useState('records');\n  const [fetched, setFetched] = useState(false);\n  const context = useContext(ClientContext);\n  const userId = props.computedMatch.params.clientId\n\n\n  const { data: userData } = useQuery(GET_CLIENT_QUERY, { variables: { id: userId } })\n  useEffect(() => {\n    if (userData) {\n      setUser(userData.individualClient)\n      if (!fetched) {\n        context.getClient(userData.individualClient)\n        setFetched(true)\n      }\n    }\n  }, [context, fetched, userData])\n  return (\n\n    <div>\n      {user && <Profile user={user} isClient={true} />}\n    </div>)\n}\n"]},"metadata":{},"sourceType":"module"}