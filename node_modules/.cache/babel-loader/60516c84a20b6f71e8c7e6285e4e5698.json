{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldPrefixWithOne = shouldPrefixWithOne;\nexports.shouldHyphenate = shouldHyphenate;\n/**\n * Checks if a certain number should be prefixed by a one.\n * i.e. \"100\" should be written as \"one hundred\" while\n *      \"10\" should not be written as \"one ten\".\n *\n * Examples:\n * _shouldPrefixWithOne(10); // returns False\n * _shouldPrefixWithOne(100); // returns True\n *\n * @param {number} n placeholder to check\n * @returns {boolean}\n */\n\nfunction shouldPrefixWithOne(n) {\n  return n >= 100;\n}\n\n;\n/**\n * Checks if a certain number should be joined with hyphens\n * e.g. \"ninety-nine\" versus \"one hundred one\"\n *\n * Examples:\n * _shouldHyphenate(10); // returns False\n * _shouldHyphenate(21); // returns True\n *\n * @param {number} n placeholder to check\n * @returns {boolean}\n */\n\nfunction shouldHyphenate(n) {\n  return n >= 20 && n <= 99;\n}\n\n;","map":{"version":3,"sources":["/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/node_modules/num-to-words/lib/util.js"],"names":["Object","defineProperty","exports","value","shouldPrefixWithOne","shouldHyphenate","n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,mBAAR,GAA8BA,mBAA9B;AACAF,OAAO,CAACG,eAAR,GAA0BA,eAA1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,mBAAT,CAA6BE,CAA7B,EAAgC;AAC9B,SAAOA,CAAC,IAAI,GAAZ;AACD;;AAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,eAAT,CAAyBC,CAAzB,EAA4B;AAC1B,SAAOA,CAAC,IAAI,EAAL,IAAWA,CAAC,IAAI,EAAvB;AACD;;AAAA","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldPrefixWithOne = shouldPrefixWithOne;\nexports.shouldHyphenate = shouldHyphenate;\n/**\n * Checks if a certain number should be prefixed by a one.\n * i.e. \"100\" should be written as \"one hundred\" while\n *      \"10\" should not be written as \"one ten\".\n *\n * Examples:\n * _shouldPrefixWithOne(10); // returns False\n * _shouldPrefixWithOne(100); // returns True\n *\n * @param {number} n placeholder to check\n * @returns {boolean}\n */\nfunction shouldPrefixWithOne(n) {\n  return n >= 100;\n};\n\n/**\n * Checks if a certain number should be joined with hyphens\n * e.g. \"ninety-nine\" versus \"one hundred one\"\n *\n * Examples:\n * _shouldHyphenate(10); // returns False\n * _shouldHyphenate(21); // returns True\n *\n * @param {number} n placeholder to check\n * @returns {boolean}\n */\nfunction shouldHyphenate(n) {\n  return n >= 20 && n <= 99;\n};"]},"metadata":{},"sourceType":"script"}