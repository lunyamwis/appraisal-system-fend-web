{"ast":null,"code":"import gql from 'graphql-tag';\nexport const ADD_NEW_CONTACT_PERSON = gql`\nmutation createContactPerson\n  (\n    $name:String!\n    $email:String!\n    $position:String!\n    $gender:String!\n    $phoneNumber:String!\n    $serviceLine:String\n    $dateOfBirth:Date!\n    $facebookAccount:String\n    $twitterAccount:String\n    $instagramAccount:String\n    $linkedinAccount:String\n    $corporateClients: [String]\n    $individualClients: [String]\n  ){\n  createContactPerson(input:{\n    name:$name\n    email:$email\n    position:$position\n    gender:$gender\n    phoneNumber:$phoneNumber\n    serviceLine:$serviceLine\n    dateOfBirth:$dateOfBirth\n    facebookAccount:$facebookAccount\n    twitterAccount:$twitterAccount\n    instagramAccount:$instagramAccount\n    linkedinAccount:$linkedinAccount\n    corporateClients:$corporateClients\n    individualClients:$individualClients\n  }){\n    contactPerson{\n      id\n      position\n      phoneNumber\n      name\n      email\n      facebookAccount\n      corporateClients {\n        id\n        name\n        email\n        phoneNumber\n      }\n      individualClients {\n        id\n        firstName\n        lastName\n        surname\n        email\n        phoneNumber\n      }\n    }\n  }\n}\n`;\nexport const GET_CONTACT_PERSON = gql`\nquery getContactPerson($id: String!) {\n  contactPerson(id: $id) {\n    id\n    createdAt\n    email\n    name\n    position\n    phoneNumber\n    serviceLine\n    facebookAccount\n    gender\n    dateOfBirth\n    twitterAccount\n    instagramAccount\n    linkedinAccount\n    serviceLine\n    corporateClients {\n      id\n      name\n      email\n      phoneNumber\n    }\n    individualClients {\n      id\n      firstName\n      lastName\n      surname\n      email\n      phoneNumber\n    }\n  }\n}\n\n`;\nexport const GET_CONTACT_PERSONS = gql`\nquery getContactPeople($search:String, $page:Int, $limit:Int) {\n  contactPersons(\n    search:$search\n    page:$page\n    limit:$limit\n  ){\n    count\n    pages\n    hasNext\n    hasPrev\n    items {\n      id\n      position\n      phoneNumber\n      gender\n      name\n      email\n      facebookAccount\n    }\n  }\n}\n`;\nexport const GET_STATUS_OPTS = gql`\nquery getStatusOptions {\n  statusOptions}`;","map":{"version":3,"sources":["/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/contactPersons/queries.js"],"names":["gql","ADD_NEW_CONTACT_PERSON","GET_CONTACT_PERSON","GET_CONTACT_PERSONS","GET_STATUS_OPTS"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,OAAO,MAAMC,sBAAsB,GAAGD,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAnC;AA0DP,OAAO,MAAME,kBAAkB,GAAGF,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA/B;AAoCP,OAAO,MAAMG,mBAAmB,GAAGH,GAAI;;;;;;;;;;;;;;;;;;;;;;CAAhC;AAuBP,OAAO,MAAMI,eAAe,GAAGJ,GAAI;;iBAA5B","sourcesContent":["import gql from 'graphql-tag';\n\nexport const ADD_NEW_CONTACT_PERSON = gql`\nmutation createContactPerson\n  (\n    $name:String!\n    $email:String!\n    $position:String!\n    $gender:String!\n    $phoneNumber:String!\n    $serviceLine:String\n    $dateOfBirth:Date!\n    $facebookAccount:String\n    $twitterAccount:String\n    $instagramAccount:String\n    $linkedinAccount:String\n    $corporateClients: [String]\n    $individualClients: [String]\n  ){\n  createContactPerson(input:{\n    name:$name\n    email:$email\n    position:$position\n    gender:$gender\n    phoneNumber:$phoneNumber\n    serviceLine:$serviceLine\n    dateOfBirth:$dateOfBirth\n    facebookAccount:$facebookAccount\n    twitterAccount:$twitterAccount\n    instagramAccount:$instagramAccount\n    linkedinAccount:$linkedinAccount\n    corporateClients:$corporateClients\n    individualClients:$individualClients\n  }){\n    contactPerson{\n      id\n      position\n      phoneNumber\n      name\n      email\n      facebookAccount\n      corporateClients {\n        id\n        name\n        email\n        phoneNumber\n      }\n      individualClients {\n        id\n        firstName\n        lastName\n        surname\n        email\n        phoneNumber\n      }\n    }\n  }\n}\n`\n\nexport const GET_CONTACT_PERSON = gql`\nquery getContactPerson($id: String!) {\n  contactPerson(id: $id) {\n    id\n    createdAt\n    email\n    name\n    position\n    phoneNumber\n    serviceLine\n    facebookAccount\n    gender\n    dateOfBirth\n    twitterAccount\n    instagramAccount\n    linkedinAccount\n    serviceLine\n    corporateClients {\n      id\n      name\n      email\n      phoneNumber\n    }\n    individualClients {\n      id\n      firstName\n      lastName\n      surname\n      email\n      phoneNumber\n    }\n  }\n}\n\n`\n\nexport const GET_CONTACT_PERSONS = gql`\nquery getContactPeople($search:String, $page:Int, $limit:Int) {\n  contactPersons(\n    search:$search\n    page:$page\n    limit:$limit\n  ){\n    count\n    pages\n    hasNext\n    hasPrev\n    items {\n      id\n      position\n      phoneNumber\n      gender\n      name\n      email\n      facebookAccount\n    }\n  }\n}\n`\nexport const GET_STATUS_OPTS = gql`\nquery getStatusOptions {\n  statusOptions}`"]},"metadata":{},"sourceType":"module"}