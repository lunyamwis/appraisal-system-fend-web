{"ast":null,"code":"var _jsxFileName = \"/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/receipts/addNewReceipt.js\";\nimport { useHistory } from 'react-router-dom';\nimport React, { useState, useContext, useEffect, useCallback } from 'react';\nimport { Grid, Container, Header, Icon, Form, Message, Button, Tab } from 'semantic-ui-react';\nimport moment from 'moment';\nimport { DateInput } from 'semantic-ui-calendar-react';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { ReceiptContext } from '../../context/receipt';\nimport { FETCH_MOTOR_POLICIES } from '../policies/queries';\nimport { ADD_NEW_RECEIPT, GET_RECEIPT_OPTS } from './queries';\nimport * as yup from \"yup\";\nimport { AuthContext } from '../../context/auth';\nimport PaymentOptions from './listReceiptOptions';\nimport MotorPolicyList from './listMotorPolicies';\n\nfunction AddNewReceipt({\n  props\n}) {\n  const authContext = useContext(AuthContext);\n  let history = useHistory();\n  const [errors, setErrors] = useState({\n    errorPaths: [],\n    errors: []\n  });\n  const [visible, setVisible] = useState(false);\n  const context = useContext(ReceiptContext);\n  const [successMsg, setSuccessMsg] = useState();\n  const [responseErrors, setResponseErrors] = useState([]);\n  const [receiptOpts, setReceiptOpts] = useState();\n  const [motorPoliciesList, setMotorPolicy] = useState({}); // const [motorPolicyExtras, setMotorPolicyExtras]=useState({\n  //     search: \"\", page: 1, limit: 10\n  // });\n\n  const [values, setValues] = useState({\n    updated: true,\n    afterSubmit: false,\n    motorPoliciesList: []\n  });\n  let schema = yup.object().shape({\n    receiptNumber: yup.string().required(\"Please provide the receipt number\"),\n    date: yup.date().required(\"Please provide the date\"),\n    transactionDate: yup.date().required(\"Please provide the transaction date\"),\n    amountWords: yup.string().required(\"Please provide the amount in words\"),\n    amountFigures: yup.number().required(\"Please provide the amount in figures\"),\n    issuedBy: yup.string().required(\"Please indicate who issued the receipt\"),\n    paymentMode: yup.string().required(\"Please indicate the payment mode used\"),\n    policyNumber: yup.string().required(\"Please provide the motor policy \")\n  });\n  const {\n    data: receiptOptsData\n  } = useQuery(GET_RECEIPT_OPTS);\n  useEffect(() => {\n    if (receiptOptsData) {\n      setReceiptOpts(receiptOptsData.receiptOptions);\n    }\n  }, [receiptOptsData, receiptOpts]);\n  const {\n    data: motorPolicyData\n  } = useQuery(FETCH_MOTOR_POLICIES);\n  useEffect(() => {\n    if (motorPolicyData) {\n      setMotorPolicy(motorPolicyData.motorPolicies);\n    }\n  }, [motorPolicyData, motorPoliciesList]);\n  co;\n  const [addReceipt, {\n    loading\n  }] = useCallback(useMutation(ADD_NEW_RECEIPT, {\n    update(_, result) {\n      context.createReceipt(result.data);\n      setVisible(false);\n      let receiptData = result.data.createMotorReceipt.receipt;\n      history.push({\n        pathname: `/staff/dashboard/receipts/profile/${receiptData.id}`,\n        state: {\n          receipt: receiptData,\n          receiptId: receiptData.id\n        }\n      });\n      setSuccessMsg('Successfully Created A New Receipt');\n    },\n\n    onError(err) {\n      console.log(err.graphQLErrors && err.graphQLErrors[0] ? err.graphQLErrors[0].message : err.networkError && err.networkError.result ? err.networkError.result.errors : err);\n\n      try {\n        if (err.graphQLErrors) {\n          setResponseErrors(err.graphQLErrors[0].message);\n        }\n\n        if (err.networkError !== null && err.networkError !== 'undefined') {\n          setResponseErrors(err.networkError.result.errors[0]);\n        } else if (err.graphQLErrors !== null && err.networkError !== 'undefined') {\n          setResponseErrors(err.graphQLErrors.result.errors[0]);\n        }\n      } catch (e) {\n        setVisible(true);\n      }\n    },\n\n    variables: values\n  }));\n  const validate = useCallback(values => {\n    schema.validate(values, {\n      abortEarly: false\n    }).then(valid => setErrors({\n      errorPaths: [],\n      errors: []\n    })) //called if the entire form is valid\n    .catch(err => {\n      setErrors({\n        errors: err.errors,\n        errorPaths: err.inner.map(i => i.path)\n      });\n    });\n  }, [schema]);\n  useEffect(() => {\n    if (values.updated) {\n      setValues({ ...values,\n        updated: false\n      });\n\n      if (values.afterSubmit) {\n        validate(values);\n      }\n    }\n  }, [values, validate]);\n  const onChange = useCallback((event, {\n    name,\n    value\n  }) => {\n    setValues({ ...values,\n      [name]: value,\n      updated: true\n    });\n  }, [values]);\n\n  const handleOnMotorPolicyChange = (e, {\n    value\n  }) => {\n    e.preventDefault();\n    setMotorPolicy({ ...values,\n      motorPoliciesList: value,\n      updated: true\n    });\n  };\n\n  const handleOnReceiptOptionsChange = (e, {\n    value\n  }) => {\n    e.preventDefault();\n    setValues({ ...values,\n      paymentMode: value,\n      updated: true\n    });\n  };\n\n  const handleDismiss = () => {\n    setVisible(false);\n    setSuccessMsg('');\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setSuccessMsg('');\n    validate(values);\n    setValues({ ...values,\n      afterSubmit: true\n    });\n\n    if (Object.keys(values).length > 7 && !errors.errors.length) {\n      addReceipt();\n    }\n\n    setVisible(false);\n  };\n\n  const panes = [{\n    menuItem: \"Create Receipt\",\n    render: () => /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, successMsg ? /*#__PURE__*/React.createElement(Message, {\n      positive: true,\n      onDismiss: handleDismiss,\n      header: \"status\",\n      content: successMsg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }) : '', /*#__PURE__*/React.createElement(Form, {\n      onSubmit: onSubmit,\n      noValidate: true,\n      className: loading ? \"loading\" : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Message, {\n      visible: !!errors.errors.length || visible,\n      warning: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Message.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 33\n      }\n    }, \"Please correct the following issues:\"), !!responseErrors.length && /*#__PURE__*/React.createElement(Message, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 61\n      }\n    }, responseErrors), /*#__PURE__*/React.createElement(Message.List, {\n      items: errors.errors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 34\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      error: errors.errorPaths.includes('receiptNumber'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 33\n      }\n    }, \"Receipt Number\"), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"Receipt Number\",\n      name: \"receiptNumber\",\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      error: errors.errorPaths.includes('issuedBy'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 33\n      }\n    }, \"Issued By\"), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"issuedBy\",\n      name: \"issuedBy\",\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      error: errors.errorPaths.includes('date'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 33\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(DateInput, {\n      name: \"date\",\n      autoComplete: \"off\",\n      placeholder: \"Date\",\n      popupPosition: \"bottom left\",\n      value: values.date ? values.date : \"\",\n      iconPosition: \"left\",\n      dateFormat: \"YYYY-MM-DD\",\n      maxDate: moment(),\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      error: errors.errorPaths.includes('transactionDate'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 33\n      }\n    }, \"Transaction Date\"), /*#__PURE__*/React.createElement(DateInput, {\n      name: \"transactionDate\",\n      autoComplete: \"off\",\n      placeholder: \"Transaction Date\",\n      popupPosition: \"bottom left\",\n      value: values.transactionDate ? values.transactionDate : \"\",\n      iconPosition: \"left\",\n      dateFormat: \"YYYY-MM-DD\",\n      maxDate: moment(),\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      error: errors.errorPaths.includes('amountWords'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 33\n      }\n    }, \"Amount (Words)\"), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"Amount In Words\",\n      name: \"amountWords\",\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      error: errors.errorPaths.includes('amountFigures'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 33\n      }\n    }, \"Amount (Figures)\"), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      placeholder: \"Amount in Figures\",\n      name: \"amountFigures\",\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      error: errors.errorPaths.includes('paymentMode'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 33\n      }\n    }, \"Payment Mode\"), receiptOpts && receiptOpts.receipt_options && /*#__PURE__*/React.createElement(PaymentOptions, {\n      receiptOptionsList: receiptOpts.receipt_options,\n      handleOnReceiptOptionsChange: handleOnReceiptOptionsChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      error: errors.errorPaths.includes('policyNumber'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 33\n      }\n    }, \"Motor Policy\"), motorPoliciesList.items && /*#__PURE__*/React.createElement(MotorPolicyList, {\n      motorPoliciesOptions: motorPoliciesList.items,\n      handleOnMotorPolicyChange: handleOnMotorPolicyChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 61\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 25\n      }\n    }, \"Generate Receipt\")))\n  }];\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Header.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/staff/dashboard/client-records\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 33\n    }\n  }, \"Policy Records\"), \" \", '>', \" Receipt\", /*#__PURE__*/React.createElement(Header.Subheader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 17\n    }\n  }, \"Hello there \", authContext.user.username, \", Fill in this form to generate a receipt\")))))), /*#__PURE__*/React.createElement(Tab, {\n    className: \"clear-top\",\n    menu: {\n      secondary: true,\n      pointing: true\n    },\n    panes: panes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default AddNewReceipt;","map":{"version":3,"sources":["/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/receipts/addNewReceipt.js"],"names":["useHistory","React","useState","useContext","useEffect","useCallback","Grid","Container","Header","Icon","Form","Message","Button","Tab","moment","DateInput","useMutation","useQuery","ReceiptContext","FETCH_MOTOR_POLICIES","ADD_NEW_RECEIPT","GET_RECEIPT_OPTS","yup","AuthContext","PaymentOptions","MotorPolicyList","AddNewReceipt","props","authContext","history","errors","setErrors","errorPaths","visible","setVisible","context","successMsg","setSuccessMsg","responseErrors","setResponseErrors","receiptOpts","setReceiptOpts","motorPoliciesList","setMotorPolicy","values","setValues","updated","afterSubmit","schema","object","shape","receiptNumber","string","required","date","transactionDate","amountWords","amountFigures","number","issuedBy","paymentMode","policyNumber","data","receiptOptsData","receiptOptions","motorPolicyData","motorPolicies","co","addReceipt","loading","update","_","result","createReceipt","receiptData","createMotorReceipt","receipt","push","pathname","id","state","receiptId","onError","err","console","log","graphQLErrors","message","networkError","e","variables","validate","abortEarly","then","valid","catch","inner","map","i","path","onChange","event","name","value","handleOnMotorPolicyChange","preventDefault","handleOnReceiptOptionsChange","handleDismiss","onSubmit","Object","keys","length","panes","menuItem","render","includes","receipt_options","items","user","username","secondary","pointing"],"mappings":"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","sourcesContent":["import { useHistory } from 'react-router-dom';\nimport React, { useState, useContext, useEffect, useCallback } from 'react';\nimport {\n    Grid,\n    Container,\n    Header,\n    Icon,\n    Form,\n    Message,\n    Button,\n    Tab\n} from 'semantic-ui-react';\nimport moment from 'moment';\nimport { DateInput } from 'semantic-ui-calendar-react';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { ReceiptContext } from '../../context/receipt';\nimport { FETCH_MOTOR_POLICIES } from '../policies/queries';\nimport {ADD_NEW_RECEIPT, GET_RECEIPT_OPTS } from './queries'\nimport * as yup from \"yup\";\nimport { AuthContext } from '../../context/auth';\nimport PaymentOptions from './listReceiptOptions';\nimport MotorPolicyList from './listMotorPolicies';\n\n\nfunction AddNewReceipt({ props }) {\n\n    const authContext = useContext(AuthContext);\n    let history = useHistory();\n\n    const [errors, setErrors] = useState({\n        errorPaths: [],\n        errors: []\n    });\n    const [visible, setVisible] = useState(false);\n    \n    const context = useContext(ReceiptContext);\n    const [successMsg, setSuccessMsg] = useState();\n    const [responseErrors, setResponseErrors] = useState([]);\n    const [receiptOpts, setReceiptOpts] = useState();\n    \n    const [motorPoliciesList, setMotorPolicy] = useState({});\n    // const [motorPolicyExtras, setMotorPolicyExtras]=useState({\n    //     search: \"\", page: 1, limit: 10\n    // });\n\n    const [values, setValues] = useState({\n        updated: true,\n        afterSubmit: false,\n        motorPoliciesList:[]\n    });\n    \n    let schema = yup.object().shape({\n        receiptNumber: yup.string().required(\"Please provide the receipt number\"),\n        date: yup.date().required(\"Please provide the date\"),\n        transactionDate: yup.date().required(\"Please provide the transaction date\"),\n        amountWords: yup.string().required(\"Please provide the amount in words\"),\n        amountFigures: yup.number().required(\"Please provide the amount in figures\"),\n        issuedBy: yup.string().required(\"Please indicate who issued the receipt\"),\n        paymentMode: yup.string().required(\"Please indicate the payment mode used\"),\n        policyNumber: yup.string().required(\"Please provide the motor policy \"),\n    });\n    \n\n    const { data: receiptOptsData } = useQuery(GET_RECEIPT_OPTS);\n    useEffect(() => {\n        if (receiptOptsData) {\n            setReceiptOpts(receiptOptsData.receiptOptions);\n        }\n    }, [receiptOptsData, receiptOpts]);\n\n\n    const { data: motorPolicyData } = useQuery(FETCH_MOTOR_POLICIES);\n    useEffect(() => {\n        if (motorPolicyData) {\n            setMotorPolicy(motorPolicyData.motorPolicies)\n        }\n    }, [motorPolicyData,motorPoliciesList])\n    co\n\n    const [addReceipt, { loading }] = useCallback(useMutation(ADD_NEW_RECEIPT, {\n        update(_, result) {\n            context.createReceipt(result.data);\n            setVisible(false);\n            let receiptData = result.data.createMotorReceipt.receipt\n            history.push({\n                pathname: `/staff/dashboard/receipts/profile/${receiptData.id}`,\n                state: { receipt: receiptData, receiptId: receiptData.id }\n            })\n\n            setSuccessMsg('Successfully Created A New Receipt');\n        },\n        onError(err) {\n            console.log(err.graphQLErrors && err.graphQLErrors[0] ? err.graphQLErrors[0].message : err.networkError && err.networkError.result ? err.networkError.result.errors : err)\n            try {\n                if (err.graphQLErrors) {\n                    setResponseErrors(err.graphQLErrors[0].message);\n                }\n\n                if (err.networkError !== null && err.networkError !== 'undefined') {\n\n                    setResponseErrors(err.networkError.result.errors[0]);\n\n                } else if (err.graphQLErrors !== null && err.networkError !== 'undefined') {\n\n                    setResponseErrors(err.graphQLErrors.result.errors[0]);\n\n                }\n            } catch (e) {\n                setVisible(true);\n            }\n\n        },\n        variables: values\n    }));\n\n    const validate = useCallback((values) => {\n        schema.validate(values, { abortEarly: false })\n            .then(valid => setErrors({ errorPaths: [], errors: [] })) //called if the entire form is valid\n            .catch(err => {\n                setErrors({ errors: err.errors, errorPaths: err.inner.map(i => i.path) })\n            })\n    }, [schema])\n\n    \n    useEffect(() => {\n        if (values.updated) {\n            setValues({ ...values, updated: false })\n            if (values.afterSubmit) {\n                validate(values)\n            }\n        }\n        \n    }, [values, validate])\n    \n    const onChange = useCallback((event, { name, value }) => {\n        setValues({ ...values, [name]: value, updated: true });\n    }, [values])\n    \n    \n    const handleOnMotorPolicyChange = (e, { value }) => {\n        e.preventDefault()\n        setMotorPolicy({ ...values, motorPoliciesList: value, updated: true });\n    }\n    \n\n    const handleOnReceiptOptionsChange = (e, { value }) => {\n        e.preventDefault()\n        setValues({ ...values, paymentMode: value, updated: true });\n    }\n\n    \n\n    const handleDismiss = () => {\n        setVisible(false);\n        setSuccessMsg('');\n    }\n    \n    const onSubmit = (event) => {\n        event.preventDefault();\n        setSuccessMsg('');\n        validate(values)\n        setValues({ ...values, afterSubmit: true })\n        if (Object.keys(values).length > 7 && !errors.errors.length) { addReceipt() }\n        setVisible(false);\n    }\n    const panes = [\n            \n        {\n            menuItem: \"Create Receipt\",\n            render: () =>\n                <Grid.Column>\n                    {successMsg ?\n                        <Message\n                            positive\n                            onDismiss={handleDismiss}\n                            header='status'\n                            content={successMsg} /> :\n                        ''}\n\n                    <Form onSubmit={onSubmit} noValidate className={loading ? \"loading\" : ''}>\n                        <Form.Group>\n                            <Message visible={!!errors.errors.length || visible} warning>\n                                <Message.Header>Please correct the following issues:</Message.Header>\n                                {!!responseErrors.length && <Message>{responseErrors}</Message>}\n                                {<Message.List items={errors.errors} />}\n                            </Message>\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <Form.Field required error={errors.errorPaths.includes('receiptNumber')}>\n                                <label>Receipt Number</label>\n                                <Form.Input\n                                    fluid\n                                    placeholder='Receipt Number'\n                                    name='receiptNumber'\n                                    onChange={onChange}\n                                />\n                            </Form.Field>\n                            <Form.Field required error={errors.errorPaths.includes('issuedBy')}>\n                                <label>Issued By</label>\n                                <Form.Input fluid placeholder='issuedBy'\n                                    name='issuedBy'\n                                    onChange={onChange}\n                                />\n                            </Form.Field>\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <Form.Field required error={errors.errorPaths.includes('date')}>\n                                <label>Date</label>\n\n                                <DateInput\n                                    name=\"date\"\n                                    autoComplete=\"off\"\n                                    placeholder=\"Date\"\n                                    popupPosition=\"bottom left\"\n                                    value={values.date ? values.date : \"\"}\n                                    iconPosition=\"left\"\n                                    dateFormat=\"YYYY-MM-DD\"\n                                    maxDate={moment()}\n                                    onChange={onChange}\n                                />\n                            </Form.Field>\n                            <Form.Field required error={errors.errorPaths.includes('transactionDate')}>\n                                <label>Transaction Date</label>\n\n                                <DateInput\n                                    name=\"transactionDate\"\n                                    autoComplete=\"off\"\n                                    placeholder=\"Transaction Date\"\n                                    popupPosition=\"bottom left\"\n                                    value={values.transactionDate ? values.transactionDate : \"\"}\n                                    iconPosition=\"left\"\n                                    dateFormat=\"YYYY-MM-DD\"\n                                    maxDate={moment()}\n                                    onChange={onChange}\n                                />\n                            </Form.Field>\n                        </Form.Group>\n                        <Form.Group widths='equal'>\n                            <Form.Field required error={errors.errorPaths.includes('amountWords')}>\n                                <label>Amount (Words)</label>\n                                <Form.Input fluid placeholder='Amount In Words'\n                                    name='amountWords'\n                                    onChange={onChange}\n\n                                />\n                            </Form.Field>\n                            <Form.Field required error={errors.errorPaths.includes('amountFigures')}>\n                                <label>Amount (Figures)</label>\n                                <Form.Input fluid placeholder='Amount in Figures'\n                                    name='amountFigures'\n                                    onChange={onChange}\n                                />\n                            </Form.Field>\n                        </Form.Group>\n                        <Form.Group widths=\"equal\">\n                            <Form.Field required error={errors.errorPaths.includes('paymentMode')}>\n                                <label>Payment Mode</label>\n                                {receiptOpts && receiptOpts.receipt_options && <PaymentOptions\n                                    receiptOptionsList={receiptOpts.receipt_options}\n                                    handleOnReceiptOptionsChange={handleOnReceiptOptionsChange}\n                                />}\n                            </Form.Field>\n                            <Form.Field required error={errors.errorPaths.includes('policyNumber')}>\n                                <label>Motor Policy</label>\n                                {motorPoliciesList.items && <MotorPolicyList\n                                    motorPoliciesOptions={motorPoliciesList.items}\n                                    handleOnMotorPolicyChange={handleOnMotorPolicyChange}\n                                />}\n                            </Form.Field>\n                        </Form.Group>\n                        <Button type='submit'>Generate Receipt</Button>\n\n                    </Form>\n                </Grid.Column>\n\n        }\n    ]\n    return (\n        <Container>\n            <Grid container padded>\n                <Grid.Column>\n                    <div className=\"content-wrapper\">\n                        <Header as='h2'>\n                            <Icon name='settings' />\n                            <Header.Content>\n                                <a href=\"/staff/dashboard/client-records\">Policy Records</a> {'>'} Receipt\n                <Header.Subheader>\n                                    Hello there {authContext.user.username}, Fill in this form to generate a receipt\n                </Header.Subheader>\n                            </Header.Content>\n                        </Header>\n                    </div>\n                </Grid.Column>\n            </Grid>\n            <Tab className='clear-top' menu={{ secondary: true, pointing: true }} panes={panes} />\n        </Container>\n    )\n}\n\nexport default AddNewReceipt;"]},"metadata":{},"sourceType":"module"}