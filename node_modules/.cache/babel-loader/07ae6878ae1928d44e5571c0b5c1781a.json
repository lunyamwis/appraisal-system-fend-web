{"ast":null,"code":"var _jsxFileName = \"/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/policies/motor/listMotorPolicies.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Grid, Button, Container, Header, Icon, Form, Label, Menu, Tab, Pagination, Loader } from 'semantic-ui-react';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { MotorPolicyContext } from '../../../context/policy/motor';\nimport { FETCH_MOTOR_POLICIES } from '../queries';\nexport default function MotorPolicies() {\n  const [motorPolicies, setMotorPolicies] = useState({});\n  const [fetched, setFetched] = useState(false);\n  const [pagination, setPagination] = useState({\n    limit: 10,\n    page: 1,\n    search: \"\"\n  });\n  const context = useContext(MotorPolicyContext);\n  let count = 1;\n  const [fetchPolicies, {\n    data: motorPoliciesData\n  }] = useLazyQuery(FETCH_MOTOR_POLICIES, {\n    variables: pagination\n  });\n  useEffect(() => {\n    if (motorPoliciesData) {\n      setMotorPolicies(motorPoliciesData.motorPolicies);\n      setFetched(true);\n    }\n  }, [motorPoliciesData, motorPolicies, context]);\n  useEffect(() => {\n    if (!fetched) {\n      fetchPolicies();\n    }\n  });\n\n  const handleOnPageChange = (e, data) => {\n    e.preventDefault();\n    setPagination({ ...pagination,\n      page: data.activePage\n    });\n  };\n\n  const handleOnSearch = e => {\n    e.preventDefault();\n    setPagination({ ...pagination,\n      search: e.target.value\n    });\n  };\n\n  function motorList() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      columns: 7,\n      divided: \"vertically\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, \"Client Name\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, \"Policy No.\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, \"Debit Note No.\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, \"Insurance Company\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, \"Start Date\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, \"End Date\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, \"Premium (Ksh)\"))), motorPolicies.items ? motorPolicies.items.map((policy, index) => /*#__PURE__*/React.createElement(Grid.Row, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, count++, \". \"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        \"fontSize\": \".9rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, policy.individualClient.firstName, \" \", policy.individualClient.lastName)), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, policy.policyNo.length > 13 ? policy.policyNo.substring(0, 13) + \"...\" : policy.policyNo), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, policy.debitNoteNo.length > 13 ? policy.debitNoteNo.substring(0, 13) + \"...\" : policy.debitNoteNo), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        \"fontSize\": \".9rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, policy.insuranceCompany.name)), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, policy.startDate), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, policy.endDate), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      floated: \"left\",\n      width: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    }, policy.premiums.totalPremiums.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 1,\n      floated: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/staff/dashboard/policies/general/motor/details/${policy.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      icon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"external alternate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 45\n      }\n    })))))))) : /*#__PURE__*/React.createElement(Loader, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  const panes = [{\n    menuItem: /*#__PURE__*/React.createElement(Menu.Item, {\n      key: \"motor\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, \"Motor\", /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 26\n      }\n    }, motorPolicies && motorPolicies.count)),\n    render: () => {\n      return /*#__PURE__*/React.createElement(Tab.Pane, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, motorList(), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }\n      }), motorPolicies.pages ? /*#__PURE__*/React.createElement(Pagination, {\n        defaultActivePage: motorPolicies.page,\n        firstItem: null,\n        lastItem: null,\n        pointing: true,\n        secondary: true,\n        onPageChange: handleOnPageChange,\n        totalPages: motorPolicies.pages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }\n      }) : \"\");\n    }\n  }];\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    columns: 2,\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Header.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/staff/dashboard/policies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 33\n    }\n  }, \"Policies\"), \" \", '>', \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/staff/dashboard/policies/general\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 88\n    }\n  }, \"General\"), \" \", '>', \" Motor\", /*#__PURE__*/React.createElement(Header.Subheader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 33\n    }\n  }, \"Hey there \", 'User', \", find a list of motor policies under General Insurance below\"))))), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 3,\n    className: \"clear-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    basic: true,\n    href: \"/staff/dashboard/add-new-motor-policy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, \"+ add new policy\"))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    columns: 1,\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    placeholder: \"Name, Policy number...\",\n    name: \"name\",\n    onChange: handleOnSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Button, {\n    icon: true,\n    size: 'medium',\n    onClick: e => {\n      e.preventDefault();\n      fetchPolicies();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 33\n    }\n  }), \"Find Policy\"))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    panes: panes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/policies/motor/listMotorPolicies.js"],"names":["React","useState","useContext","useEffect","Link","Grid","Button","Container","Header","Icon","Form","Label","Menu","Tab","Pagination","Loader","useLazyQuery","MotorPolicyContext","FETCH_MOTOR_POLICIES","MotorPolicies","motorPolicies","setMotorPolicies","fetched","setFetched","pagination","setPagination","limit","page","search","context","count","fetchPolicies","data","motorPoliciesData","variables","handleOnPageChange","e","preventDefault","activePage","handleOnSearch","target","value","motorList","items","map","policy","index","individualClient","firstName","lastName","policyNo","length","substring","debitNoteNo","insuranceCompany","name","startDate","endDate","premiums","totalPremiums","toString","replace","id","panes","menuItem","render","pages"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n    Grid,\n    Button,\n    Container,\n    Header,\n    Icon,\n    Form,\n    Label,\n    Menu,\n    Tab,\n    Pagination,\n    Loader\n} from 'semantic-ui-react';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { MotorPolicyContext } from '../../../context/policy/motor';\nimport { FETCH_MOTOR_POLICIES } from '../queries'\n\nexport default function MotorPolicies() {\n\n    const [motorPolicies, setMotorPolicies] = useState({});\n    const [fetched, setFetched] = useState(false);\n    const [pagination, setPagination] = useState({\n        limit: 10,\n        page: 1,\n        search: \"\"\n    });\n\n    const context = useContext(MotorPolicyContext);\n    let count = 1\n\n    const [fetchPolicies, { data: motorPoliciesData }] = useLazyQuery(FETCH_MOTOR_POLICIES, {\n        variables: pagination\n    });\n    useEffect(() => {\n        if (motorPoliciesData) {\n            setMotorPolicies(motorPoliciesData.motorPolicies);\n            setFetched(true);\n        }\n    }, [motorPoliciesData, motorPolicies, context]);\n    useEffect(() => {\n        if (!fetched) {\n            fetchPolicies()\n        }\n    })\n    const handleOnPageChange = (e, data) => {\n        e.preventDefault()\n        setPagination({ ...pagination, page: data.activePage })\n    }\n    const handleOnSearch = (e) =>{\n        e.preventDefault()\n        setPagination({ ...pagination, search: e.target.value })\n\n    }\n    function motorList() {\n        return (\n            <Grid container columns={7} divided='vertically'>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Header as=\"h4\">Client Name</Header>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Header as=\"h4\">Policy No.</Header>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Header as=\"h4\">Debit Note No.</Header>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Header as=\"h4\">Insurance Company</Header>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Header as=\"h4\">Start Date</Header>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Header as=\"h4\">End Date</Header>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Header as=\"h4\">Premium (Ksh)</Header>\n                    </Grid.Column>\n                </Grid.Row>\n                { motorPolicies.items ? motorPolicies.items.map((policy, index) =>\n                    <Grid.Row key={index}>\n                        <Grid.Column>\n                            <span>{count++}. </span>\n                            <span style={{ \"fontSize\": \".9rem\" }}>{policy.individualClient.firstName} {policy.individualClient.lastName}</span>\n                        </Grid.Column>\n                        <Grid.Column>\n                            {policy.policyNo.length > 13 ? policy.policyNo.substring(0, 13) + \"...\" : policy.policyNo}\n                        </Grid.Column>\n                        <Grid.Column>\n                            {policy.debitNoteNo.length > 13 ? policy.debitNoteNo.substring(0, 13) + \"...\" : policy.debitNoteNo}\n                        </Grid.Column>\n                        <Grid.Column>\n                            <span style={{ \"fontSize\": \".9rem\" }}>{policy.insuranceCompany.name}</span>\n                        </Grid.Column>\n                        <Grid.Column>\n                            {policy.startDate}\n                        </Grid.Column>\n                        <Grid.Column>\n                            {policy.endDate}\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Grid>\n\n                                <Grid.Column floated='left' width={3}>\n                                    {policy.premiums.totalPremiums.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n                                </Grid.Column>\n                                <Grid.Column width={1} floated='left'>\n                                    <Link to={`/staff/dashboard/policies/general/motor/details/${policy.id}`}>\n                                        <Button icon >\n                                            <Icon name='external alternate' />\n                                        </Button>\n                                    </Link>\n                                </Grid.Column>\n                            </Grid>\n                        </Grid.Column>\n                    </Grid.Row>\n                ) : <Loader active/>}\n\n            </Grid>\n        )\n    }\n\n    const panes = [\n        {\n            menuItem: (\n                <Menu.Item key='motor' disabled={true}>\n                    Motor<Label>{motorPolicies && motorPolicies.count}</Label>\n                </Menu.Item>\n            ),\n            render: () => {\n                return (\n                    <Tab.Pane>\n                        {motorList()}\n                        <br />\n                        {motorPolicies.pages ?\n                            <Pagination\n                                defaultActivePage={motorPolicies.page}\n                                firstItem={null}\n                                lastItem={null}\n                                pointing\n                                secondary\n                                onPageChange={handleOnPageChange}\n                                totalPages={motorPolicies.pages}\n                            /> : \"\"}\n                    </Tab.Pane>\n                )\n            },\n        }\n    ]\n\n    return (\n        <Container>\n            <Grid container columns={2} padded>\n                <Grid.Column>\n                    <div className=\"content-wrapper\">\n                        <Header as='h2'>\n                            <Icon name='file' />\n                            <Header.Content>\n                                <a href=\"/staff/dashboard/policies\">Policies</a> {'>'} <a href=\"/staff/dashboard/policies/general\">General</a> {'>'} Motor\n                                <Header.Subheader>\n                                                    Hey there {'User'}, find a list of motor policies under General Insurance below\n                                </Header.Subheader>\n                            </Header.Content>\n                        </Header>\n                    </div>\n                </Grid.Column>\n\n                <Grid.Column width={3} className=\"clear-left\">\n                    <Button basic href=\"/staff/dashboard/add-new-motor-policy\">+ add new policy</Button>\n                </Grid.Column>\n            </Grid>\n\n            <Grid container columns={1} padded>\n                <Grid.Column>\n                    <Form>\n                        <Form.Group>\n                            <Form.Input\n                                placeholder='Name, Policy number...'\n                                name='name'\n                                onChange={handleOnSearch}\n                            />\n                            <Form.Button icon size={'medium'} onClick={(e)=>{e.preventDefault(); fetchPolicies()}}>\n                                <Icon name=\"search\" />\n                                Find Policy\n                            </Form.Button>\n                        </Form.Group>\n                    </Form>\n                </Grid.Column>\n            </Grid>\n\n            <Grid container padded>\n                <Grid.Column>\n                    <Tab panes={panes} />\n                </Grid.Column>\n            </Grid>\n\n        </Container>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}