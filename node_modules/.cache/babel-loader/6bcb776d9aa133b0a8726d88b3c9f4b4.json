{"ast":null,"code":"var _jsxFileName = \"/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/auth/resetPassword.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport { Grid, Container, Header, Message } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\nimport { useMutation } from '@apollo/react-hooks';\nimport { RESET_PASSWORD } from './queries';\nimport * as yup from \"yup\";\nimport '../root.scss';\n\nfunction ResetPassword(props) {\n  const [visible, setVisible] = useState(true);\n  const [message, setMessage] = useState({\n    message: \"\",\n    tokenRetrieved: false\n  });\n  const [errors, setErrors] = useState({\n    errorPaths: [],\n    errors: []\n  });\n  const token = props.match.params.token;\n  useEffect(() => {\n    if (!message.tokenRetrieved) {\n      try {\n        const decodedToken = jwtDecode(token);\n\n        if (decodedToken.exp * 1000 < Date.now()) {\n          setMessage({ ...message,\n            message: \"Password reset link expired. Please request another one\",\n            tokenRetrieved: true\n          });\n        } else {\n          localStorage.setItem(\"jwtToken\", token);\n          setMessage({ ...message,\n            tokenRetrieved: true\n          });\n        }\n      } catch (error) {\n        setMessage({ ...message,\n          message: \"Invalid password reset link. Please request another one\",\n          tokenRetrieved: true\n        });\n      }\n    }\n  }, [message, token]);\n  const [values, setValues] = useState({\n    password: \"\",\n    confirmPassword: \"\",\n    updated: false\n  });\n\n  const handleDismiss = () => {\n    setVisible(false);\n  };\n\n  let schema = yup.object().shape({\n    password: yup.string().required('No password provided.').min(8, 'Password is too short - should be 8 chars minimum.').matches(/^(?=.*[0-9])/, \"Password must contain a number\").matches(/^(?=.*[!@#$%^&*])/, \"Password must contain a special character\").matches(/^(?=.*[A-Z])/, \"Password must contain an uppercase letter\").matches(/^(?=.*[a-z])/, \"Password must contain a lowercase letter\")\n  });\n  const [resetPassword, {\n    loading\n  }] = useMutation(RESET_PASSWORD, {\n    update(_, result) {\n      console.log(result);\n      props.history.push({\n        pathname: `/`\n      });\n    },\n\n    onError(err) {\n      console.log(err.graphQLErrors && err.graphQLErrors[0] ? err.graphQLErrors[0].message : err.networkError && err.networkError.result ? err.networkError.result.errors : err);\n\n      try {\n        if (err.graphQLErrors) {\n          setErrors({ ...errors,\n            message: err.graphQLErrors[0].message\n          });\n        }\n\n        if (err.networkError !== null && err.networkError !== 'undefined') {\n          setErrors({ ...errors,\n            message: err.networkError.result.errors[0]\n          });\n        } else if (err.graphQLErrors !== null && err.networkError !== 'undefined') {\n          setErrors({ ...errors,\n            message: err.graphQLErrors.result.errors[0]\n          });\n        }\n      } catch (e) {}\n    },\n\n    variables: values\n  });\n  const validate = useCallback(values => {\n    schema.validate(values, {\n      abortEarly: false\n    }).then(valid => setErrors({\n      errorPaths: [],\n      errors: []\n    })) //called if the entire form is valid\n    .catch(err => {\n      setErrors({\n        errors: err.errors,\n        errorPaths: err.inner.map(i => i.path)\n      });\n    });\n  }, [schema]);\n  const onChange = useCallback(event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value,\n      updated: true\n    });\n    setVisible(true);\n  }, [values]);\n  useEffect(() => {\n    if (values.updated) {\n      validate(values);\n      setValues({ ...values,\n        updated: false\n      });\n    }\n  }, [values, validate]);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    resetPassword();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \".app-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, message.message ? /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"Reset Password\"), /*#__PURE__*/React.createElement(Message, {\n    warning: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Message.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }, \"Failed!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, message.message, \" \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/password-reset-request\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 40\n    }\n  }, \" Here\")))) : /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \"Reset Password\"), visible && values.password && errors.errors.length ? /*#__PURE__*/React.createElement(Message, {\n    onDismiss: handleDismiss,\n    header: \"System Response\",\n    error: true,\n    list: errors.errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }\n  }) : '', visible && values.confirmPassword && values.password && values.confirmPassword !== values.password && /*#__PURE__*/React.createElement(Message, {\n    onDismiss: handleDismiss,\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }, \"Password and confirm password do not match\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    noValidate: true,\n    className: loading ? \"loading\" : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    error: errors.errorPaths.includes('password'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Enter password\",\n    name: \"password\",\n    type: \"password\",\n    value: values.password,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    error: !!(values.password && values.confirmPassword !== values.password),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Confirm Password\",\n    name: \"confirmPassword\",\n    type: \"password\",\n    value: values.confirmPassword,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }, \"Already have an account?\", /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 37\n    }\n  }, \" Login\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    secondary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }, \"Reset Password\")))))));\n}\n\nexport default ResetPassword;","map":{"version":3,"sources":["/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/auth/resetPassword.js"],"names":["React","useState","useCallback","useEffect","Button","Form","Grid","Container","Header","Message","Link","jwtDecode","useMutation","RESET_PASSWORD","yup","ResetPassword","props","visible","setVisible","message","setMessage","tokenRetrieved","errors","setErrors","errorPaths","token","match","params","decodedToken","exp","Date","now","localStorage","setItem","error","values","setValues","password","confirmPassword","updated","handleDismiss","schema","object","shape","string","required","min","matches","resetPassword","loading","update","_","result","console","log","history","push","pathname","onError","err","graphQLErrors","networkError","e","variables","validate","abortEarly","then","valid","catch","inner","map","i","path","onChange","event","target","name","value","onSubmit","preventDefault","length","includes"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport { Grid, Container, Header, Message } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\n\nimport { useMutation } from '@apollo/react-hooks';\nimport { RESET_PASSWORD } from './queries'\nimport * as yup from \"yup\";\n\nimport '../root.scss';\n\nfunction ResetPassword(props) {\n  const [visible, setVisible] = useState(true);\n  const [message, setMessage] = useState({\n    message: \"\",\n    tokenRetrieved: false\n  });\n  const [errors, setErrors] = useState({\n    errorPaths: [],\n    errors: [],\n  });\n  const token = props.match.params.token\n  useEffect(() => {\n    if (!message.tokenRetrieved) {\n      try {\n        const decodedToken = jwtDecode(token);\n        if (decodedToken.exp * 1000 < Date.now()) {\n          setMessage({ ...message, message: \"Password reset link expired. Please request another one\", tokenRetrieved: true })\n        } else {\n          localStorage.setItem(\"jwtToken\", token)\n          setMessage({ ...message, tokenRetrieved: true })\n\n        }\n      } catch (error) {\n        setMessage({ ...message, message: \"Invalid password reset link. Please request another one\", tokenRetrieved: true })\n      }\n    }\n  }, [message, token])\n\n  const [values, setValues] = useState({\n    password: \"\",\n    confirmPassword: \"\",\n    updated: false,\n  });\n\n\n  const handleDismiss = () => {\n    setVisible(false)\n  }\n  let schema = yup.object().shape({\n    password: yup.string()\n      .required('No password provided.')\n      .min(8, 'Password is too short - should be 8 chars minimum.')\n      .matches(/^(?=.*[0-9])/, \"Password must contain a number\")\n      .matches(/^(?=.*[!@#$%^&*])/, \"Password must contain a special character\")\n      .matches(/^(?=.*[A-Z])/, \"Password must contain an uppercase letter\")\n      .matches(/^(?=.*[a-z])/, \"Password must contain a lowercase letter\")\n  })\n  const [resetPassword, { loading }] = useMutation(RESET_PASSWORD, {\n    update(_, result) {\n      console.log(result)\n      props.history.push({\n        pathname: `/`,\n      })\n    },\n    onError(err) {\n      console.log(err.graphQLErrors && err.graphQLErrors[0] ? err.graphQLErrors[0].message : err.networkError && err.networkError.result ? err.networkError.result.errors : err)\n      try {\n        if (err.graphQLErrors) {\n          setErrors({ ...errors, message: err.graphQLErrors[0].message });\n        }\n\n        if (err.networkError !== null && err.networkError !== 'undefined') {\n\n          setErrors({ ...errors, message: err.networkError.result.errors[0] });\n\n        } else if (err.graphQLErrors !== null && err.networkError !== 'undefined') {\n          setErrors({ ...errors, message: err.graphQLErrors.result.errors[0] });\n\n        }\n      } catch (e) { }\n\n    },\n    variables: values\n  });\n\n  const validate = useCallback((values) => {\n    schema.validate(values, { abortEarly: false })\n      .then(valid => setErrors({ errorPaths: [], errors: [] })) //called if the entire form is valid\n      .catch(err => {\n        setErrors({ errors: err.errors, errorPaths: err.inner.map(i => i.path) })\n      })\n  }, [schema])\n\n\n  const onChange = useCallback((event) => {\n    setValues({ ...values, [event.target.name]: event.target.value, updated: true });\n    setVisible(true)\n\n  }, [values])\n  useEffect(() => {\n    if (values.updated) {\n      validate(values)\n      setValues({ ...values, updated: false })\n    }\n  }, [values, validate])\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    resetPassword();\n  }\n\n  return (\n    <div className='.app-container'>\n      <Container>\n        <Grid padded>\n          <Grid.Row>\n            {message.message ?\n              <Grid.Column>\n                <Header as='h1'>Reset Password</Header>\n                <Message warning>\n                  <Message.Header>Failed!</Message.Header>\n                  <p>{message.message} <Link to=\"/password-reset-request\"> Here</Link></p>\n                </Message>\n              </Grid.Column>\n              :\n              <Grid.Column>\n                <Header as='h1'>Reset Password</Header>\n                {visible && values.password && errors.errors.length ?\n                  <Message\n                    onDismiss={handleDismiss}\n                    header='System Response'\n                    error\n                    list={errors.errors}\n                  />\n                  :\n                  ''\n                }\n\n                {(visible && values.confirmPassword && values.password) && values.confirmPassword !== values.password &&\n                  <Message\n                    onDismiss={handleDismiss}\n                    error\n                  >\n                    Password and confirm password do not match\n                </Message>\n                }\n\n                <Form onSubmit={onSubmit} noValidate className={loading ? \"loading\" : ''}>\n\n                  <Form.Field required error={errors.errorPaths.includes('password')}>\n                    <label>Password</label>\n                    <input\n                      placeholder='Enter password'\n                      name='password'\n                      type=\"password\"\n                      value={values.password}\n                      onChange={onChange}\n\n                    />\n                  </Form.Field>\n                  <Form.Field required error={!!(values.password && (values.confirmPassword !== values.password))}>\n                    <label>Confirm Password</label>\n                    <input\n                      placeholder='Confirm Password'\n                      name='confirmPassword'\n                      type=\"password\"\n                      value={values.confirmPassword}\n                      onChange={onChange}\n\n                    />\n                  </Form.Field>\n\n\n                  <div className='center'>\n                    Already have an account?\n                                    <Link to=\"/\"> Login</Link>\n                  </div>\n                  <Button type='submit' secondary>Reset Password</Button>\n                </Form>\n              </Grid.Column>\n            }\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}