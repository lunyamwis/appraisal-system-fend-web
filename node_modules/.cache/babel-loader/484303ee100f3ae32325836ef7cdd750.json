{"ast":null,"code":"var _jsxFileName = \"/home/actserv/Documents/Lunyamwi_Projects/appraisal-system/appraisal-system-fend-web/src/context/auth.js\";\nimport React, { useReducer, createContext, useState, useEffect, useCallback } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { REFRESH_TOKEN_MUTATION } from '../components/auth/queries';\nconst initialState = {\n  user: null,\n  systemAlert: null,\n  staff: null,\n  profile: null\n};\n\nif (localStorage.getItem('loggedInUser')) {\n  initialState.user = JSON.parse(localStorage.getItem('loggedInUser'));\n}\n\nconst AuthContext = createContext({\n  user: null,\n  staff: null,\n  profile: null\n});\n\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case 'LOGIN':\n      return { ...state,\n        user: action.payload\n      };\n\n    case 'REGISTER_ADMIN':\n      return { ...state,\n        user: action.payload,\n        systemAlert: action.message\n      };\n\n    case 'REGISTER_STAFF':\n      return { ...state,\n        staff: action.payload\n      };\n\n    case 'USER_PROFILE':\n      return { ...state,\n        profile: action.payload\n      };\n\n    case 'LOGOUT':\n      return { ...state,\n        user: null\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction AuthProvider(props) {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  const [expiredToken, setExpiredToken] = useState(\"\");\n  const [refreshToken, {\n    loading,\n    data: tokenData\n  }] = useMutation(REFRESH_TOKEN_MUTATION, {\n    onError(err) {\n      try {\n        setUser(null);\n        setToken(null);\n      } catch (e) {\n        setUser(null);\n        setToken(null);\n      }\n    },\n\n    variables: {\n      token: expiredToken\n    }\n  });\n\n  let _token = localStorage.getItem('jwtToken') || null;\n\n  const getExpirationDate = jwtToken => {\n    if (!jwtToken) {\n      return null;\n    }\n\n    const jwt = JSON.parse(atob(jwtToken.split('.')[1])); // multiply by 1000 to convert seconds into milliseconds\n\n    return jwt && jwt.exp ? jwt.exp * 1000 : null;\n  };\n\n  const isExpired = exp => {\n    if (!exp) {\n      return false;\n    }\n\n    return Date.now() > exp;\n  };\n\n  const getToken = useCallback(() => {\n    if (!_token) {\n      return null;\n    }\n\n    if (isExpired(getExpirationDate(_token))) {\n      setExpiredToken(_token);\n      refreshToken();\n    }\n\n    return _token;\n  }, [_token, refreshToken]);\n\n  const isLoggedIn = () => {\n    return !!_token;\n  };\n\n  let observers = [];\n\n  const subscribe = observer => {\n    observers.push(observer);\n  };\n\n  const unsubscribe = observer => {\n    observers = observers.filter(_observer => _observer !== observer);\n  };\n\n  const notify = () => {\n    const isLogged = isLoggedIn();\n    observers.forEach(observer => observer(isLogged));\n  };\n\n  const setUser = useCallback(user => {\n    if (user) {\n      localStorage.setItem(\"loggedInUser\", JSON.stringify(user));\n    } else {\n      localStorage.removeItem(\"loggedInUser\");\n    }\n  }, []);\n  const setToken = useCallback(token => {\n    if (token) {\n      localStorage.setItem(\"jwtToken\", token);\n    } else {\n      localStorage.removeItem(\"jwtToken\");\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n    _token = token;\n    notify();\n  }, []);\n  useEffect(() => {\n    if (!loading && tokenData) {\n      setToken(tokenData.refreshToken.token);\n    }\n\n    if (!getToken() && !window.location.pathname.includes(\"reset-password\")) {\n      setToken(null);\n    }\n  }, [loading, tokenData, refreshToken, setToken, getToken]);\n\n  function login(userData) {\n    setToken(userData.tokenAuth.token);\n    setUser(userData.tokenAuth.user);\n    dispatch({\n      type: 'LOGIN',\n      payload: userData\n    });\n  }\n\n  const useAuth = () => {\n    const [isLogged, setIsLogged] = useState(isLoggedIn());\n    useEffect(() => {\n      const listener = newIsLogged => {\n        setIsLogged(newIsLogged);\n      };\n\n      subscribe(listener);\n      return () => {\n        unsubscribe(listener);\n      };\n    }, []);\n    return isLogged;\n  };\n\n  function registerAdmin(userData) {\n    dispatch({\n      type: 'REGISTER_ADMIN',\n      payload: userData\n    });\n  }\n\n  function registerStaff(userData) {\n    dispatch({\n      type: 'REGISTER_STAFF',\n      payload: userData\n    });\n  }\n\n  function userProfile(userData) {\n    dispatch({\n      type: 'USER_PROFILE',\n      payload: userData\n    });\n  }\n\n  function logout() {\n    setToken(null);\n    setUser(null);\n    AuthContext.user = null;\n    dispatch({\n      type: 'LOGOUT'\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, Object.assign({\n    value: {\n      user: state.user,\n      profile: state.profile,\n      login,\n      logout,\n      registerAdmin,\n      userProfile,\n      registerStaff,\n      useAuth,\n      getToken,\n      setToken\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport { AuthContext, AuthProvider };","map":{"version":3,"sources":["/home/actserv/Documents/Lunyamwi_Projects/appraisal-system/appraisal-system-fend-web/src/context/auth.js"],"names":["React","useReducer","createContext","useState","useEffect","useCallback","useMutation","REFRESH_TOKEN_MUTATION","initialState","user","systemAlert","staff","profile","localStorage","getItem","JSON","parse","AuthContext","authReducer","state","action","type","payload","message","AuthProvider","props","dispatch","expiredToken","setExpiredToken","refreshToken","loading","data","tokenData","onError","err","setUser","setToken","e","variables","token","_token","getExpirationDate","jwtToken","jwt","atob","split","exp","isExpired","Date","now","getToken","isLoggedIn","observers","subscribe","observer","push","unsubscribe","filter","_observer","notify","isLogged","forEach","setItem","stringify","removeItem","window","location","pathname","includes","login","userData","tokenAuth","useAuth","setIsLogged","listener","newIsLogged","registerAdmin","registerStaff","userProfile","logout"],"mappings":"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","sourcesContent":["import React, { useReducer, createContext, useState, useEffect, useCallback } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { REFRESH_TOKEN_MUTATION } from '../components/auth/queries'\nconst initialState = {\n    user: null,\n    systemAlert: null,\n    staff: null,\n    profile: null\n}\n\nif (localStorage.getItem('loggedInUser')) {\n    initialState.user = JSON.parse(localStorage.getItem('loggedInUser'))\n}\n\nconst AuthContext = createContext({\n    user: null,\n    staff: null,\n    profile: null\n});\n\n\nfunction authReducer(state, action) {\n    switch (action.type) {\n        case 'LOGIN':\n            return {\n                ...state,\n                user: action.payload\n            }\n        case 'REGISTER_ADMIN':\n            return {\n                ...state,\n                user: action.payload,\n                systemAlert: action.message\n            }\n\n        case 'REGISTER_STAFF':\n            return {\n                ...state,\n                staff: action.payload,\n            }\n        case 'USER_PROFILE':\n            return {\n                ...state,\n                profile: action.payload,\n            }\n\n        case 'LOGOUT':\n            return {\n                ...state,\n                user: null\n            }\n        default:\n            return state;\n    }\n}\nfunction AuthProvider(props) {\n    const [state, dispatch] = useReducer(authReducer, initialState);\n    const [expiredToken, setExpiredToken] = useState(\"\");\n\n    const [refreshToken, { loading, data: tokenData }] = useMutation(REFRESH_TOKEN_MUTATION, {\n        onError(err) {\n            try {\n                setUser(null)\n                setToken(null)\n            } catch (e) {\n                setUser(null)\n                setToken(null)\n            }\n\n        }, variables: { token: expiredToken }\n    })\n\n    let _token = localStorage.getItem('jwtToken') || null;\n\n    const getExpirationDate = (jwtToken) => {\n\n        if (!jwtToken) {\n            return null;\n        }\n\n        const jwt = JSON.parse(atob(jwtToken.split('.')[1]));\n\n        // multiply by 1000 to convert seconds into milliseconds\n        return jwt && jwt.exp ? jwt.exp * 1000 : null;\n    };\n\n    const isExpired = (exp) => {\n\n        if (!exp) {\n            return false;\n        }\n\n        return Date.now() > exp;\n    };\n\n    const getToken = useCallback(() => {\n        if (!_token) {\n            return null;\n        }\n        if (isExpired(getExpirationDate(_token))) {\n            setExpiredToken(_token);\n            refreshToken()\n        }\n        return _token;\n    }, [_token, refreshToken])\n\n    const isLoggedIn = () => {\n\n        return !!_token;\n    };\n    let observers = [];\n\n    const subscribe = (observer) => {\n\n        observers.push(observer);\n    };\n\n    const unsubscribe = (observer) => {\n        observers = observers.filter(_observer => _observer !== observer);\n    };\n\n    const notify = () => {\n        const isLogged = isLoggedIn();\n        observers.forEach(observer => observer(isLogged));\n    };\n\n    const setUser = useCallback((user) => {\n        if (user) { localStorage.setItem(\"loggedInUser\", JSON.stringify(user)) }\n        else { localStorage.removeItem(\"loggedInUser\") }\n    }, [])\n    const setToken = useCallback((token) => {\n        if (token) { localStorage.setItem(\"jwtToken\", token) }\n        else { localStorage.removeItem(\"jwtToken\") }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        _token = token\n        notify()\n\n    }, [])\n    useEffect(() => {\n        if (!loading && tokenData) {\n            setToken(tokenData.refreshToken.token)\n        }\n        if (!getToken() && !window.location.pathname.includes(\"reset-password\")) {\n            setToken(null)\n        }\n\n    }, [loading, tokenData, refreshToken, setToken, getToken])\n\n    function login(userData) {\n        setToken(userData.tokenAuth.token)\n        setUser(userData.tokenAuth.user)\n\n        dispatch({\n            type: 'LOGIN',\n            payload: userData\n        })\n\n    }\n\n    const useAuth = () => {\n        const [isLogged, setIsLogged] = useState(isLoggedIn());\n\n        useEffect(() => {\n            const listener = (newIsLogged) => {\n                setIsLogged(newIsLogged);\n            };\n\n            subscribe(listener);\n            return () => {\n                unsubscribe(listener);\n            };\n        }, []);\n\n        return isLogged;\n    };\n\n    function registerAdmin(userData) {\n\n        dispatch({\n            type: 'REGISTER_ADMIN',\n            payload: userData,\n        })\n\n    }\n\n    function registerStaff(userData) {\n\n        dispatch({\n            type: 'REGISTER_STAFF',\n            payload: userData,\n        })\n\n    }\n    function userProfile(userData) {\n        dispatch({\n            type: 'USER_PROFILE',\n            payload: userData,\n        })\n\n    }\n\n    function logout() {\n        setToken(null)\n        setUser(null)\n        AuthContext.user = null;\n\n        dispatch({\n            type: 'LOGOUT'\n        })\n\n    }\n\n    return (\n        <AuthContext.Provider\n            value={{\n                user: state.user, profile: state.profile, login, logout, registerAdmin,\n                userProfile, registerStaff, useAuth, getToken, setToken\n            }}\n            {...props}\n        />\n    )\n}\n\nexport { AuthContext, AuthProvider }\n"]},"metadata":{},"sourceType":"module"}