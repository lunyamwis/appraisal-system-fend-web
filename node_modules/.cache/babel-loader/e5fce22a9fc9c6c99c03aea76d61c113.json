{"ast":null,"code":"var _jsxFileName = \"/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/context/whatsappMessages.js\";\nimport React, { useReducer, createContext } from 'react';\nconst initialState = {\n  message: null,\n  messages: null\n};\nconst WhatsAppMessageContext = createContext({\n  message: null,\n  messages: null\n});\n\nfunction WhatsAppMessageReducer(state, action) {\n  switch (action.type) {\n    case 'SEND_WHATSAPP_MESSAGE':\n      return { ...state,\n        message: action.payload\n      };\n\n    case 'GET_WHATSAPP_MESSAGE':\n      return { ...state,\n        message: action.payload\n      };\n\n    case 'GET_WHATSAPP_MESSAGES':\n      return { ...state,\n        messages: action.payload\n      };\n\n    case 'ASSIGN_SALES_AGENT':\n      return { ...state,\n        messages: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction WhatsAppMessageProvider(props) {\n  const [state, dispatch] = useReducer(WhatsAppMessageReducer, initialState);\n\n  function sendWhatsAppMessage(userData) {\n    dispatch({\n      type: 'SEND_WHATSAPP_MESSAGE',\n      payload: userData\n    });\n  }\n\n  function getWhatsAppMessage(userData) {\n    dispatch({\n      type: 'GET_WHATSAPP_MESSAGE',\n      payload: userData\n    });\n  }\n\n  function getWhatsAppMessages(userData) {\n    dispatch({\n      type: 'GET_WHATSAPP_MESSAGES',\n      payload: userData\n    });\n  }\n\n  function assignSalesAgent(userData) {}\n\n  return /*#__PURE__*/React.createElement(WhatsAppMessageContext.Provider, Object.assign({\n    value: {\n      message: state.message,\n      messages: state.messages,\n      sendWhatsAppMessage,\n      getWhatsAppMessage,\n      getWhatsAppMessages\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport { WhatsAppMessageContext, WhatsAppMessageProvider };","map":{"version":3,"sources":["/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/context/whatsappMessages.js"],"names":["React","useReducer","createContext","initialState","message","messages","WhatsAppMessageContext","WhatsAppMessageReducer","state","action","type","payload","WhatsAppMessageProvider","props","dispatch","sendWhatsAppMessage","userData","getWhatsAppMessage","getWhatsAppMessages","assignSalesAgent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,IADQ;AAEjBC,EAAAA,QAAQ,EAAE;AAFO,CAArB;AAOA,MAAMC,sBAAsB,GAAGJ,aAAa,CAAC;AACzCE,EAAAA,OAAO,EAAE,IADgC;AAEzCC,EAAAA,QAAQ,EAAE;AAF+B,CAAD,CAA5C;;AAKA,SAASE,sBAAT,CAAgCC,KAAhC,EAAuCC,MAAvC,EAA+C;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,uBAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHJ,QAAAA,OAAO,EAAEK,MAAM,CAACE;AAFb,OAAP;;AAIJ,SAAK,sBAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHJ,QAAAA,OAAO,EAAEK,MAAM,CAACE;AAFb,OAAP;;AAIJ,SAAK,uBAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,QAAQ,EAAEI,MAAM,CAACE;AAFd,OAAP;;AAIJ,SAAK,oBAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,QAAQ,EAACI,MAAM,CAACE;AAFb,OAAP;;AAIJ;AACI,aAAOH,KAAP;AAtBR;AAwBH;;AAED,SAASI,uBAAT,CAAiCC,KAAjC,EAAwC;AACpC,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBb,UAAU,CAACM,sBAAD,EAAyBJ,YAAzB,CAApC;;AAEA,WAASY,mBAAT,CAA6BC,QAA7B,EAAuC;AAEnCF,IAAAA,QAAQ,CAAC;AACLJ,MAAAA,IAAI,EAAE,uBADD;AAELC,MAAAA,OAAO,EAAEK;AAFJ,KAAD,CAAR;AAKH;;AACD,WAASC,kBAAT,CAA4BD,QAA5B,EAAsC;AAElCF,IAAAA,QAAQ,CAAC;AACLJ,MAAAA,IAAI,EAAE,sBADD;AAELC,MAAAA,OAAO,EAAEK;AAFJ,KAAD,CAAR;AAKH;;AACD,WAASE,mBAAT,CAA6BF,QAA7B,EAAuC;AAEnCF,IAAAA,QAAQ,CAAC;AACLJ,MAAAA,IAAI,EAAE,uBADD;AAELC,MAAAA,OAAO,EAAEK;AAFJ,KAAD,CAAR;AAKH;;AAED,WAASG,gBAAT,CAA0BH,QAA1B,EAAmC,CAElC;;AAED,sBACI,oBAAC,sBAAD,CAAwB,QAAxB;AACI,IAAA,KAAK,EAAE;AACHZ,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OADZ;AACqBC,MAAAA,QAAQ,EAAEG,KAAK,CAACH,QADrC;AAEHU,MAAAA,mBAFG;AAEkBE,MAAAA,kBAFlB;AAEsCC,MAAAA;AAFtC;AADX,KAKQL,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AASH;;AAED,SAASP,sBAAT,EAAiCM,uBAAjC","sourcesContent":["import React, { useReducer, createContext } from 'react';\n\nconst initialState = {\n    message: null,\n    messages: null,\n}\n\n\n\nconst WhatsAppMessageContext = createContext({\n    message: null,\n    messages: null,\n});\n\nfunction WhatsAppMessageReducer(state, action) {\n    switch (action.type) {\n        case 'SEND_WHATSAPP_MESSAGE':\n            return {\n                ...state,\n                message: action.payload,\n            }\n        case 'GET_WHATSAPP_MESSAGE':\n            return {\n                ...state,\n                message: action.payload,\n            }\n        case 'GET_WHATSAPP_MESSAGES':\n            return {\n                ...state,\n                messages: action.payload\n            }\n        case 'ASSIGN_SALES_AGENT':\n            return {\n                ...state,\n                messages:action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nfunction WhatsAppMessageProvider(props) {\n    const [state, dispatch] = useReducer(WhatsAppMessageReducer, initialState);\n\n    function sendWhatsAppMessage(userData) {\n\n        dispatch({\n            type: 'SEND_WHATSAPP_MESSAGE',\n            payload: userData,\n        })\n\n    }\n    function getWhatsAppMessage(userData) {\n\n        dispatch({\n            type: 'GET_WHATSAPP_MESSAGE',\n            payload: userData,\n        })\n\n    }\n    function getWhatsAppMessages(userData) {\n\n        dispatch({\n            type: 'GET_WHATSAPP_MESSAGES',\n            payload: userData,\n        })\n\n    }\n\n    function assignSalesAgent(userData){\n        \n    }\n\n    return (\n        <WhatsAppMessageContext.Provider\n            value={{\n                message: state.message, messages: state.messages,\n                sendWhatsAppMessage, getWhatsAppMessage, getWhatsAppMessages\n            }}\n            {...props}\n        />\n    )\n}\n\nexport { WhatsAppMessageContext, WhatsAppMessageProvider }\n"]},"metadata":{},"sourceType":"module"}