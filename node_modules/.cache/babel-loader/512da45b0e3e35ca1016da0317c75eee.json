{"ast":null,"code":"var _jsxFileName = \"/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/context/salesAgent.js\";\nimport React, { useReducer, createContext } from 'react';\nconst initialState = {\n  message: null,\n  messages: null\n};\nconst salesAgentContext = createContext({\n  message: null,\n  messages: null\n});\n\nfunction SalesAgentReducer(state, action) {\n  switch (action.type) {\n    case 'ASSIGN_SALES_AGENT':\n      return { ...state,\n        message: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction SalesAgentProvider(props) {\n  const [state, dispatch] = useReducer(SalesAgentReducer, initialState);\n\n  function assignSalesAgent(userData) {\n    dispatch({\n      type: 'ASSIGN_SALES_AGENT',\n      payload: userData\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(salesAgentContext.Provider, Object.assign({\n    value: {\n      message: state.message,\n      messages: state.messages,\n      assignSalesAgent\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport { salesAgentContext, SalesAgentProvider };","map":{"version":3,"sources":["/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/context/salesAgent.js"],"names":["React","useReducer","createContext","initialState","message","messages","salesAgentContext","SalesAgentReducer","state","action","type","payload","SalesAgentProvider","props","dispatch","assignSalesAgent","userData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,IADQ;AAEjBC,EAAAA,QAAQ,EAAE;AAFO,CAArB;AAOA,MAAMC,iBAAiB,GAAGJ,aAAa,CAAC;AACpCE,EAAAA,OAAO,EAAE,IAD2B;AAEpCC,EAAAA,QAAQ,EAAE;AAF0B,CAAD,CAAvC;;AAKA,SAASE,iBAAT,CAA2BC,KAA3B,EAAkCC,MAAlC,EAA0C;AACtC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,oBAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHJ,QAAAA,OAAO,EAAEK,MAAM,CAACE;AAFb,OAAP;;AAIJ;AACI,aAAOH,KAAP;AAPR;AASH;;AAED,SAASI,kBAAT,CAA4BC,KAA5B,EAAmC;AAC/B,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBb,UAAU,CAACM,iBAAD,EAAoBJ,YAApB,CAApC;;AAEA,WAASY,gBAAT,CAA0BC,QAA1B,EAAoC;AAEhCF,IAAAA,QAAQ,CAAC;AACLJ,MAAAA,IAAI,EAAE,oBADD;AAELC,MAAAA,OAAO,EAAEK;AAFJ,KAAD,CAAR;AAKH;;AAED,sBACI,oBAAC,iBAAD,CAAmB,QAAnB;AACI,IAAA,KAAK,EAAE;AACHZ,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OADZ;AACqBC,MAAAA,QAAQ,EAAEG,KAAK,CAACH,QADrC;AAEHU,MAAAA;AAFG;AADX,KAKQF,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AASH;;AAED,SAASP,iBAAT,EAA4BM,kBAA5B","sourcesContent":["import React, { useReducer, createContext } from 'react';\n\nconst initialState = {\n    message: null,\n    messages: null,\n}\n\n\n\nconst salesAgentContext = createContext({\n    message: null,\n    messages: null,\n});\n\nfunction SalesAgentReducer(state, action) {\n    switch (action.type) {\n        case 'ASSIGN_SALES_AGENT':\n            return {\n                ...state,\n                message: action.payload,\n            }\n        default:\n            return state;\n    }\n}\n\nfunction SalesAgentProvider(props) {\n    const [state, dispatch] = useReducer(SalesAgentReducer, initialState);\n\n    function assignSalesAgent(userData) {\n\n        dispatch({\n            type: 'ASSIGN_SALES_AGENT',\n            payload: userData,\n        })\n\n    }\n    \n    return (\n        <salesAgentContext.Provider\n            value={{\n                message: state.message, messages: state.messages,\n                assignSalesAgent,\n            }}\n            {...props}\n        />\n    )\n}\n\nexport { salesAgentContext, SalesAgentProvider }\n"]},"metadata":{},"sourceType":"module"}