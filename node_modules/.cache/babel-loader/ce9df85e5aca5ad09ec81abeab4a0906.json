{"ast":null,"code":"var _jsxFileName = \"/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/context/clients.js\";\nimport React, { useReducer, createContext } from 'react';\nconst initialState = {\n  user: null,\n  clients: null\n};\nconst ClientContext = createContext({\n  clients: null,\n  user: null\n});\n\nfunction clientReducer(state, action) {\n  switch (action.type) {\n    case 'REGISTER_CLIENT':\n      return { ...state,\n        user: action.payload,\n        systemAlert: action.message\n      };\n\n    case 'GET_CLIENTS':\n      return { ...state,\n        clients: action.payload\n      };\n\n    case 'GET_CLIENT':\n      return { ...state,\n        user: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction ClientProvider(props) {\n  const [state, dispatch] = useReducer(clientReducer, initialState);\n\n  function registerClient(userData) {\n    dispatch({\n      type: 'REGISTER_CLIENT',\n      payload: userData\n    });\n  }\n\n  function getClient(userData) {\n    dispatch({\n      type: 'GET_CLIENT',\n      payload: userData\n    });\n  }\n\n  function getClients(userData) {\n    dispatch({\n      type: 'GET_CLIENTS',\n      payload: userData\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ClientContext.Provider, Object.assign({\n    value: {\n      user: state.user,\n      clients: state.clients,\n      registerClient,\n      getClient,\n      getClients\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport { ClientContext, ClientProvider };","map":{"version":3,"sources":["/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/context/clients.js"],"names":["React","useReducer","createContext","initialState","user","clients","ClientContext","clientReducer","state","action","type","payload","systemAlert","message","ClientProvider","props","dispatch","registerClient","userData","getClient","getClients"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,IADW;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;AAOA,MAAMC,aAAa,GAAGJ,aAAa,CAAC;AAChCG,EAAAA,OAAO,EAAE,IADuB;AAEhCD,EAAAA,IAAI,EAAE;AAF0B,CAAD,CAAnC;;AAKA,SAASG,aAAT,CAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC;AAClC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,iBAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHJ,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAFV;AAGHC,QAAAA,WAAW,EAAEH,MAAM,CAACI;AAHjB,OAAP;;AAKJ,SAAK,aAAL;AACI,aAAO,EACH,GAAGL,KADA;AAEHH,QAAAA,OAAO,EAAEI,MAAM,CAACE;AAFb,OAAP;;AAIJ,SAAK,YAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHJ,QAAAA,IAAI,EAAEK,MAAM,CAACE;AAFV,OAAP;;AAIJ;AACI,aAAOH,KAAP;AAlBR;AAoBH;;AAED,SAASM,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBf,UAAU,CAACM,aAAD,EAAgBJ,YAAhB,CAApC;;AAEA,WAASc,cAAT,CAAwBC,QAAxB,EAAkC;AAE9BF,IAAAA,QAAQ,CAAC;AACLN,MAAAA,IAAI,EAAE,iBADD;AAELC,MAAAA,OAAO,EAAEO;AAFJ,KAAD,CAAR;AAKH;;AACD,WAASC,SAAT,CAAmBD,QAAnB,EAA6B;AAEzBF,IAAAA,QAAQ,CAAC;AACLN,MAAAA,IAAI,EAAE,YADD;AAELC,MAAAA,OAAO,EAAEO;AAFJ,KAAD,CAAR;AAKH;;AACD,WAASE,UAAT,CAAoBF,QAApB,EAA8B;AAE1BF,IAAAA,QAAQ,CAAC;AACLN,MAAAA,IAAI,EAAE,aADD;AAELC,MAAAA,OAAO,EAAEO;AAFJ,KAAD,CAAR;AAKH;;AAED,sBACI,oBAAC,aAAD,CAAe,QAAf;AACI,IAAA,KAAK,EAAE;AAAEd,MAAAA,IAAI,EAAEI,KAAK,CAACJ,IAAd;AAAoBC,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAnC;AAA4CY,MAAAA,cAA5C;AAA4DE,MAAAA,SAA5D;AAAuEC,MAAAA;AAAvE;AADX,KAEQL,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAMH;;AAED,SAAST,aAAT,EAAwBQ,cAAxB","sourcesContent":["import React, { useReducer, createContext } from 'react';\n\nconst initialState = {\n    user: null,\n    clients: null,\n}\n\n\n\nconst ClientContext = createContext({\n    clients: null,\n    user: null\n});\n\nfunction clientReducer(state, action) {\n    switch (action.type) {\n        case 'REGISTER_CLIENT':\n            return {\n                ...state,\n                user: action.payload,\n                systemAlert: action.message\n            }\n        case 'GET_CLIENTS':\n            return {\n                ...state,\n                clients: action.payload\n            }\n        case 'GET_CLIENT':\n            return {\n                ...state,\n                user: action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nfunction ClientProvider(props) {\n    const [state, dispatch] = useReducer(clientReducer, initialState);\n\n    function registerClient(userData) {\n\n        dispatch({\n            type: 'REGISTER_CLIENT',\n            payload: userData,\n        })\n\n    }\n    function getClient(userData) {\n\n        dispatch({\n            type: 'GET_CLIENT',\n            payload: userData,\n        })\n\n    }\n    function getClients(userData) {\n\n        dispatch({\n            type: 'GET_CLIENTS',\n            payload: userData,\n        })\n\n    }\n\n    return (\n        <ClientContext.Provider\n            value={{ user: state.user, clients: state.clients, registerClient, getClient, getClients }}\n            {...props}\n        />\n    )\n}\n\nexport { ClientContext, ClientProvider }\n"]},"metadata":{},"sourceType":"module"}