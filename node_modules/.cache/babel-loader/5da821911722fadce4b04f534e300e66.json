{"ast":null,"code":"var _jsxFileName = \"/home/actserv/Documents/Lunyamwi_Projects/appraisal-system/appraisal-system-fend-web/src/components/auth/passwordReset.js\";\nimport React, { useState } from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport { Grid, Container, Header, Message } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/react-hooks';\nimport { PASS_RESET_REQUEST } from './queries';\nimport '../root.scss';\n\nfunction PasswordReset(props) {\n  const [errors, setErrors] = useState({});\n  const [visible, setVisible] = useState(false);\n  const [message, setMessage] = useState({});\n  const [values, setValues] = useState({\n    email: \"\"\n  });\n\n  const handleDismiss = () => {\n    setVisible(false);\n  };\n\n  const [resetPassword, {\n    loading\n  }] = useMutation(PASS_RESET_REQUEST, {\n    update(_, result) {\n      setMessage(result.data.passwordReset);\n    },\n\n    onError(err) {\n      try {\n        if (err.graphQLErrors) {\n          setErrors({\n            message: err.graphQLErrors[0].message\n          });\n        }\n\n        if (err.networkError !== null && err.networkError !== 'undefined') {\n          setErrors({\n            message: err.networkError.result.errors[0]\n          });\n        } else if (err.graphQLErrors !== null && err.networkError !== 'undefined') {\n          setErrors({\n            message: err.graphQLErrors.result.errors[0]\n          });\n        }\n      } catch (e) {}\n    },\n\n    variables: values\n  });\n\n  const onChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setErrors({});\n    resetPassword();\n    setVisible(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \".app-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"Reset Password\"), message.message ? /*#__PURE__*/React.createElement(Message, {\n    onDismiss: handleDismiss,\n    header: \"System Response\",\n    content: message.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }) : '', /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    noValidate: true,\n    className: loading ? \"loading\" : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Enter your email\",\n    name: \"email\",\n    type: \"email\",\n    value: values.email,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"Already have an account?\", /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 37\n    }\n  }, \" Login\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    secondary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"Get password reset link\")), visible && Object.keys(errors).length ? /*#__PURE__*/React.createElement(Message, {\n    onDismiss: handleDismiss,\n    header: \"Failed!\",\n    warning: true,\n    content: errors ? errors.message : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }) : '')))));\n}\n\nexport default PasswordReset;","map":{"version":3,"sources":["/home/actserv/Documents/Lunyamwi_Projects/appraisal-system/appraisal-system-fend-web/src/components/auth/passwordReset.js"],"names":["React","useState","Button","Form","Grid","Container","Header","Message","Link","useMutation","PASS_RESET_REQUEST","PasswordReset","props","errors","setErrors","visible","setVisible","message","setMessage","values","setValues","email","handleDismiss","resetPassword","loading","update","_","result","data","passwordReset","onError","err","graphQLErrors","networkError","e","variables","onChange","event","target","name","value","onSubmit","preventDefault","Object","keys","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,OAAlC,QAAiD,mBAAjD;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,kBAAT,QAAmC,WAAnC;AAEA,OAAO,cAAP;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC;AAIA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC;AACnCoB,IAAAA,KAAK,EAAE;AAD4B,GAAD,CAApC;;AAKA,QAAMC,aAAa,GAAG,MAAM;AAC1BN,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFD;;AAIA,QAAM,CAACO,aAAD,EAAgB;AAAEC,IAAAA;AAAF,GAAhB,IAA+Bf,WAAW,CAACC,kBAAD,EAAqB;AACnEe,IAAAA,MAAM,CAACC,CAAD,EAAIC,MAAJ,EAAY;AAChBT,MAAAA,UAAU,CAACS,MAAM,CAACC,IAAP,CAAYC,aAAb,CAAV;AACD,KAHkE;;AAInEC,IAAAA,OAAO,CAACC,GAAD,EAAM;AACX,UAAI;AACF,YAAIA,GAAG,CAACC,aAAR,EAAuB;AACrBlB,UAAAA,SAAS,CAAC;AAAEG,YAAAA,OAAO,EAAEc,GAAG,CAACC,aAAJ,CAAkB,CAAlB,EAAqBf;AAAhC,WAAD,CAAT;AACD;;AAED,YAAIc,GAAG,CAACE,YAAJ,KAAqB,IAArB,IAA6BF,GAAG,CAACE,YAAJ,KAAqB,WAAtD,EAAmE;AAEjEnB,UAAAA,SAAS,CAAC;AAAEG,YAAAA,OAAO,EAAEc,GAAG,CAACE,YAAJ,CAAiBN,MAAjB,CAAwBd,MAAxB,CAA+B,CAA/B;AAAX,WAAD,CAAT;AAED,SAJD,MAIO,IAAIkB,GAAG,CAACC,aAAJ,KAAsB,IAAtB,IAA8BD,GAAG,CAACE,YAAJ,KAAqB,WAAvD,EAAoE;AACzEnB,UAAAA,SAAS,CAAC;AAAEG,YAAAA,OAAO,EAAEc,GAAG,CAACC,aAAJ,CAAkBL,MAAlB,CAAyBd,MAAzB,CAAgC,CAAhC;AAAX,WAAD,CAAT;AAED;AACF,OAbD,CAaE,OAAOqB,CAAP,EAAU,CAAG;AAEhB,KApBkE;;AAqBnEC,IAAAA,SAAS,EAAEhB;AArBwD,GAArB,CAAhD;;AAwBA,QAAMiB,QAAQ,GAAIC,KAAD,IAAW;AAC1BjB,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACkB,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAA/C,KAAD,CAAT;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAIJ,KAAD,IAAW;AAC1BA,IAAAA,KAAK,CAACK,cAAN;AACA5B,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAS,IAAAA,aAAa;AACbP,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGC,OAAO,CAACA,OAAR,gBACC,oBAAC,OAAD;AACE,IAAA,SAAS,EAAEK,aADb;AAEE,IAAA,MAAM,EAAC,iBAFT;AAGE,IAAA,OAAO,EAAEL,OAAO,CAACA,OAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAOC,EATJ,eAWE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEwB,QAAhB;AAA0B,IAAA,UAAU,MAApC;AAAqC,IAAA,SAAS,EAAEjB,OAAO,GAAG,SAAH,GAAe,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,WAAW,EAAC,kBADd;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAEL,MAAM,CAACE,KAJhB;AAKE,IAAA,QAAQ,EAAEe,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAaE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEoB,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFpB,CAbF,eAiBE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAjBF,CAXF,EA+BGrB,OAAO,IAAI4B,MAAM,CAACC,IAAP,CAAY/B,MAAZ,EAAoBgC,MAA/B,gBACC,oBAAC,OAAD;AACE,IAAA,SAAS,EAAEvB,aADb;AAEE,IAAA,MAAM,EAAC,SAFT;AAGE,IAAA,OAAO,MAHT;AAIE,IAAA,OAAO,EAAET,MAAM,GAAGA,MAAM,CAACI,OAAV,GAAoB,EAJrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAQC,EAvCJ,CADF,CADF,CADF,CADF,CADF;AAqDD;;AAED,eAAeN,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport { Grid, Container, Header, Message } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/react-hooks';\nimport { PASS_RESET_REQUEST } from './queries'\n\nimport '../root.scss';\n\nfunction PasswordReset(props) {\n  const [errors, setErrors] = useState({});\n  const [visible, setVisible] = useState(false);\n  const [message, setMessage] = useState({});\n\n\n\n  const [values, setValues] = useState({\n    email: \"\",\n  });\n\n\n  const handleDismiss = () => {\n    setVisible(false)\n  }\n\n  const [resetPassword, { loading }] = useMutation(PASS_RESET_REQUEST, {\n    update(_, result) {\n      setMessage(result.data.passwordReset)\n    },\n    onError(err) {\n      try {\n        if (err.graphQLErrors) {\n          setErrors({ message: err.graphQLErrors[0].message });\n        }\n\n        if (err.networkError !== null && err.networkError !== 'undefined') {\n\n          setErrors({ message: err.networkError.result.errors[0] });\n\n        } else if (err.graphQLErrors !== null && err.networkError !== 'undefined') {\n          setErrors({ message: err.graphQLErrors.result.errors[0] });\n\n        }\n      } catch (e) { }\n\n    },\n    variables: values\n  });\n\n  const onChange = (event) => {\n    setValues({ ...values, [event.target.name]: event.target.value });\n  }\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setErrors({})\n    resetPassword();\n    setVisible(true);\n  }\n\n  return (\n    <div className='.app-container'>\n      <Container>\n        <Grid padded>\n          <Grid.Row>\n            <Grid.Column>\n              <Header as='h1'>Reset Password</Header>\n              {message.message ?\n                <Message\n                  onDismiss={handleDismiss}\n                  header='System Response'\n                  content={message.message}\n                />\n                :\n                ''\n              }\n              <Form onSubmit={onSubmit} noValidate className={loading ? \"loading\" : ''}>\n\n                <Form.Field>\n                  <input\n                    placeholder='Enter your email'\n                    name='email'\n                    type=\"email\"\n                    value={values.email}\n                    onChange={onChange}\n\n                  />\n                </Form.Field>\n\n                <div className='center'>\n                  Already have an account?\n                                    <Link to=\"/\"> Login</Link>\n                </div>\n                <Button type='submit' secondary>Get password reset link</Button>\n              </Form>\n\n              {visible && Object.keys(errors).length ?\n                <Message\n                  onDismiss={handleDismiss}\n                  header='Failed!'\n                  warning\n                  content={errors ? errors.message : ''}\n                />\n                :\n                ''\n\n              }\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default PasswordReset;\n"]},"metadata":{},"sourceType":"module"}