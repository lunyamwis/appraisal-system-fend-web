{"ast":null,"code":"var _jsxFileName = \"/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/policies/motor/motorPolicyReport.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Grid, Button, Header, Icon, Table, Menu, Tab, Loader } from 'semantic-ui-react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { MotorPolicyContext } from '../../../context/policy/motor';\nimport { GET_MOTOR_POLICY } from '../queries';\nimport { AuthContext } from '../../../context/auth';\nimport moment from 'moment';\nimport ReactExport from \"react-export-excel\";\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\nexport default function MotorPolicyReport({\n  props\n}) {\n  const authContext = useContext(AuthContext);\n  const [motorPolicy, setMotorPolicy] = useState({});\n  const [dataset, setDataset] = useState({\n    data: [],\n    created: false\n  });\n  const policyId = props.computedMatch.params.policyId;\n  const context = useContext(MotorPolicyContext);\n  const {\n    data: motorPolicyData\n  } = useQuery(GET_MOTOR_POLICY, {\n    variables: {\n      id: policyId\n    }\n  });\n  useEffect(() => {\n    if (motorPolicyData) {\n      setMotorPolicy(motorPolicyData.motorPolicy);\n    }\n  }, [motorPolicyData, motorPolicy, context]);\n  useEffect(() => {\n    if (motorPolicy.id && !dataset.created) {\n      const data = [{\n        clientNumber: motorPolicy.corporateClient ? motorPolicy.corporateClient.clientNumber : motorPolicy.individualClient.clientNumber,\n        clientName: motorPolicy.corporateClient ? motorPolicy.corporateClient.name : motorPolicy.individualClient.firstName + \" \" + motorPolicy.individualClient.lastName + \" \" + motorPolicy.individualClient.surname,\n        //postalAddress: motorPolicy.corporateClient ? motorPolicy.corporateClient.postalAddress : motorPolicy.individualClient.postalAddress,\n        location: motorPolicy.corporateClient ? motorPolicy.corporateClient.location : motorPolicy.individualClient.location,\n        occupation: motorPolicy.individualClient ? motorPolicy.individualClient.occupation : \"\",\n        dateOfBirth: motorPolicy.individualClient ? motorPolicy.individualClient.dateOfBirth : \"\",\n        idNumber: motorPolicy.individualClient ? motorPolicy.individualClient.idNumber : \"\",\n        kraPin: motorPolicy.corporateClient ? motorPolicy.corporateClient.kraPin : motorPolicy.individualClient.kraPin,\n        phoneNumber: motorPolicy.corporateClient ? motorPolicy.corporateClient.phoneNumber : motorPolicy.individualClient.phoneNumber,\n        email: motorPolicy.corporateClient ? motorPolicy.corporateClient.email : motorPolicy.individualClient.email,\n        vehicleUse: \"transport\",\n        insuranceCompany: motorPolicy.insuranceCompany.name,\n        insuranceClass: motorPolicy.insuranceClass,\n        policyNo: motorPolicy.policyNo,\n        registrationNo: motorPolicy.vehicles[0].registrationNo,\n        value: motorPolicy.value,\n        transactionDate: moment(motorPolicy.transactionDate).format('ddd, MMM Do YYYY'),\n        startDate: moment(motorPolicy.startDate).format('ddd, MMM Do YYYY'),\n        endDate: moment(motorPolicy.endDate).format('ddd, MMM Do YYYY'),\n        grossPremium: motorPolicy.premiums.totalPremiums.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n        netPremiums: motorPolicy.premiums.netPremiums.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n        premiumPaid: 34564,\n        premiumBalance: 6466,\n        grossCommission: motorPolicy.premiums.grossCommission.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n        withholdingTax: motorPolicy.premiums.withholdingTax.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n        netCommission: motorPolicy.premiums.netCommission.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n      }];\n      setDataset({\n        data,\n        created: true\n      });\n    }\n  }, [dataset.created, motorPolicy]);\n\n  function policyReport() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, !motorPolicy.id ? /*#__PURE__*/React.createElement(Loader, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 36\n      }\n    }) : /*#__PURE__*/React.createElement(Grid, {\n      style: {\n        overflowY: 'scroll'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      celled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 37\n      }\n    }, \"Client Number\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 37\n      }\n    }, \"Insured Name\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    }, \"Location\"), motorPolicy.individualClient && /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 70\n      }\n    }, \"Occupation\"), motorPolicy.individualClient && /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 70\n      }\n    }, \"Date of Birth\"), motorPolicy.individualClient && /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 70\n      }\n    }, \"Id Number\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 37\n      }\n    }, \"KRA Pin\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 37\n      }\n    }, \"Telephone Number\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 37\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 37\n      }\n    }, \"Vehicle Use\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 37\n      }\n    }, \"Insurance Company\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 37\n      }\n    }, \"Policy Class\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 37\n      }\n    }, \"Policy Number\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 37\n      }\n    }, \"Vehicle Registration Number\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 37\n      }\n    }, \"Sum Insured\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 37\n      }\n    }, \"Transaction Date\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 37\n      }\n    }, \"Period From\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 37\n      }\n    }, \"Period To\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 37\n      }\n    }, \"Gross Premium\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 37\n      }\n    }, \"Net Premium\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 37\n      }\n    }, \"Premium Paid\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 37\n      }\n    }, \"Premium Balance\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 37\n      }\n    }, \"Gross Commission\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 37\n      }\n    }, \"Withholding Tax\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 37\n      }\n    }, \"Net Commission\"))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    }, motorPolicy.vehicles.map((vehicle, key) => /*#__PURE__*/React.createElement(Table.Row, {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 41\n      }\n    }, motorPolicy.corporateClient ? motorPolicy.corporateClient.clientNumber : motorPolicy.individualClient.clientNumber), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 41\n      }\n    }, motorPolicy.corporateClient ? motorPolicy.corporateClient.name : motorPolicy.individualClient.firstName + \" \" + motorPolicy.individualClient.lastName + \" \" + motorPolicy.individualClient.surname), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 41\n      }\n    }, motorPolicy.corporateClient ? motorPolicy.corporateClient.postalAddress : motorPolicy.individualClient.postalAddress), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 41\n      }\n    }, motorPolicy.corporateClient ? motorPolicy.corporateClient.town : motorPolicy.individualClient.town), motorPolicy.individualClient && /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 74\n      }\n    }, motorPolicy.individualClient.occupation), motorPolicy.individualClient && /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 74\n      }\n    }, motorPolicy.individualClient.dateOfBirth), motorPolicy.individualClient && /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 74\n      }\n    }, motorPolicy.individualClient.idNumber), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 41\n      }\n    }, motorPolicy.corporateClient ? motorPolicy.corporateClient.kraPin : motorPolicy.individualClient.kraPin), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 41\n      }\n    }, motorPolicy.corporateClient ? motorPolicy.corporateClient.phoneNumber : motorPolicy.individualClient.phoneNumber), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 41\n      }\n    }, motorPolicy.corporateClient ? motorPolicy.corporateClient.email : motorPolicy.individualClient.email), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 41\n      }\n    }, motorPolicy.insuranceCompany.name), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 41\n      }\n    }, motorPolicy.insuranceClass), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 41\n      }\n    }, motorPolicy.policyNo), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 41\n      }\n    }, vehicle.registrationNo), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 41\n      }\n    }, motorPolicy.value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 41\n      }\n    }, moment(motorPolicy.transactionDate).format('ddd, MMM Do YYYY')), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 41\n      }\n    }, moment(motorPolicy.startDate).format('ddd, MMM Do YYYY')), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 41\n      }\n    }, moment(motorPolicy.endDate).format('ddd, MMM Do YYYY')), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 41\n      }\n    }, motorPolicy.premiums.totalPremiums.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 41\n      }\n    }, motorPolicy.premiums.netPremiums.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 41\n      }\n    }, motorPolicy.premiums.grossCommission.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 41\n      }\n    }, motorPolicy.premiums.withholdingTax.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 41\n      }\n    }, motorPolicy.premiums.netCommission.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))))))));\n  }\n\n  const panes = [{\n    menuItem: /*#__PURE__*/React.createElement(Menu.Item, {\n      key: \"motor\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, \"Motor\"),\n    render: () => {\n      return /*#__PURE__*/React.createElement(Tab.Pane, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }\n      }, policyReport());\n    }\n  }];\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    columns: 2,\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Header.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/staff/dashboard/policies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 33\n    }\n  }, \"Policies\"), \" \", '>', \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/staff/dashboard/policies/general\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 88\n    }\n  }, \"General\"), \" \", '>', \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/staff/dashboard/policies/general/motor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 150\n    }\n  }, \"Motor\"), \" \", '>', \" Policy Report\", /*#__PURE__*/React.createElement(Header.Subheader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 33\n    }\n  }, \"Hey there \", authContext.user.username, \", here is a report for the motor policy\"))))), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 3,\n    className: \"clear-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, dataset.created && /*#__PURE__*/React.createElement(ExcelFile, {\n    element: /*#__PURE__*/React.createElement(Button, {\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 61\n      }\n    }, \"Download Report\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(ExcelSheet, {\n    data: dataset.data,\n    filename: motorPolicy.policyNo + moment().format('ddd-MMM-YYYY-HH-mm-ss'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Client Number\",\n    value: \"clientNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Client Name\",\n    value: \"clientName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Address\",\n    value: \"postalAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Location\",\n    value: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Occupation\",\n    value: \"occupation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Date of Birth\",\n    value: \"dateOfBirth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Address\",\n    value: \"postalAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Id Number\",\n    value: \"idNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"KRA Pin\",\n    value: \"kraPin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Phone Number\",\n    value: \"phoneNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Email\",\n    value: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Vehicle Use\",\n    value: \"vehicleUse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Insurance Company\",\n    value: \"insuranceCompany\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Insurance Class\",\n    value: \"insuranceClass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Policy Number\",\n    value: \"policyNo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Vehicle Registration Number\",\n    value: \"registrationNo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Vehicle Registration Number\",\n    value: \"registrationNo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Sum Insured\",\n    value: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Transaction Date\",\n    value: \"transactionDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Start Date\",\n    value: \"startDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"End Date\",\n    value: \"endDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Gross Premium\",\n    value: \"grossPremium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Net Premium\",\n    value: \"netPremiums\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Premium Paid\",\n    value: \"premiumPaid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Premium Balance\",\n    value: \"premiumBalance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Gross Commission\",\n    value: \"grossCommission\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Withholding Tax\",\n    value: \"withholdingTax\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Net Commission\",\n    value: \"netCommission\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    panes: panes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/policies/motor/motorPolicyReport.js"],"names":["React","useState","useContext","useEffect","Grid","Button","Header","Icon","Table","Menu","Tab","Loader","useQuery","MotorPolicyContext","GET_MOTOR_POLICY","AuthContext","moment","ReactExport","ExcelFile","ExcelSheet","ExcelColumn","MotorPolicyReport","props","authContext","motorPolicy","setMotorPolicy","dataset","setDataset","data","created","policyId","computedMatch","params","context","motorPolicyData","variables","id","clientNumber","corporateClient","individualClient","clientName","name","firstName","lastName","surname","location","occupation","dateOfBirth","idNumber","kraPin","phoneNumber","email","vehicleUse","insuranceCompany","insuranceClass","policyNo","registrationNo","vehicles","value","transactionDate","format","startDate","endDate","grossPremium","premiums","totalPremiums","toString","replace","netPremiums","premiumPaid","premiumBalance","grossCommission","withholdingTax","netCommission","policyReport","overflowY","map","vehicle","key","postalAddress","town","panes","menuItem","render","user","username"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SACIC,IADJ,EAEIC,MAFJ,EAGIC,MAHJ,EAIIC,IAJJ,EAKIC,KALJ,EAMIC,IANJ,EAOIC,GAPJ,EAQIC,MARJ,QASO,mBATP;AAUA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAACC,SAA9B;AACA,MAAMC,UAAU,GAAGF,WAAW,CAACC,SAAZ,CAAsBC,UAAzC;AACA,MAAMC,WAAW,GAAGH,WAAW,CAACC,SAAZ,CAAsBE,WAA1C;AAEA,eAAe,SAASC,iBAAT,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAAsC;AAEjD,QAAMC,WAAW,GAAGrB,UAAU,CAACa,WAAD,CAA9B;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCxB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACyB,OAAD,EAAUC,UAAV,IAAwB1B,QAAQ,CAAC;AAAE2B,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,OAAO,EAAE;AAArB,GAAD,CAAtC;AACA,QAAMC,QAAQ,GAAGR,KAAK,CAACS,aAAN,CAAoBC,MAApB,CAA2BF,QAA5C;AAGA,QAAMG,OAAO,GAAG/B,UAAU,CAACW,kBAAD,CAA1B;AAEA,QAAM;AAAEe,IAAAA,IAAI,EAAEM;AAAR,MAA4BtB,QAAQ,CAACE,gBAAD,EAAmB;AACzDqB,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEN;AAAN;AAD8C,GAAnB,CAA1C;AAGA3B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI+B,eAAJ,EAAqB;AACjBT,MAAAA,cAAc,CAACS,eAAe,CAACV,WAAjB,CAAd;AACH;AACJ,GAJQ,EAIN,CAACU,eAAD,EAAkBV,WAAlB,EAA+BS,OAA/B,CAJM,CAAT;AAMA9B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIqB,WAAW,CAACY,EAAZ,IAAkB,CAACV,OAAO,CAACG,OAA/B,EAAwC;AACpC,YAAMD,IAAI,GAAG,CACT;AACIS,QAAAA,YAAY,EAAEb,WAAW,CAACc,eAAZ,GAA8Bd,WAAW,CAACc,eAAZ,CAA4BD,YAA1D,GAAyEb,WAAW,CAACe,gBAAZ,CAA6BF,YADxH;AAEIG,QAAAA,UAAU,EAAEhB,WAAW,CAACc,eAAZ,GAA8Bd,WAAW,CAACc,eAAZ,CAA4BG,IAA1D,GAAiEjB,WAAW,CAACe,gBAAZ,CAA6BG,SAA7B,GAAyC,GAAzC,GAA+ClB,WAAW,CAACe,gBAAZ,CAA6BI,QAA5E,GAAuF,GAAvF,GAA6FnB,WAAW,CAACe,gBAAZ,CAA6BK,OAF3M;AAGI;AACAC,QAAAA,QAAQ,EAAErB,WAAW,CAACc,eAAZ,GAA8Bd,WAAW,CAACc,eAAZ,CAA4BO,QAA1D,GAAqErB,WAAW,CAACe,gBAAZ,CAA6BM,QAJhH;AAKIC,QAAAA,UAAU,EAAEtB,WAAW,CAACe,gBAAZ,GAA+Bf,WAAW,CAACe,gBAAZ,CAA6BO,UAA5D,GAAyE,EALzF;AAMIC,QAAAA,WAAW,EAAEvB,WAAW,CAACe,gBAAZ,GAA+Bf,WAAW,CAACe,gBAAZ,CAA6BQ,WAA5D,GAA0E,EAN3F;AAOIC,QAAAA,QAAQ,EAAExB,WAAW,CAACe,gBAAZ,GAA+Bf,WAAW,CAACe,gBAAZ,CAA6BS,QAA5D,GAAuE,EAPrF;AAQIC,QAAAA,MAAM,EAAEzB,WAAW,CAACc,eAAZ,GAA8Bd,WAAW,CAACc,eAAZ,CAA4BW,MAA1D,GAAmEzB,WAAW,CAACe,gBAAZ,CAA6BU,MAR5G;AASIC,QAAAA,WAAW,EAAE1B,WAAW,CAACc,eAAZ,GAA8Bd,WAAW,CAACc,eAAZ,CAA4BY,WAA1D,GAAwE1B,WAAW,CAACe,gBAAZ,CAA6BW,WATtH;AAUIC,QAAAA,KAAK,EAAE3B,WAAW,CAACc,eAAZ,GAA8Bd,WAAW,CAACc,eAAZ,CAA4Ba,KAA1D,GAAkE3B,WAAW,CAACe,gBAAZ,CAA6BY,KAV1G;AAWIC,QAAAA,UAAU,EAAE,WAXhB;AAYIC,QAAAA,gBAAgB,EAAE7B,WAAW,CAAC6B,gBAAZ,CAA6BZ,IAZnD;AAaIa,QAAAA,cAAc,EAAE9B,WAAW,CAAC8B,cAbhC;AAcIC,QAAAA,QAAQ,EAAE/B,WAAW,CAAC+B,QAd1B;AAeIC,QAAAA,cAAc,EAAEhC,WAAW,CAACiC,QAAZ,CAAqB,CAArB,EAAwBD,cAf5C;AAgBIE,QAAAA,KAAK,EAAElC,WAAW,CAACkC,KAhBvB;AAiBIC,QAAAA,eAAe,EAAE3C,MAAM,CAACQ,WAAW,CAACmC,eAAb,CAAN,CAAoCC,MAApC,CAA2C,kBAA3C,CAjBrB;AAkBIC,QAAAA,SAAS,EAAE7C,MAAM,CAACQ,WAAW,CAACqC,SAAb,CAAN,CAA8BD,MAA9B,CAAqC,kBAArC,CAlBf;AAmBIE,QAAAA,OAAO,EAAE9C,MAAM,CAACQ,WAAW,CAACsC,OAAb,CAAN,CAA4BF,MAA5B,CAAmC,kBAAnC,CAnBb;AAoBIG,QAAAA,YAAY,EAAEvC,WAAW,CAACwC,QAAZ,CAAqBC,aAArB,CAAmCC,QAAnC,GAA8CC,OAA9C,CAAsD,uBAAtD,EAA+E,GAA/E,CApBlB;AAqBIC,QAAAA,WAAW,EAAE5C,WAAW,CAACwC,QAAZ,CAAqBI,WAArB,CAAiCF,QAAjC,GAA4CC,OAA5C,CAAoD,uBAApD,EAA6E,GAA7E,CArBjB;AAsBIE,QAAAA,WAAW,EAAE,KAtBjB;AAuBIC,QAAAA,cAAc,EAAE,IAvBpB;AAwBIC,QAAAA,eAAe,EAAE/C,WAAW,CAACwC,QAAZ,CAAqBO,eAArB,CAAqCL,QAArC,GAAgDC,OAAhD,CAAwD,uBAAxD,EAAiF,GAAjF,CAxBrB;AAyBIK,QAAAA,cAAc,EAAEhD,WAAW,CAACwC,QAAZ,CAAqBQ,cAArB,CAAoCN,QAApC,GAA+CC,OAA/C,CAAuD,uBAAvD,EAAgF,GAAhF,CAzBpB;AA0BIM,QAAAA,aAAa,EAAEjD,WAAW,CAACwC,QAAZ,CAAqBS,aAArB,CAAmCP,QAAnC,GAA8CC,OAA9C,CAAsD,uBAAtD,EAA+E,GAA/E;AA1BnB,OADS,CAAb;AA8BAxC,MAAAA,UAAU,CAAC;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,OAAO,EAAE;AAAjB,OAAD,CAAV;AACH;AACJ,GAlCQ,EAkCN,CAACH,OAAO,CAACG,OAAT,EAAkBL,WAAlB,CAlCM,CAAT;;AAmCA,WAASkD,YAAT,GAAwB;AACpB,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAClD,WAAW,CAACY,EAAb,gBAAkB,oBAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB,gBACK,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEuC,QAAAA,SAAS,EAAE;AAAb,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,MAAM,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAII,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,EAKKnD,WAAW,CAACe,gBAAZ,iBAAgC,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALrC,EAMKf,WAAW,CAACe,gBAAZ,iBAAgC,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANrC,EAOKf,WAAW,CAACe,gBAAZ,iBAAgC,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPrC,eAQI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARJ,eASI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BATJ,eAUI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVJ,eAWI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXJ,eAYI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAZJ,eAaI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAbJ,eAcI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAdJ,eAeI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAfJ,eAgBI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAhBJ,eAiBI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAjBJ,eAkBI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAlBJ,eAmBI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAnBJ,eAoBI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBApBJ,eAqBI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBArBJ,eAsBI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAtBJ,eAuBI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAvBJ,eAwBI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAxBJ,eAyBI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAzBJ,eA0BI,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBA1BJ,CADJ,CADJ,eAgCI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKf,WAAW,CAACiC,QAAZ,CAAqBmB,GAArB,CAAyB,CAACC,OAAD,EAAUC,GAAV,kBACtB,oBAAC,KAAD,CAAO,GAAP;AAAW,MAAA,GAAG,EAAEA,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAatD,WAAW,CAACc,eAAZ,GAA8Bd,WAAW,CAACc,eAAZ,CAA4BD,YAA1D,GAAyEb,WAAW,CAACe,gBAAZ,CAA6BF,YAAnH,CADJ,eAEI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAab,WAAW,CAACc,eAAZ,GAA8Bd,WAAW,CAACc,eAAZ,CAA4BG,IAA1D,GAAiEjB,WAAW,CAACe,gBAAZ,CAA6BG,SAA7B,GAAyC,GAAzC,GAA+ClB,WAAW,CAACe,gBAAZ,CAA6BI,QAA5E,GAAuF,GAAvF,GAA6FnB,WAAW,CAACe,gBAAZ,CAA6BK,OAAxM,CAFJ,eAGI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAapB,WAAW,CAACc,eAAZ,GAA8Bd,WAAW,CAACc,eAAZ,CAA4ByC,aAA1D,GAA0EvD,WAAW,CAACe,gBAAZ,CAA6BwC,aAApH,CAHJ,eAII,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAavD,WAAW,CAACc,eAAZ,GAA8Bd,WAAW,CAACc,eAAZ,CAA4B0C,IAA1D,GAAiExD,WAAW,CAACe,gBAAZ,CAA6ByC,IAA3G,CAJJ,EAKKxD,WAAW,CAACe,gBAAZ,iBAAgC,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaf,WAAW,CAACe,gBAAZ,CAA6BO,UAA1C,CALrC,EAMKtB,WAAW,CAACe,gBAAZ,iBAAgC,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaf,WAAW,CAACe,gBAAZ,CAA6BQ,WAA1C,CANrC,EAOKvB,WAAW,CAACe,gBAAZ,iBAAgC,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaf,WAAW,CAACe,gBAAZ,CAA6BS,QAA1C,CAPrC,eAQI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaxB,WAAW,CAACc,eAAZ,GAA8Bd,WAAW,CAACc,eAAZ,CAA4BW,MAA1D,GAAmEzB,WAAW,CAACe,gBAAZ,CAA6BU,MAA7G,CARJ,eASI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAazB,WAAW,CAACc,eAAZ,GAA8Bd,WAAW,CAACc,eAAZ,CAA4BY,WAA1D,GAAwE1B,WAAW,CAACe,gBAAZ,CAA6BW,WAAlH,CATJ,eAUI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa1B,WAAW,CAACc,eAAZ,GAA8Bd,WAAW,CAACc,eAAZ,CAA4Ba,KAA1D,GAAkE3B,WAAW,CAACe,gBAAZ,CAA6BY,KAA5G,CAVJ,eAWI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,eAYI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa3B,WAAW,CAAC6B,gBAAZ,CAA6BZ,IAA1C,CAZJ,eAaI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAajB,WAAW,CAAC8B,cAAzB,CAbJ,eAcI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa9B,WAAW,CAAC+B,QAAzB,CAdJ,eAeI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAasB,OAAO,CAACrB,cAArB,CAfJ,eAgBI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAahC,WAAW,CAACkC,KAAZ,CAAkBQ,QAAlB,GAA6BC,OAA7B,CAAqC,uBAArC,EAA8D,GAA9D,CAAb,CAhBJ,eAiBI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAanD,MAAM,CAACQ,WAAW,CAACmC,eAAb,CAAN,CAAoCC,MAApC,CAA2C,kBAA3C,CAAb,CAjBJ,eAkBI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa5C,MAAM,CAACQ,WAAW,CAACqC,SAAb,CAAN,CAA8BD,MAA9B,CAAqC,kBAArC,CAAb,CAlBJ,eAmBI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa5C,MAAM,CAACQ,WAAW,CAACsC,OAAb,CAAN,CAA4BF,MAA5B,CAAmC,kBAAnC,CAAb,CAnBJ,eAoBI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAapC,WAAW,CAACwC,QAAZ,CAAqBC,aAArB,CAAmCC,QAAnC,GAA8CC,OAA9C,CAAsD,uBAAtD,EAA+E,GAA/E,CAAb,CApBJ,eAqBI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa3C,WAAW,CAACwC,QAAZ,CAAqBI,WAArB,CAAiCF,QAAjC,GAA4CC,OAA5C,CAAoD,uBAApD,EAA6E,GAA7E,CAAb,CArBJ,eAsBI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBJ,eAuBI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBJ,eAwBI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa3C,WAAW,CAACwC,QAAZ,CAAqBO,eAArB,CAAqCL,QAArC,GAAgDC,OAAhD,CAAwD,uBAAxD,EAAiF,GAAjF,CAAb,CAxBJ,eAyBI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa3C,WAAW,CAACwC,QAAZ,CAAqBQ,cAArB,CAAoCN,QAApC,GAA+CC,OAA/C,CAAuD,uBAAvD,EAAgF,GAAhF,CAAb,CAzBJ,eA0BI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa3C,WAAW,CAACwC,QAAZ,CAAqBS,aAArB,CAAmCP,QAAnC,GAA8CC,OAA9C,CAAsD,uBAAtD,EAA+E,GAA/E,CAAb,CA1BJ,CADH,CADL,CAhCJ,CADF,CAFV,CADJ;AAyEH;;AAED,QAAMc,KAAK,GAAG,CACV;AACIC,IAAAA,QAAQ,eACJ,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,GAAG,EAAC,OAAf;AAAuB,MAAA,QAAQ,EAAE,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFR;AAMIC,IAAAA,MAAM,EAAE,MAAM;AACV,0BACI,oBAAC,GAAD,CAAK,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKT,YAAY,EADjB,CADJ;AAKH;AAZL,GADU,CAAd;AAgBA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAkB,IAAA,MAAM,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,IAAI,EAAC,2BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,OACsD,GADtD,oBAC2D;AAAG,IAAA,IAAI,EAAC,mCAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAD3D,OACoH,GADpH,oBACyH;AAAG,IAAA,IAAI,EAAC,yCAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADzH,OACsL,GADtL,iCAEI,oBAAC,MAAD,CAAQ,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACenD,WAAW,CAAC6D,IAAZ,CAAiBC,QADhC,4CAFJ,CAFJ,CADJ,CADJ,CADJ,eAeI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAuB,IAAA,SAAS,EAAC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK3D,OAAO,CAACG,OAAR,iBAAmB,oBAAC,SAAD;AAAW,IAAA,OAAO,eAAE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAChB,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEH,OAAO,CAACE,IAA1B;AAAgC,IAAA,QAAQ,EAAEJ,WAAW,CAAC+B,QAAZ,GAAuBvC,MAAM,GAAG4C,MAAT,CAAgB,uBAAhB,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,eAAnB;AAAmC,IAAA,KAAK,EAAC,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,aAAnB;AAAiC,IAAA,KAAK,EAAC,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,SAAnB;AAA6B,IAAA,KAAK,EAAC,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,UAAnB;AAA8B,IAAA,KAAK,EAAC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,YAAnB;AAAgC,IAAA,KAAK,EAAC,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAMI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,eAAnB;AAAmC,IAAA,KAAK,EAAC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAOI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,SAAnB;AAA6B,IAAA,KAAK,EAAC,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,eAQI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,WAAnB;AAA+B,IAAA,KAAK,EAAC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eASI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,SAAnB;AAA6B,IAAA,KAAK,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAUI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,cAAnB;AAAkC,IAAA,KAAK,EAAC,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,eAWI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,OAAnB;AAA2B,IAAA,KAAK,EAAC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,eAYI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,aAAnB;AAAiC,IAAA,KAAK,EAAC,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,eAaI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,mBAAnB;AAAuC,IAAA,KAAK,EAAC,kBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,eAcI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,iBAAnB;AAAqC,IAAA,KAAK,EAAC,gBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,eAeI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,eAAnB;AAAmC,IAAA,KAAK,EAAC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,eAgBI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,6BAAnB;AAAiD,IAAA,KAAK,EAAC,gBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,eAiBI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,6BAAnB;AAAiD,IAAA,KAAK,EAAC,gBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,eAkBI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,aAAnB;AAAiC,IAAA,KAAK,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,eAmBI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,kBAAnB;AAAsC,IAAA,KAAK,EAAC,iBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,eAoBI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,YAAnB;AAAgC,IAAA,KAAK,EAAC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBJ,eAqBI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,UAAnB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBJ,eAsBI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,eAAnB;AAAmC,IAAA,KAAK,EAAC,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBJ,eAuBI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,aAAnB;AAAiC,IAAA,KAAK,EAAC,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBJ,eAwBI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,cAAnB;AAAkC,IAAA,KAAK,EAAC,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBJ,eAyBI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,iBAAnB;AAAqC,IAAA,KAAK,EAAC,gBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,eA0BI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,kBAAnB;AAAsC,IAAA,KAAK,EAAC,iBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BJ,eA2BI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,iBAAnB;AAAqC,IAAA,KAAK,EAAC,gBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BJ,eA4BI,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,gBAAnB;AAAoC,IAAA,KAAK,EAAC,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BJ,CADgB,CADxB,CAfJ,CADJ,eAwDI,oBAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAEqB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAxDJ,CADJ;AAiEH","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport {\n    Grid,\n    Button,\n    Header,\n    Icon,\n    Table,\n    Menu,\n    Tab,\n    Loader\n} from 'semantic-ui-react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { MotorPolicyContext } from '../../../context/policy/motor';\nimport { GET_MOTOR_POLICY } from '../queries'\nimport { AuthContext } from '../../../context/auth';\nimport moment from 'moment';\nimport ReactExport from \"react-export-excel\";\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nexport default function MotorPolicyReport({ props }) {\n\n    const authContext = useContext(AuthContext);\n    const [motorPolicy, setMotorPolicy] = useState({});\n    const [dataset, setDataset] = useState({ data: [], created: false });\n    const policyId = props.computedMatch.params.policyId\n\n\n    const context = useContext(MotorPolicyContext);\n\n    const { data: motorPolicyData } = useQuery(GET_MOTOR_POLICY, {\n        variables: { id: policyId }\n    });\n    useEffect(() => {\n        if (motorPolicyData) {\n            setMotorPolicy(motorPolicyData.motorPolicy);\n        }\n    }, [motorPolicyData, motorPolicy, context]);\n\n    useEffect(() => {\n        if (motorPolicy.id && !dataset.created) {\n            const data = [\n                {\n                    clientNumber: motorPolicy.corporateClient ? motorPolicy.corporateClient.clientNumber : motorPolicy.individualClient.clientNumber,\n                    clientName: motorPolicy.corporateClient ? motorPolicy.corporateClient.name : motorPolicy.individualClient.firstName + \" \" + motorPolicy.individualClient.lastName + \" \" + motorPolicy.individualClient.surname,\n                    //postalAddress: motorPolicy.corporateClient ? motorPolicy.corporateClient.postalAddress : motorPolicy.individualClient.postalAddress,\n                    location: motorPolicy.corporateClient ? motorPolicy.corporateClient.location : motorPolicy.individualClient.location,\n                    occupation: motorPolicy.individualClient ? motorPolicy.individualClient.occupation : \"\",\n                    dateOfBirth: motorPolicy.individualClient ? motorPolicy.individualClient.dateOfBirth : \"\",\n                    idNumber: motorPolicy.individualClient ? motorPolicy.individualClient.idNumber : \"\",\n                    kraPin: motorPolicy.corporateClient ? motorPolicy.corporateClient.kraPin : motorPolicy.individualClient.kraPin,\n                    phoneNumber: motorPolicy.corporateClient ? motorPolicy.corporateClient.phoneNumber : motorPolicy.individualClient.phoneNumber,\n                    email: motorPolicy.corporateClient ? motorPolicy.corporateClient.email : motorPolicy.individualClient.email,\n                    vehicleUse: \"transport\",\n                    insuranceCompany: motorPolicy.insuranceCompany.name,\n                    insuranceClass: motorPolicy.insuranceClass,\n                    policyNo: motorPolicy.policyNo,\n                    registrationNo: motorPolicy.vehicles[0].registrationNo,\n                    value: motorPolicy.value,\n                    transactionDate: moment(motorPolicy.transactionDate).format('ddd, MMM Do YYYY'),\n                    startDate: moment(motorPolicy.startDate).format('ddd, MMM Do YYYY'),\n                    endDate: moment(motorPolicy.endDate).format('ddd, MMM Do YYYY'),\n                    grossPremium: motorPolicy.premiums.totalPremiums.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n                    netPremiums: motorPolicy.premiums.netPremiums.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n                    premiumPaid: 34564,\n                    premiumBalance: 6466,\n                    grossCommission: motorPolicy.premiums.grossCommission.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n                    withholdingTax: motorPolicy.premiums.withholdingTax.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n                    netCommission: motorPolicy.premiums.netCommission.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n                }\n            ]\n            setDataset({ data, created: true })\n        }\n    }, [dataset.created, motorPolicy])\n    function policyReport() {\n        return (\n            <React.Fragment>\n                {!motorPolicy.id ? <Loader active />\n                    : <Grid style={{ overflowY: 'scroll' }}>\n                        <Table celled>\n                            <Table.Header>\n                                <Table.Row>\n                                    <Table.HeaderCell>Client Number</Table.HeaderCell>\n                                    <Table.HeaderCell>Insured Name</Table.HeaderCell>\n                                    {/* <Table.HeaderCell>Address</Table.HeaderCell> */}\n                                    <Table.HeaderCell>Location</Table.HeaderCell>\n                                    {motorPolicy.individualClient && <Table.HeaderCell>Occupation</Table.HeaderCell>}\n                                    {motorPolicy.individualClient && <Table.HeaderCell>Date of Birth</Table.HeaderCell>}\n                                    {motorPolicy.individualClient && <Table.HeaderCell>Id Number</Table.HeaderCell>}\n                                    <Table.HeaderCell>KRA Pin</Table.HeaderCell>\n                                    <Table.HeaderCell>Telephone Number</Table.HeaderCell>\n                                    <Table.HeaderCell>Email</Table.HeaderCell>\n                                    <Table.HeaderCell>Vehicle Use</Table.HeaderCell>\n                                    <Table.HeaderCell>Insurance Company</Table.HeaderCell>\n                                    <Table.HeaderCell>Policy Class</Table.HeaderCell>\n                                    <Table.HeaderCell>Policy Number</Table.HeaderCell>\n                                    <Table.HeaderCell>Vehicle Registration Number</Table.HeaderCell>\n                                    <Table.HeaderCell>Sum Insured</Table.HeaderCell>\n                                    <Table.HeaderCell>Transaction Date</Table.HeaderCell>\n                                    <Table.HeaderCell>Period From</Table.HeaderCell>\n                                    <Table.HeaderCell>Period To</Table.HeaderCell>\n                                    <Table.HeaderCell>Gross Premium</Table.HeaderCell>\n                                    <Table.HeaderCell>Net Premium</Table.HeaderCell>\n                                    <Table.HeaderCell>Premium Paid</Table.HeaderCell>\n                                    <Table.HeaderCell>Premium Balance</Table.HeaderCell>\n                                    <Table.HeaderCell>Gross Commission</Table.HeaderCell>\n                                    <Table.HeaderCell>Withholding Tax</Table.HeaderCell>\n                                    <Table.HeaderCell>Net Commission</Table.HeaderCell>\n                                </Table.Row>\n                            </Table.Header>\n\n                            <Table.Body>\n                                {motorPolicy.vehicles.map((vehicle, key) => (\n                                    <Table.Row key={key}>\n                                        <Table.Cell>{motorPolicy.corporateClient ? motorPolicy.corporateClient.clientNumber : motorPolicy.individualClient.clientNumber}</Table.Cell>\n                                        <Table.Cell>{motorPolicy.corporateClient ? motorPolicy.corporateClient.name : motorPolicy.individualClient.firstName + \" \" + motorPolicy.individualClient.lastName + \" \" + motorPolicy.individualClient.surname}</Table.Cell>\n                                        <Table.Cell>{motorPolicy.corporateClient ? motorPolicy.corporateClient.postalAddress : motorPolicy.individualClient.postalAddress}</Table.Cell>\n                                        <Table.Cell>{motorPolicy.corporateClient ? motorPolicy.corporateClient.town : motorPolicy.individualClient.town}</Table.Cell>\n                                        {motorPolicy.individualClient && <Table.Cell>{motorPolicy.individualClient.occupation}</Table.Cell>}\n                                        {motorPolicy.individualClient && <Table.Cell>{motorPolicy.individualClient.dateOfBirth}</Table.Cell>}\n                                        {motorPolicy.individualClient && <Table.Cell>{motorPolicy.individualClient.idNumber}</Table.Cell>}\n                                        <Table.Cell>{motorPolicy.corporateClient ? motorPolicy.corporateClient.kraPin : motorPolicy.individualClient.kraPin}</Table.Cell>\n                                        <Table.Cell>{motorPolicy.corporateClient ? motorPolicy.corporateClient.phoneNumber : motorPolicy.individualClient.phoneNumber}</Table.Cell>\n                                        <Table.Cell>{motorPolicy.corporateClient ? motorPolicy.corporateClient.email : motorPolicy.individualClient.email}</Table.Cell>\n                                        <Table.Cell>{ }</Table.Cell>\n                                        <Table.Cell>{motorPolicy.insuranceCompany.name}</Table.Cell>\n                                        <Table.Cell>{motorPolicy.insuranceClass}</Table.Cell>\n                                        <Table.Cell>{motorPolicy.policyNo}</Table.Cell>\n                                        <Table.Cell>{vehicle.registrationNo}</Table.Cell>\n                                        <Table.Cell>{motorPolicy.value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</Table.Cell>\n                                        <Table.Cell>{moment(motorPolicy.transactionDate).format('ddd, MMM Do YYYY')}</Table.Cell>\n                                        <Table.Cell>{moment(motorPolicy.startDate).format('ddd, MMM Do YYYY')}</Table.Cell>\n                                        <Table.Cell>{moment(motorPolicy.endDate).format('ddd, MMM Do YYYY')}</Table.Cell>\n                                        <Table.Cell>{motorPolicy.premiums.totalPremiums.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</Table.Cell>\n                                        <Table.Cell>{motorPolicy.premiums.netPremiums.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</Table.Cell>\n                                        <Table.Cell>{ }</Table.Cell>\n                                        <Table.Cell>{ }</Table.Cell>\n                                        <Table.Cell>{motorPolicy.premiums.grossCommission.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</Table.Cell>\n                                        <Table.Cell>{motorPolicy.premiums.withholdingTax.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</Table.Cell>\n                                        <Table.Cell>{motorPolicy.premiums.netCommission.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</Table.Cell>\n                                    </Table.Row>))}\n                            </Table.Body>\n\n\n                        </Table></Grid>}\n            </React.Fragment>\n\n        )\n    }\n\n    const panes = [\n        {\n            menuItem: (\n                <Menu.Item key='motor' disabled={true}>\n                    Motor\n                </Menu.Item>\n            ),\n            render: () => {\n                return (\n                    <Tab.Pane>\n                        {policyReport()}\n                    </Tab.Pane>\n                )\n            },\n        }\n    ]\n    return (\n        <React.Fragment>\n            <Grid columns={2} padded>\n                <Grid.Column>\n                    <div className=\"content-wrapper\">\n                        <Header as='h2'>\n                            <Icon name='file' />\n                            <Header.Content>\n                                <a href=\"/staff/dashboard/policies\">Policies</a> {'>'} <a href=\"/staff/dashboard/policies/general\">General</a> {'>'} <a href=\"/staff/dashboard/policies/general/motor\">Motor</a> {'>'} Policy Report\n                                <Header.Subheader>\n                                    Hey there {authContext.user.username}, here is a report for the motor policy\n                                </Header.Subheader>\n                            </Header.Content>\n                        </Header>\n                    </div>\n                </Grid.Column>\n\n                <Grid.Column width={3} className=\"clear-left\">\n                    {dataset.created && <ExcelFile element={<Button color='blue'>Download Report</Button>}>\n                        <ExcelSheet data={dataset.data} filename={motorPolicy.policyNo + moment().format('ddd-MMM-YYYY-HH-mm-ss')}>\n                            <ExcelColumn label=\"Client Number\" value=\"clientNumber\" />\n                            <ExcelColumn label=\"Client Name\" value=\"clientName\" />\n                            <ExcelColumn label=\"Address\" value=\"postalAddress\" />\n                            <ExcelColumn label=\"Location\" value=\"location\" />\n                            <ExcelColumn label=\"Occupation\" value=\"occupation\" />\n                            <ExcelColumn label=\"Date of Birth\" value=\"dateOfBirth\" />\n                            <ExcelColumn label=\"Address\" value=\"postalAddress\" />\n                            <ExcelColumn label=\"Id Number\" value=\"idNumber\" />\n                            <ExcelColumn label=\"KRA Pin\" value=\"kraPin\" />\n                            <ExcelColumn label=\"Phone Number\" value=\"phoneNumber\" />\n                            <ExcelColumn label=\"Email\" value=\"email\" />\n                            <ExcelColumn label=\"Vehicle Use\" value=\"vehicleUse\" />\n                            <ExcelColumn label=\"Insurance Company\" value=\"insuranceCompany\" />\n                            <ExcelColumn label=\"Insurance Class\" value=\"insuranceClass\" />\n                            <ExcelColumn label=\"Policy Number\" value=\"policyNo\" />\n                            <ExcelColumn label=\"Vehicle Registration Number\" value=\"registrationNo\" />\n                            <ExcelColumn label=\"Vehicle Registration Number\" value=\"registrationNo\" />\n                            <ExcelColumn label=\"Sum Insured\" value=\"value\" />\n                            <ExcelColumn label=\"Transaction Date\" value=\"transactionDate\" />\n                            <ExcelColumn label=\"Start Date\" value=\"startDate\" />\n                            <ExcelColumn label=\"End Date\" value=\"endDate\" />\n                            <ExcelColumn label=\"Gross Premium\" value=\"grossPremium\" />\n                            <ExcelColumn label=\"Net Premium\" value=\"netPremiums\" />\n                            <ExcelColumn label=\"Premium Paid\" value=\"premiumPaid\" />\n                            <ExcelColumn label=\"Premium Balance\" value=\"premiumBalance\" />\n                            <ExcelColumn label=\"Gross Commission\" value=\"grossCommission\" />\n                            <ExcelColumn label=\"Withholding Tax\" value=\"withholdingTax\" />\n                            <ExcelColumn label=\"Net Commission\" value=\"netCommission\" />\n\n                        </ExcelSheet>\n                    </ExcelFile>}\n\n                </Grid.Column>\n            </Grid>\n\n\n\n            <Grid padded>\n                <Grid.Column>\n                    <Tab panes={panes} />\n                </Grid.Column>\n            </Grid>\n\n        </React.Fragment>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}