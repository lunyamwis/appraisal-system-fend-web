{"ast":null,"code":"var _jsxFileName = \"/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/auth/profile.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { USER_PROFILE_QUERY } from './queries';\nimport { useQuery } from '@apollo/react-hooks';\nimport Profile from '../common/profile';\nexport default function UserProfile({\n  props\n}) {\n  const [user, setUser] = useState({});\n  const [userId, setUserID] = useState('');\n  const [fetched, setFetched] = useState(false);\n  const context = useContext(AuthContext);\n  useEffect(() => {\n    const userId = props.computedMatch.params.userId;\n    setUserID(userId);\n  }, [props.computedMatch.params.userId]);\n  const {\n    data: userData\n  } = useQuery(USER_PROFILE_QUERY, {\n    variables: {\n      id: userId\n    }\n  });\n  useEffect(() => {\n    if (userData) {\n      setUser(userData.user);\n\n      if (!fetched) {\n        context.userProfile(userData.user);\n        setFetched(true);\n      }\n    }\n  }, [context, fetched, userData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, user && /*#__PURE__*/React.createElement(Profile, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }\n  }));\n}","map":{"version":3,"sources":["/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/auth/profile.js"],"names":["React","useState","useContext","useEffect","AuthContext","USER_PROFILE_QUERY","useQuery","Profile","UserProfile","props","user","setUser","userId","setUserID","fetched","setFetched","context","computedMatch","params","data","userData","variables","id","userProfile"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,kBAAT,QAAmC,WAAnC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,eAAe,SAASC,WAAT,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAA8B;AAC3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMe,OAAO,GAAGd,UAAU,CAACE,WAAD,CAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,MAAM,GAAGH,KAAK,CAACQ,aAAN,CAAoBC,MAApB,CAA2BN,MAA1C;AACAC,IAAAA,SAAS,CAACD,MAAD,CAAT;AAED,GAJQ,EAIN,CAACH,KAAK,CAACQ,aAAN,CAAoBC,MAApB,CAA2BN,MAA5B,CAJM,CAAT;AAMA,QAAM;AAAEO,IAAAA,IAAI,EAAEC;AAAR,MAAqBd,QAAQ,CAACD,kBAAD,EAAqB;AAAEgB,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEV;AAAN;AAAb,GAArB,CAAnC;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,QAAJ,EAAc;AACZT,MAAAA,OAAO,CAACS,QAAQ,CAACV,IAAV,CAAP;;AACA,UAAI,CAACI,OAAL,EAAc;AACZE,QAAAA,OAAO,CAACO,WAAR,CAAoBH,QAAQ,CAACV,IAA7B;AACAK,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF;AACF,GARQ,EAQN,CAACC,OAAD,EAAUF,OAAV,EAAmBM,QAAnB,CARM,CAAT;AASA,sBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,IAAI,iBAAI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,CAFF;AAKD","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { USER_PROFILE_QUERY } from './queries'\nimport { useQuery } from '@apollo/react-hooks';\nimport Profile from '../common/profile'\nexport default function UserProfile({props}) {\n  const [user, setUser] = useState({});\n  const [userId, setUserID] = useState('');\n  const [fetched, setFetched] = useState(false);\n  const context = useContext(AuthContext);\n\n  useEffect(() => {\n    const userId = props.computedMatch.params.userId\n    setUserID(userId)\n\n  }, [props.computedMatch.params.userId])\n\n  const { data: userData } = useQuery(USER_PROFILE_QUERY, { variables: { id: userId } })\n  useEffect(() => {\n    if (userData) {\n      setUser(userData.user)\n      if (!fetched) {\n        context.userProfile(userData.user)\n        setFetched(true)\n      }\n    }\n  }, [context, fetched, userData])\n  return (\n\n    <div>\n      {user && <Profile user={user} />}\n    </div>)\n}\n"]},"metadata":{},"sourceType":"module"}