{"ast":null,"code":"var _jsxFileName = \"/home/actserv/Documents/Lunyamwi_Projects/appraisal-system/appraisal-system-fend-web/src/protectedRoutes.js\";\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from './context/auth';\n\nfunction ProtectedRoute({\n  component: Component,\n  ...rest\n}) {\n  const context = useContext(AuthContext);\n  const isAuthenticated = context.useAuth();\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (isAuthenticated) {\n        return /*#__PURE__*/React.createElement(Component, {\n          props: rest,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 28\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: \"/\",\n            state: {\n              from: props.location\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default ProtectedRoute;","map":{"version":3,"sources":["/home/actserv/Documents/Lunyamwi_Projects/appraisal-system/appraisal-system-fend-web/src/protectedRoutes.js"],"names":["React","useContext","Route","Redirect","AuthContext","ProtectedRoute","component","Component","rest","context","isAuthenticated","useAuth","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,gBAA5B;;AAEA,SAASC,cAAT,CAAwB;AACpBC,EAAAA,SAAS,EAAEC,SADS;AAEpB,KAAGC;AAFiB,CAAxB,EAGG;AACC,QAAMC,OAAO,GAAGR,UAAU,CAACG,WAAD,CAA1B;AACA,QAAMM,eAAe,GAAGD,OAAO,CAACE,OAAR,EAAxB;AACA,sBACI,oBAAC,KAAD,oBACQH,IADR;AAEI,IAAA,MAAM,EAAGI,KAAD,IAAW;AACf,UAAIF,eAAJ,EAAqB;AACjB,4BAAO,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAEF,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFD,MAEO;AACH,4BACI,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEK,YAAAA,QAAQ,EAAE,GAAZ;AAAiBC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAAxB,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;AACJ,KAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAcH;;AAED,eAAeX,cAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from './context/auth';\n\nfunction ProtectedRoute({\n    component: Component,\n    ...rest\n}) {\n    const context = useContext(AuthContext);\n    const isAuthenticated = context.useAuth()\n    return (\n        <Route\n            {...rest}\n            render={(props) => {\n                if (isAuthenticated) {\n                    return <Component props={rest} />;\n                } else {\n                    return (\n                        <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\n                    );\n                }\n            }}\n        />\n    );\n}\n\nexport default ProtectedRoute;"]},"metadata":{},"sourceType":"module"}