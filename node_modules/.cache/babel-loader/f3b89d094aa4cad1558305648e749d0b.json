{"ast":null,"code":"var _jsxFileName = \"/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/messages/sendMessages.js\";\nimport React, { useState, useContext, useEffect, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Grid, Container, Header, Icon, Form, Button, Divider, Tab, Message, Menu, Segment, Radio } from 'semantic-ui-react';\nimport Messages from './listPreviousMessages';\nimport { AuthContext } from '../../context/auth';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport 'react-chat-elements/dist/main.css';\nimport { SEND_WHATSAPP_MESSAGE, GET_WHATSAPP_MESSAGES } from './queries';\nimport * as yup from \"yup\";\nimport { WhatsAppMessageContext } from '../../context/whatsappMessages';\nexport default function SendWhatsappMessages(props) {\n  let history = useHistory();\n  const [errors, setErrors] = useState({\n    errorPaths: [],\n    errors: []\n  });\n  const [responseErrors, setResponseErrors] = useState([]);\n  const context = useContext(WhatsAppMessageContext);\n  const authContext = useContext(AuthContext);\n  const [messages, setMessages] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [search, setSearch] = useState({\n    search: \"\"\n  });\n  const [values, setValues] = useState({\n    messageOption: \"S\",\n    whatsappResponse: \"\",\n    whatsappMessageId: \"\"\n  });\n  const [pagination, setPagination] = useState({\n    whatsappPhoneNumber: \"+254700701209\",\n    page: 1,\n    limit: 10\n  });\n  let schema = yup.object().shape({\n    whatsappResponse: yup.string(),\n    whatsappMessageId: yup.string()\n  });\n  const {\n    data: messageData\n  } = useQuery(GET_WHATSAPP_MESSAGES, {\n    variables: pagination\n  });\n  useEffect(() => {\n    if (messageData) {\n      setMessages(messageData.whatsappMessages);\n    }\n  }, [messageData, context, messages]);\n  console.log(!!messages.length);\n\n  const onChange = e => {\n    e.preventDefault();\n    const message = messages.items.slice(-1)[0];\n    const messageId = !!message.previousResponses.length ? message.previousResponses[0].id : message.id;\n    setValues({ ...values,\n      whatsappResponse: e.target.value,\n      whatsappMessageId: messageId\n    });\n  };\n\n  const setMessageOps = useCallback(() => {\n    const users = [...values.individualClients, ...values.corporateClients, ...values.contactPersons];\n\n    if (users.length < 2) {\n      setValues({ ...values,\n        messageOption: \"S\",\n        messageOptUpdated: false\n      });\n    } else {\n      setValues({ ...values,\n        messageOption: \"M\",\n        messageOptUpdated: false\n      });\n    }\n  }, [values]);\n  const validate = useCallback(values => {\n    schema.validate(values, {\n      abortEarly: false\n    }).then(valid => setErrors({\n      errorPaths: [],\n      errors: []\n    })) //called if the entire form is valid\n    .catch(err => {\n      setErrors({\n        errors: err.errors,\n        errorPaths: err.inner.map(i => i.path)\n      });\n    });\n  }, [schema]);\n  const [sendWhatsAppMessage, {\n    loading\n  }] = useCallback(useMutation(SEND_WHATSAPP_MESSAGE, {\n    update(_, result) {\n      context.sendWhatsAppMessage(result.data.sendWhatsAppMessage.whatsappMessage);\n      history.push({\n        pathname: `/staff/dashboard/crm/whatsAppmessage/${result.data.sendWhatsappMessage.whatsappMessage.whatsappPhoneNumber}`\n      });\n    },\n\n    onError(err) {\n      console.log(err.graphQLErrors && err.graphQLErrors[0] ? err.graphQLErrors[0].message : err.networkError && err.networkError.result ? err.networkError.result.errors : err);\n\n      try {\n        if (err.graphQLErrors) {\n          setResponseErrors(err.graphQLErrors[0].message);\n        }\n\n        if (err.networkError !== null && err.networkError !== 'undefined') {\n          setResponseErrors(err.networkError.result.errors[0]);\n        } else if (err.graphQLErrors !== null && err.networkError !== 'undefined') {\n          setResponseErrors(err.graphQLErrors.result.errors[0]);\n        }\n      } catch (e) {\n        setVisible(true);\n      }\n    },\n\n    variables: values\n  }));\n  console.log(values);\n\n  const handleOnMessageChange = (e, {\n    value\n  }) => {\n    e.preventDefault();\n    setValues({ ...values,\n      previousResponses: value,\n      updated: true\n    });\n  };\n\n  const panes = [{\n    menuItem: /*#__PURE__*/React.createElement(Menu.Item, {\n      key: \"clients\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, \"Whatsapp Notify\"),\n    render: () => {\n      return /*#__PURE__*/React.createElement(Tab.Pane, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        noValidate: true,\n        className: loading ? \"loading\" : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Message, {\n        visible: !!errors.errors.length || visible,\n        warning: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Message.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 37\n        }\n      }, \"Please correct the following issues:\"), !!responseErrors.length && /*#__PURE__*/React.createElement(Message, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 65\n        }\n      }, responseErrors), /*#__PURE__*/React.createElement(Message.List, {\n        items: errors.errors,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 38\n        }\n      }))), /*#__PURE__*/React.createElement(Divider, {\n        horizontal: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 29\n        }\n      }, \"Send notification options\"), /*#__PURE__*/React.createElement(Form.Group, {\n        widths: \"equal\",\n        as: Segment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Radio, {\n        label: \"Send to ALL\",\n        name: \"radioGroup\",\n        value: \"all\",\n        toggle: true,\n        checked: onCheck,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 37\n        }\n      }))), /*#__PURE__*/React.createElement(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 37\n        }\n      }, \"Choose People to Send (s)\"), !!messages.length && /*#__PURE__*/React.createElement(Messages, {\n        multiple: true,\n        messages: messages,\n        handleOnMessageChange: handleOnMessageChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 59\n        }\n      }))), /*#__PURE__*/React.createElement(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Field, {\n        error: errors.errorPaths.includes('sms'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 37\n        }\n      }, \"Whatsapp SMS\"), /*#__PURE__*/React.createElement(Form.Input, {\n        fluid: true,\n        placeholder: \"Send whatsapp Text\",\n        name: \"sms\",\n        onChange: onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 37\n        }\n      }))), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        positive: true,\n        onClick: () => {\n          sendWhatsAppMessage();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 29\n        }\n      }, \"Send Message\")));\n    }\n  }];\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Header.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/staff/dashboard/overview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 33\n    }\n  }, \"Overview\"), \" \", '>', \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/staff/dashboard/overview/crm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 88\n    }\n  }, \" CRM \"), '>', \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/staff/dashboard/crm/messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 143\n    }\n  }, \"Messages\"), \" \", '>', \" Send Messages\", /*#__PURE__*/React.createElement(Header.Subheader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 33\n    }\n  }, \"Hello \", authContext.user.username, \", Fill in this form to send messages to prospective clients\")))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    panes: panes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/messages/sendMessages.js"],"names":["React","useState","useContext","useEffect","useCallback","useHistory","Grid","Container","Header","Icon","Form","Button","Divider","Tab","Message","Menu","Segment","Radio","Messages","AuthContext","useMutation","useQuery","SEND_WHATSAPP_MESSAGE","GET_WHATSAPP_MESSAGES","yup","WhatsAppMessageContext","SendWhatsappMessages","props","history","errors","setErrors","errorPaths","responseErrors","setResponseErrors","context","authContext","messages","setMessages","visible","setVisible","search","setSearch","values","setValues","messageOption","whatsappResponse","whatsappMessageId","pagination","setPagination","whatsappPhoneNumber","page","limit","schema","object","shape","string","data","messageData","variables","whatsappMessages","console","log","length","onChange","e","preventDefault","message","items","slice","messageId","previousResponses","id","target","value","setMessageOps","users","individualClients","corporateClients","contactPersons","messageOptUpdated","validate","abortEarly","then","valid","catch","err","inner","map","i","path","sendWhatsAppMessage","loading","update","_","result","whatsappMessage","push","pathname","sendWhatsappMessage","onError","graphQLErrors","networkError","handleOnMessageChange","updated","panes","menuItem","render","onCheck","includes","user","username"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n    Grid,\n    Container,\n    Header,\n    Icon,\n    Form,\n    Button,\n    Divider,\n    Tab,\n    Message,\n    Menu,\n    Segment,\n    Radio,\n} from 'semantic-ui-react';\nimport Messages from './listPreviousMessages';\n\nimport { AuthContext } from '../../context/auth';\n\nimport { useMutation, useQuery } from '@apollo/react-hooks';\n\nimport 'react-chat-elements/dist/main.css';\n\n\nimport { SEND_WHATSAPP_MESSAGE, GET_WHATSAPP_MESSAGES } from './queries'\nimport * as yup from \"yup\";\nimport { WhatsAppMessageContext } from '../../context/whatsappMessages';\n\nexport default function SendWhatsappMessages(props) {\n    let history = useHistory();\n    const [errors, setErrors] = useState({\n        errorPaths: [],\n        errors: []\n    });\n\n    const [responseErrors, setResponseErrors] = useState([]);\n    const context = useContext(WhatsAppMessageContext);\n    const authContext = useContext(AuthContext);\n    const [messages, setMessages] = useState([]);\n\n    const [visible, setVisible] = useState(false);\n\n    const [search, setSearch] = useState({ search: \"\" });\n    const [values, setValues] = useState({\n        messageOption: \"S\",\n        whatsappResponse: \"\",\n        whatsappMessageId: \"\",\n    });\n    const [pagination, setPagination] = useState({\n        whatsappPhoneNumber: \"+254700701209\",\n        page: 1,\n        limit: 10\n    })\n\n    let schema = yup.object().shape({\n        whatsappResponse: yup.string(),\n        whatsappMessageId: yup.string(),\n\n    });\n\n\n    const { data: messageData } = useQuery(GET_WHATSAPP_MESSAGES, {\n        variables: pagination\n    });\n    useEffect(() => {\n        if (messageData) {\n            setMessages(messageData.whatsappMessages);\n        }\n\n    }, [messageData, context, messages]);\n\n    console.log(!!messages.length)\n\n    const onChange = (e) => {\n        e.preventDefault()\n        const message = messages.items.slice(-1)[0]\n        const messageId = !!message.previousResponses.length ? message.previousResponses[0].id : message.id\n        setValues({ ...values, whatsappResponse: e.target.value, whatsappMessageId: messageId })\n    }\n    const setMessageOps = useCallback(() => {\n        const users = [...values.individualClients, ...values.corporateClients, ...values.contactPersons]\n        if (users.length < 2) {\n            setValues({ ...values, messageOption: \"S\", messageOptUpdated: false })\n        } else {\n            setValues({ ...values, messageOption: \"M\", messageOptUpdated: false })\n        }\n    }, [values])\n\n\n\n\n\n    const validate = useCallback((values) => {\n        schema.validate(values, { abortEarly: false })\n            .then(valid => setErrors({ errorPaths: [], errors: [] })) //called if the entire form is valid\n            .catch(err => {\n                setErrors({ errors: err.errors, errorPaths: err.inner.map(i => i.path) })\n            })\n    }, [schema])\n\n    const [sendWhatsAppMessage, { loading }] = useCallback(useMutation(SEND_WHATSAPP_MESSAGE, {\n        update(_, result) {\n            context.sendWhatsAppMessage(result.data.sendWhatsAppMessage.whatsappMessage)\n            history.push({\n                pathname: `/staff/dashboard/crm/whatsAppmessage/${result.data.sendWhatsappMessage.whatsappMessage.whatsappPhoneNumber}`\n            })\n        },\n        onError(err) {\n            console.log(err.graphQLErrors && err.graphQLErrors[0] ? err.graphQLErrors[0].message : err.networkError && err.networkError.result ? err.networkError.result.errors : err)\n            try {\n                if (err.graphQLErrors) {\n                    setResponseErrors(err.graphQLErrors[0].message);\n                }\n\n                if (err.networkError !== null && err.networkError !== 'undefined') {\n\n                    setResponseErrors(err.networkError.result.errors[0]);\n\n                } else if (err.graphQLErrors !== null && err.networkError !== 'undefined') {\n\n                    setResponseErrors(err.graphQLErrors.result.errors[0]);\n\n                }\n            } catch (e) {\n                setVisible(true);\n            }\n\n        },\n        variables: values,\n    }));\n\n    console.log(values)\n\n    const handleOnMessageChange = (e, { value }) => {\n        e.preventDefault()\n\n        setValues({ ...values, previousResponses: value, updated: true });\n    }\n\n\n\n\n    const panes = [\n        {\n            menuItem: (\n                <Menu.Item key='clients'>\n                    Whatsapp Notify\n                </Menu.Item>\n            ),\n            render: () => {\n                return (\n                    <Tab.Pane>\n                        <Form noValidate className={loading ? \"loading\" : ''}>\n                            <Form.Group>\n                                <Message visible={!!errors.errors.length || visible} warning>\n                                    <Message.Header>Please correct the following issues:</Message.Header>\n                                    {!!responseErrors.length && <Message>{responseErrors}</Message>}\n                                    {<Message.List items={errors.errors} />}\n                                </Message>\n                            </Form.Group>\n                            <Divider horizontal>Send notification options</Divider>\n                            <Form.Group widths='equal' as={Segment}>\n                                <Form.Field>\n                                    <Radio\n                                        label='Send to ALL'\n                                        name='radioGroup'\n                                        value='all'\n                                        toggle\n                                        checked={onCheck}\n                                    />\n                                </Form.Field>\n\n                            </Form.Group>\n                            <Form.Group widths='equal'>\n                                <Form.Field>\n                                    <label>Choose People to Send (s)</label>\n                                    {!!messages.length && <Messages\n                                        multiple={true}\n                                        messages={messages}\n                                        handleOnMessageChange={handleOnMessageChange}\n                                    />}\n                                </Form.Field>\n                            </Form.Group>\n\n                            <Form.Group widths='equal'>\n                                <Form.Field error={errors.errorPaths.includes('sms')}>\n                                    <label>Whatsapp SMS</label>\n                                    <Form.Input fluid placeholder='Send whatsapp Text'\n                                        name='sms'\n                                        onChange={onChange}\n\n                                    />\n                                </Form.Field>\n\n                            </Form.Group>\n                            <Button type='submit' positive onClick={() => { sendWhatsAppMessage(); }}>\n                                Send Message\n                        </Button>\n                        </Form>\n\n                    </Tab.Pane>\n                )\n            },\n        },\n\n\n    ]\n\n    return (\n        <Container>\n            <Grid container padded>\n                <Grid.Column>\n                    <div className=\"content-wrapper\">\n                        <Header as='h2'>\n                            <Icon name='settings' />\n                            <Header.Content>\n                                <a href=\"/staff/dashboard/overview\">Overview</a> {'>'} <a href=\"/staff/dashboard/overview/crm\"> CRM </a>{'>'} <a href=\"/staff/dashboard/crm/messages\">Messages</a> {'>'} Send Messages\n                                <Header.Subheader>\n                                    Hello {authContext.user.username}, Fill in this form to send messages to prospective clients\n                                </Header.Subheader>\n                            </Header.Content>\n                        </Header>\n                    </div>\n                </Grid.Column>\n            </Grid>\n\n            <Grid container padded>\n                <Grid.Column>\n                    <Tab panes={panes} />\n\n\n\n                </Grid.Column>\n            </Grid>\n\n\n\n        </Container >\n    )\n}\n"]},"metadata":{},"sourceType":"module"}