{"ast":null,"code":"var _jsxFileName = \"/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/clients/listClients.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Grid, Button, Container, Header, Icon, Form, Label, Menu, Tab, Pagination } from 'semantic-ui-react';\nimport moment from 'moment';\nimport { useQuery } from '@apollo/react-hooks';\nimport { FETCH_CLIENTS_QUERY, FETCH_CORPORATE_CLIENTS_QUERY } from './queries';\nimport { ClientContext } from '../../context/clients';\nimport '../root.scss';\nimport { AuthContext } from '../../context/auth';\nexport default function ClientRecords(props) {\n  const authContext = useContext(AuthContext);\n  const context = useContext(ClientContext);\n  const [fetched, setFetched] = useState(false);\n  const [corporateFetched, setCorporateFetched] = useState(false);\n  const [pagination, setPagination] = useState({\n    limit: 10,\n    page: 1,\n    search: \"\"\n  });\n  const [clients, setClients] = useState([]);\n  const [corporateClients, setCorporateClients] = useState([]);\n  const {\n    data: corporateData\n  } = useQuery(FETCH_CORPORATE_CLIENTS_QUERY, {\n    variables: pagination\n  });\n  const {\n    loading,\n    data\n  } = useQuery(FETCH_CLIENTS_QUERY, {\n    variables: pagination\n  });\n  useEffect(() => {\n    if (corporateData) {\n      setCorporateClients(corporateData.corporateClients);\n      setFetched(true);\n    }\n\n    if (!corporateFetched) {\n      if (corporateData) {\n        context.getCorporateClients(corporateData.corporateClients);\n      }\n    }\n\n    if (data) {\n      setClients(data.individualClients);\n      setCorporateFetched(true);\n    }\n\n    if (!fetched) {\n      if (data) {\n        context.getClients(data.individualClients);\n      }\n    }\n  }, [data, context, fetched, corporateData, corporateFetched]);\n\n  const handleOnPageChange = (e, data) => {\n    e.preventDefault();\n    setPagination({ ...pagination,\n      page: data.activePage\n    });\n  };\n\n  const handleOnSearch = e => {\n    e.preventDefault();\n    setPagination({ ...pagination,\n      search: e.target.value\n    });\n  };\n\n  function corporateClientList() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      columns: 6,\n      className: loading ? \"loading\" : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"Name\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, \"Email\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, \"Phone Number\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, \"Town\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"postal Address\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"Join Date\"))), corporateClients.items ? corporateClients.items.map((client, key) => /*#__PURE__*/React.createElement(Grid.Row, {\n      key: client.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, key + 1, \". \"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textTransform: 'titlecase'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, client.name)), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: \".9em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, client.email)), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, client.phoneNumber), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, client.town), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, client.postalAddress), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      floated: \"left\",\n      width: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, moment(client.createdAt).format('DD/MM/YYYY')), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 1,\n      floated: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/staff/dashboard/corporate-client/profile/${client.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      icon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"external alternate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 23\n      }\n    })))))))) : 'No Clients Available');\n  }\n\n  function clientList() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      columns: 6,\n      className: loading ? \"loading\" : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, \"Client Number\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, \"Name\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, \"Occupation\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, \"Phone Number\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, \"Join Date\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, \"Residence\"))), clients.items ? clients.items.map((client, key) => /*#__PURE__*/React.createElement(Grid.Row, {\n      key: client.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }, key + 1, \". \"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: \".9em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, client.clientNumber)), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textTransform: 'titlecase'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    }, client.firstName, \" \", client.lastName, \" \", client.surname)), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: \".9em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 22\n      }\n    }, client.occupation)), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, client.phoneNumber), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, moment(client.createdAt).format('DD/MM/YYYY')), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      floated: \"left\",\n      width: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, client.location ? client.location : client.town), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 1,\n      floated: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/staff/dashboard/clients/profile/${client.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      icon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"external alternate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 23\n      }\n    })))))))) : 'No Clients Available');\n  }\n\n  const panes = [{\n    menuItem: /*#__PURE__*/React.createElement(Menu.Item, {\n      key: \"clients\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }\n    }, \"Individual Clients\", /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 29\n      }\n    }, clients.count)),\n    render: () => {\n      return /*#__PURE__*/React.createElement(Tab.Pane, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }\n      }, clientList(), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }\n      }), clients.pages && /*#__PURE__*/React.createElement(Pagination, {\n        defaultActivePage: clients.page,\n        firstItem: null,\n        lastItem: null,\n        pointing: true,\n        secondary: true,\n        onPageChange: handleOnPageChange,\n        totalPages: clients.pages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 31\n        }\n      }));\n    }\n  }, {\n    menuItem: /*#__PURE__*/React.createElement(Menu.Item, {\n      key: \"corporateClients\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }\n    }, \"Corporate Clients\", /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 28\n      }\n    }, corporateClients.count)),\n    render: () => {\n      return /*#__PURE__*/React.createElement(Tab.Pane, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }\n      }, corporateClientList(), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }\n      }), corporateClients.pages && /*#__PURE__*/React.createElement(Pagination, {\n        defaultActivePage: corporateClients.page,\n        firstItem: null,\n        lastItem: null,\n        pointing: true,\n        secondary: true,\n        onPageChange: handleOnPageChange,\n        totalPages: corporateClients.pages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 40\n        }\n      }));\n    }\n  }];\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    columns: 2,\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Header.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/staff/dashboard/overview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 15\n    }\n  }, \"Overview\"), \" \", '>', \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/staff/dashboard/crm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 70\n    }\n  }, \"CRM\"), \" \", '>', \"  Client Records\", /*#__PURE__*/React.createElement(Header.Subheader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }\n  }, \"Hey there \", authContext.user.username, \", here is your client-records dashboard\"))))), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 3,\n    className: \"clear-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    href: \"/staff/dashboard/add-new-client\",\n    color: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, \"+ Register New Client\"))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    columns: 1,\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    placeholder: \"Name, Email, Id Number ...\",\n    name: \"name\",\n    onChange: handleOnSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form.Button, {\n    icon: true,\n    size: 'medium',\n    onClick: e => {\n      e.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 17\n    }\n  }), \"Find Client\"))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    columns: 1,\n    padded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    panes: panes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/actserv/Documents/brooks_insurance_agency_software/brooks-insurance-front-end/src/components/clients/listClients.js"],"names":["React","useState","useEffect","useContext","Link","Grid","Button","Container","Header","Icon","Form","Label","Menu","Tab","Pagination","moment","useQuery","FETCH_CLIENTS_QUERY","FETCH_CORPORATE_CLIENTS_QUERY","ClientContext","AuthContext","ClientRecords","props","authContext","context","fetched","setFetched","corporateFetched","setCorporateFetched","pagination","setPagination","limit","page","search","clients","setClients","corporateClients","setCorporateClients","data","corporateData","variables","loading","getCorporateClients","individualClients","getClients","handleOnPageChange","e","preventDefault","activePage","handleOnSearch","target","value","corporateClientList","items","map","client","key","id","textTransform","name","fontSize","email","phoneNumber","town","postalAddress","createdAt","format","clientList","clientNumber","firstName","lastName","surname","occupation","location","panes","menuItem","count","render","pages","user","username"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Grid,\n  Button,\n  Container,\n  Header,\n  Icon,\n  Form,\n  Label,\n  Menu,\n  Tab,\n  Pagination\n} from 'semantic-ui-react';\nimport moment from 'moment';\nimport { useQuery } from '@apollo/react-hooks';\nimport { FETCH_CLIENTS_QUERY, FETCH_CORPORATE_CLIENTS_QUERY } from './queries'\nimport { ClientContext } from '../../context/clients';\nimport '../root.scss';\nimport { AuthContext } from '../../context/auth';\n\nexport default function ClientRecords(props) {\n  const authContext = useContext(AuthContext);\n  const context = useContext(ClientContext);\n  const [fetched, setFetched] = useState(false);\n  const [corporateFetched, setCorporateFetched] = useState(false);\n  const [pagination, setPagination] = useState({\n    limit: 10,\n    page: 1,\n    search: \"\"\n  });\n\n\n  const [clients, setClients] = useState([]);\n  const [corporateClients, setCorporateClients] = useState([]);\n\n  const { data: corporateData } = useQuery(FETCH_CORPORATE_CLIENTS_QUERY, { variables: pagination });\n  const { loading, data } = useQuery(FETCH_CLIENTS_QUERY, { variables: pagination });\n  useEffect(() => {\n    if (corporateData) {\n      setCorporateClients(corporateData.corporateClients);\n      setFetched(true);\n    }\n    if (!corporateFetched) {\n      if (corporateData) {\n        context.getCorporateClients(corporateData.corporateClients)\n      }\n    }\n    if (data) {\n      setClients(data.individualClients);\n      setCorporateFetched(true);\n    }\n    if (!fetched) {\n      if (data) {\n        context.getClients(data.individualClients)\n      }\n    }\n  }, [data, context, fetched, corporateData, corporateFetched]);\n\n  const handleOnPageChange = (e, data) => {\n    e.preventDefault()\n    setPagination({ ...pagination, page: data.activePage })\n  }\n  const handleOnSearch = (e) => {\n    e.preventDefault()\n    setPagination({ ...pagination, search: e.target.value })\n\n  }\n\n\n  function corporateClientList() {\n\n    return (\n      \n      <Grid container columns={6} className={loading ? \"loading\" : ''}>\n        <Grid.Row>\n          <Grid.Column>\n            <Header as=\"h4\">Name</Header>\n          </Grid.Column>\n          <Grid.Column>\n            <Header as=\"h4\">Email</Header>\n          </Grid.Column>\n          <Grid.Column>\n            <Header as=\"h4\">Phone Number</Header>\n          </Grid.Column>\n          <Grid.Column>\n            <Header as=\"h4\">Town</Header>\n          </Grid.Column>\n          <Grid.Column>\n            <Header as=\"h4\">postal Address</Header>\n          </Grid.Column>\n          <Grid.Column>\n            <Header as=\"h4\">Join Date</Header>\n          </Grid.Column>\n        </Grid.Row>\n\n        { corporateClients.items ? corporateClients.items.map((client, key) =>\n            <Grid.Row key={client.id}>\n            <Grid.Column>\n              <span>{key + 1}. </span>\n              <span style={{ textTransform: 'titlecase' }}>{client.name}</span>\n            </Grid.Column>\n            <Grid.Column>\n              <span style={{ fontSize: \".9em\" }}>{client.email}</span>\n            </Grid.Column>\n            <Grid.Column>\n              {client.phoneNumber}\n            </Grid.Column>\n            <Grid.Column>\n              {client.town}\n            </Grid.Column>\n            <Grid.Column>\n              {client.postalAddress}\n            </Grid.Column>\n            <Grid.Column>\n              <Grid>\n                <Grid.Column floated='left' width={3}>\n                  {moment(client.createdAt).format('DD/MM/YYYY')}\n                </Grid.Column>\n                <Grid.Column width={1} floated='left'>\n                  <Link to={`/staff/dashboard/corporate-client/profile/${client.id}`}>\n                    <Button icon >\n                      <Icon name='external alternate' />\n                    </Button>\n                  </Link>\n                </Grid.Column>\n              </Grid>\n            </Grid.Column>\n          </Grid.Row>\n        ) : 'No Clients Available'}\n\n      </Grid>\n    )\n  }\n  function clientList() {\n\n    return (\n      <Grid container columns={6} className={loading ? \"loading\" : ''}>\n        <Grid.Row>\n          <Grid.Column>\n            <Header as=\"h4\">Client Number</Header>\n          </Grid.Column>\n          <Grid.Column>\n            <Header as=\"h4\">Name</Header>\n          </Grid.Column>\n          <Grid.Column>\n            <Header as=\"h4\">Occupation</Header>\n          </Grid.Column>\n          <Grid.Column>\n            <Header as=\"h4\">Phone Number</Header>\n          </Grid.Column>\n          <Grid.Column>\n            <Header as=\"h4\">Join Date</Header>\n          </Grid.Column>\n          <Grid.Column>\n            <Header as=\"h4\">Residence</Header>\n          </Grid.Column>\n        </Grid.Row>\n\n         { clients.items ? clients.items.map((client, key) =>\n         \n         <Grid.Row key={client.id}>\n            <Grid.Column>\n              <span>{key + 1}. </span>\n              <span style={{ fontSize: \".9em\" }}>{client.clientNumber}</span>\n            </Grid.Column>     \n            <Grid.Column>\n              <span style={{ textTransform: 'titlecase' }}>{client.firstName} {client.lastName} {client.surname}</span>\n            </Grid.Column>\n            <Grid.Column>\n                     <span style={{ fontSize: \".9em\" }}>{client.occupation}</span>\n            </Grid.Column>\n            <Grid.Column>\n              {client.phoneNumber}\n            </Grid.Column>\n            <Grid.Column>\n              {moment(client.createdAt).format('DD/MM/YYYY')}\n            </Grid.Column>\n            <Grid.Column>\n              <Grid>\n                <Grid.Column floated='left' width={3}>\n                             {client.location ? client.location : client.town} \n                </Grid.Column>\n                <Grid.Column width={1} floated='left'>\n                  <Link to={`/staff/dashboard/clients/profile/${client.id}`}>\n                    <Button icon >\n                      <Icon name='external alternate' />\n                    </Button>\n                  </Link>\n                </Grid.Column>\n              </Grid>\n            </Grid.Column>\n          </Grid.Row>\n        ) : 'No Clients Available'}\n      </Grid>\n    )\n  }\n\n  const panes = [\n    {\n      menuItem: (\n        <Menu.Item key='clients'>\n          Individual Clients<Label>{clients.count}</Label>\n        </Menu.Item>\n      ),\n      render: () => {\n        return (\n          <Tab.Pane>\n            {clientList()}\n            <br />\n            {clients.pages && <Pagination\n              defaultActivePage={clients.page}\n              firstItem={null}\n              lastItem={null}\n              pointing\n              secondary\n              onPageChange={handleOnPageChange}\n              totalPages={clients.pages}\n            />}\n          </Tab.Pane>\n        )\n      },\n    },\n    {\n      menuItem: (\n        <Menu.Item key='corporateClients'>\n          Corporate Clients<Label>{corporateClients.count}</Label>\n        </Menu.Item>\n      ),\n      render: () => {\n        return (\n          <Tab.Pane>\n            {corporateClientList()}\n            <br />\n            {corporateClients.pages && <Pagination\n              defaultActivePage={corporateClients.page}\n              firstItem={null}\n              lastItem={null}\n              pointing\n              secondary\n              onPageChange={handleOnPageChange}\n              totalPages={corporateClients.pages}\n            />}\n          </Tab.Pane>\n        )\n      },\n    },\n\n  ]\n\n  return (\n    <Container>\n      <Grid container columns={2} padded>\n        <Grid.Column>\n          <div className=\"content-wrapper\">\n            <Header as='h2'>\n              <Icon name='settings' />\n              <Header.Content>\n              <a href=\"/staff/dashboard/overview\">Overview</a> {'>'} <a href=\"/staff/dashboard/crm\">CRM</a> {'>'}  Client Records\n                <Header.Subheader>\n                  Hey there {authContext.user.username}, here is your client-records dashboard\n                </Header.Subheader>\n              </Header.Content>\n            </Header>\n          </div>\n        </Grid.Column>\n\n        <Grid.Column width={3} className=\"clear-left\">\n          <Button href=\"/staff/dashboard/add-new-client\" color='blue'>+ Register New Client</Button>\n        </Grid.Column>\n      </Grid>\n\n      <Grid container columns={1} padded>\n        <Grid.Column>\n          <Form>\n            <Form.Group>\n              <Form.Input\n                placeholder='Name, Email, Id Number ...'\n                name='name'\n                onChange={handleOnSearch}\n              />\n              <Form.Button icon size={'medium'} onClick={(e) => { e.preventDefault() }}>\n                <Icon name=\"search\" />\n            Find Client\n          </Form.Button>\n            </Form.Group>\n          </Form>\n        </Grid.Column>\n      </Grid>\n\n      <Grid container columns={1} padded>\n        <Grid.Column>\n          <Tab panes={panes} />\n\n        </Grid.Column>\n      </Grid>\n\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}